

Microchip Technology PIC18 LITE Macro Assembler V1.42 build -159332390 
                                                                                               Mon Aug 12 16:58:07 2019

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    37                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    38                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    39  0000                     
    40                           ; Version 1.42
    41                           ; Generated 13/04/2017 GMT
    42                           ; 
    43                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC18F46K22 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74  0000                     
    75                           	psect	idataBANK0
    76  000E14                     __pidataBANK0:
    77                           	opt stack 0
    78                           
    79                           ;initializer for _BAT
    80  000E14  000C               	dw	12
    81                           
    82                           ;initializer for _Lambda
    83  000E16  0001               	dw	1
    84  0000                     _TMR6	set	3916
    85  0000                     _T6CONbits	set	3914
    86  0000                     _TMR4	set	3923
    87  0000                     _T4CONbits	set	3921
    88  0000                     _TMR5H	set	3920
    89  0000                     _TMR5L	set	3919
    90  0000                     _T5CONbits	set	3918
    91  0000                     _ANSELE	set	3900
    92  0000                     _ANSELD	set	3899
    93  0000                     _ANSELC	set	3898
    94  0000                     _ANSELB	set	3897
    95  0000                     _ANSELA	set	3896
    96  0000                     _LATBbits	set	3978
    97  0000                     _LATEbits	set	3981
    98  0000                     _TRISEbits	set	3990
    99  0000                     _PIE1bits	set	3997
   100  0000                     _SSP1ADD	set	4040
   101  0000                     _SSP1CON2	set	4037
   102  0000                     _TRISCbits	set	3988
   103  0000                     _SSP2STATbits	set	3949
   104  0000                     _SSP2STAT	set	3949
   105  0000                     _SSP2CON1	set	3948
   106  0000                     _SSP2BUF	set	3951
   107  0000                     _SSP1STAT	set	4039
   108  0000                     _SSP1CON1	set	4038
   109  0000                     _TMR0L	set	4054
   110  0000                     _TMR0H	set	4055
   111  0000                     _T0CONbits	set	4053
   112  0000                     _TMR2	set	4028
   113  0000                     _T2CONbits	set	4026
   114  0000                     _TMR3H	set	4019
   115  0000                     _TMR3L	set	4018
   116  0000                     _T3CONbits	set	4017
   117  0000                     _TMR1L	set	4046
   118  0000                     _TMR1H	set	4047
   119  0000                     _T1CONbits	set	4045
   120  0000                     _INTCON2bits	set	4081
   121  0000                     _ADRESH	set	4036
   122  0000                     _ADCON0bits	set	4034
   123  0000                     _ADCON1bits	set	4033
   124  0000                     _ADCON2bits	set	4032
   125  0000                     _RCREG2	set	3956
   126  0000                     _TXREG2	set	3955
   127  0000                     _TXREG1	set	4013
   128  0000                     _BAUDCON2bits	set	3952
   129  0000                     _TXSTA2	set	3954
   130  0000                     _RCSTA2	set	3953
   131  0000                     _SPBRG1	set	4015
   132  0000                     _BAUDCON1bits	set	4024
   133  0000                     _TXSTA1	set	4012
   134  0000                     _RCSTA1	set	4011
   135  0000                     _INTCON3bits	set	4080
   136  0000                     _LATCbits	set	3979
   137  0000                     _RCONbits	set	4048
   138  0000                     _INTCONbits	set	4082
   139  0000                     _TRISE	set	3990
   140  0000                     _TRISBbits	set	3987
   141  0000                     _PORTB	set	3969
   142  0000                     _TRISAbits	set	3986
   143  0000                     _PIE2bits	set	4000
   144  0000                     _PIR2bits	set	4001
   145  0000                     _RCREG1	set	4014
   146  0000                     _RCSTA1bits	set	4011
   147  0000                     _SSP1STATbits	set	4039
   148  0000                     _SSP1BUF	set	4041
   149  0000                     _SSP1CON1bits	set	4038
   150  0000                     _LATAbits	set	3977
   151  0000                     _PIR1bits	set	3998
   152  0000                     _TRISD3	set	31915
   153  0000                     _TRISD4	set	31916
   154  0000                     _TRISD1	set	31913
   155  0000                     _TRISD0	set	31912
   156  0000                     _TRISC5	set	31909
   157  0000                     _TRISC4	set	31908
   158  0000                     _TRISC3	set	31907
   159  0000                     _TRISA5	set	31893
   160  0000                     _SSP1IP	set	31995
   161  0000                     _TMR5IE	set	31721
   162  0000                     _TMR3IE	set	32001
   163  0000                     _TMR1IE	set	31976
   164  0000                     _TRISB2	set	31898
   165  0000                     _TRISB1	set	31897
   166  0000                     _TRISB0	set	31896
   167  0000                     _RC2IF	set	32037
   168  0000                     _RC1IF	set	31989
   169  0000                     _TX2IF	set	32036
   170  0000                     _TRMT1	set	32097
   171  0000                     _TX2IE	set	32028
   172  0000                     _RC2IE	set	32029
   173  0000                     _TRISD7	set	31919
   174  0000                     _TRISD6	set	31918
   175  0000                     _TX1IE	set	31980
   176  0000                     _TRISC2	set	31906
   177  0000                     _TRISC0	set	31904
   178  0000                     _TRISC1	set	31905
   179  0000                     _TRISA0	set	31888
   180  0000                     _TRISB7	set	31903
   181  0000                     _TRISC6	set	31910
   182  0000                     _TRISC7	set	31911
   183  0000                     _RC1IE	set	31981
   184  0000                     _RCIF	set	31989
   185                           
   186                           ; #config settings
   187  0000                     
   188                           	psect	cinit
   189  000C6A                     __pcinit:
   190                           	opt stack 0
   191  000C6A                     start_initialization:
   192                           	opt stack 0
   193  000C6A                     __initialization:
   194                           	opt stack 0
   195                           
   196                           ; Initialize objects allocated to BANK0 (4 bytes)
   197                           ; load TBLPTR registers with __pidataBANK0
   198  000C6A  0E14               	movlw	low __pidataBANK0
   199  000C6C  6EF6               	movwf	tblptrl,c
   200  000C6E  0E0E               	movlw	high __pidataBANK0
   201  000C70  6EF7               	movwf	tblptrh,c
   202  000C72  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   203  000C74  6EF8               	movwf	tblptru,c
   204  000C76  EE00  F0F9         	lfsr	0,__pdataBANK0
   205  000C7A  EE10 F004          	lfsr	1,4
   206  000C7E                     copy_data0:
   207  000C7E  0009               	tblrd		*+
   208  000C80  CFF5 FFEE          	movff	tablat,postinc0
   209  000C84  50E5               	movf	postdec1,w,c
   210  000C86  50E1               	movf	fsr1l,w,c
   211  000C88  E1FA               	bnz	copy_data0
   212                           
   213                           ; Clear objects allocated to BANK1 (72 bytes)
   214  000C8A  EE01  F000         	lfsr	0,__pbssBANK1
   215  000C8E  0E48               	movlw	72
   216  000C90                     clear_0:
   217  000C90  6AEE               	clrf	postinc0,c
   218  000C92  06E8               	decf	wreg,f,c
   219  000C94  E1FD               	bnz	clear_0
   220                           
   221                           ; Clear objects allocated to BANK0 (135 bytes)
   222  000C96  EE00  F060         	lfsr	0,__pbssBANK0
   223  000C9A  0E87               	movlw	135
   224  000C9C                     clear_1:
   225  000C9C  6AEE               	clrf	postinc0,c
   226  000C9E  06E8               	decf	wreg,f,c
   227  000CA0  E1FD               	bnz	clear_1
   228                           
   229                           ; Clear objects allocated to BITCOMRAM (2 bytes)
   230  000CA2  6A4E               	clrf	((__pbitbssCOMRAM/(0+8)+1))& (0+255),c
   231  000CA4  6A4D               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   232                           
   233                           ; Clear objects allocated to COMRAM (14 bytes)
   234  000CA6  EE00  F03F         	lfsr	0,__pbssCOMRAM
   235  000CAA  0E0E               	movlw	14
   236  000CAC                     clear_2:
   237  000CAC  6AEE               	clrf	postinc0,c
   238  000CAE  06E8               	decf	wreg,f,c
   239  000CB0  E1FD               	bnz	clear_2
   240  000CB2                     end_of_initialization:
   241                           	opt stack 0
   242  000CB2                     __end_of__initialization:
   243                           	opt stack 0
   244  000CB2  904F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   245  000CB4  924F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   246  000CB6  0E00               	movlw	low (__Lmediumconst shr (0+16))
   247  000CB8  6EF8               	movwf	tblptru,c
   248  000CBA  0100               	movlb	0
   249  000CBC  EF4C  F002         	goto	_main	;jump to C main() function
   250                           tblptru	equ	0xFF8
   251                           tblptrh	equ	0xFF7
   252                           tblptrl	equ	0xFF6
   253                           tablat	equ	0xFF5
   254                           postinc0	equ	0xFEE
   255                           wreg	equ	0xFE8
   256                           postdec1	equ	0xFE5
   257                           fsr1l	equ	0xFE1
   258                           
   259                           	psect	bitbssCOMRAM
   260  000268                     __pbitbssCOMRAM:
   261                           	opt stack 0
   262  000268                     _final_i2c_gerenciamento:
   263                           	opt stack 0
   264  000268                     	ds	1
   265  000269                     _final_i2c_admissao:
   266                           	opt stack 0
   267  000269                     	ds	1
   268  00026A                     _final_i2c_sincronismo:
   269                           	opt stack 0
   270  00026A                     	ds	1
   271  00026B                     _flag_send_adm:
   272                           	opt stack 0
   273  00026B                     	ds	1
   274  00026C                     _flag_send_ger:
   275                           	opt stack 0
   276  00026C                     	ds	1
   277  00026D                     _flag_send_sinc:
   278                           	opt stack 0
   279  00026D                     	ds	1
   280  00026E                     _flag:
   281                           	opt stack 0
   282  00026E                     	ds	1
   283  00026F                     _shit:
   284                           	opt stack 0
   285  00026F                     	ds	1
   286  000270                     _logica:
   287                           	opt stack 0
   288  000270                     	ds	1
   289                           tblptru	equ	0xFF8
   290                           tblptrh	equ	0xFF7
   291                           tblptrl	equ	0xFF6
   292                           tablat	equ	0xFF5
   293                           postinc0	equ	0xFEE
   294                           wreg	equ	0xFE8
   295                           postdec1	equ	0xFE5
   296                           fsr1l	equ	0xFE1
   297                           
   298                           	psect	bssCOMRAM
   299  00003F                     __pbssCOMRAM:
   300                           	opt stack 0
   301  00003F                     _index_read:
   302                           	opt stack 0
   303  00003F                     	ds	1
   304  000040                     _index:
   305                           	opt stack 0
   306  000040                     	ds	1
   307  000041                     _Rot2:
   308                           	opt stack 0
   309  000041                     	ds	1
   310  000042                     _Rot1:
   311                           	opt stack 0
   312  000042                     	ds	1
   313  000043                     _ref_vb:
   314                           	opt stack 0
   315  000043                     	ds	1
   316  000044                     _IjDnt:
   317                           	opt stack 0
   318  000044                     	ds	1
   319  000045                     _estado_controle_ign:
   320                           	opt stack 0
   321  000045                     	ds	1
   322  000046                     _TmrInj2:
   323                           	opt stack 0
   324  000046                     	ds	1
   325  000047                     _TmrInj1:
   326                           	opt stack 0
   327  000047                     	ds	1
   328  000048                     _IgDnt:
   329                           	opt stack 0
   330  000048                     	ds	1
   331  000049                     _Select_Data:
   332                           	opt stack 0
   333  000049                     	ds	1
   334  00004A                     _flag_serial:
   335                           	opt stack 0
   336  00004A                     	ds	1
   337  00004B                     _char_serial:
   338                           	opt stack 0
   339  00004B                     	ds	1
   340  00004C                     _char_serial_ant:
   341                           	opt stack 0
   342  00004C                     	ds	1
   343                           tblptru	equ	0xFF8
   344                           tblptrh	equ	0xFF7
   345                           tblptrl	equ	0xFF6
   346                           tablat	equ	0xFF5
   347                           postinc0	equ	0xFEE
   348                           wreg	equ	0xFE8
   349                           postdec1	equ	0xFE5
   350                           fsr1l	equ	0xFE1
   351                           
   352                           	psect	bssBANK0
   353  000060                     __pbssBANK0:
   354                           	opt stack 0
   355  000060                     _buffer_already:
   356                           	opt stack 0
   357  000060                     	ds	20
   358  000074                     _buffer:
   359                           	opt stack 0
   360  000074                     	ds	20
   361  000088                     _rotacao_4:
   362                           	opt stack 0
   363  000088                     	ds	4
   364  00008C                     _rotacao:
   365                           	opt stack 0
   366  00008C                     	ds	4
   367  000090                     _buffer_ger:
   368                           	opt stack 0
   369  000090                     	ds	3
   370  000093                     _p_etanol:
   371                           	opt stack 0
   372  000093                     	ds	3
   373  000096                     _tempo:
   374                           	opt stack 0
   375  000096                     	ds	3
   376  000099                     _tempo_inj_com:
   377                           	opt stack 0
   378  000099                     	ds	3
   379  00009C                     _VarTest:
   380                           	opt stack 0
   381  00009C                     	ds	2
   382  00009E                     _i:
   383                           	opt stack 0
   384  00009E                     	ds	2
   385  0000A0                     _percent:
   386                           	opt stack 0
   387  0000A0                     	ds	2
   388  0000A2                     _tmr:
   389                           	opt stack 0
   390  0000A2                     	ds	2
   391  0000A4                     _CountSerial:
   392                           	opt stack 0
   393  0000A4                     	ds	2
   394  0000A6                     _CountCANTemp:
   395                           	opt stack 0
   396  0000A6                     	ds	2
   397  0000A8                     _CountCANRot:
   398                           	opt stack 0
   399  0000A8                     	ds	2
   400  0000AA                     _UpdateRot:
   401                           	opt stack 0
   402  0000AA                     	ds	2
   403  0000AC                     _TempMotor:
   404                           	opt stack 0
   405  0000AC                     	ds	2
   406  0000AE                     _Count:
   407                           	opt stack 0
   408  0000AE                     	ds	2
   409  0000B0                     _VB:
   410                           	opt stack 0
   411  0000B0                     	ds	2
   412  0000B2                     _porc_etanol:
   413                           	opt stack 0
   414  0000B2                     	ds	2
   415  0000B4                     _cont_SCC:
   416                           	opt stack 0
   417  0000B4                     	ds	2
   418  0000B6                     _ij_tmr_disparo:
   419                           	opt stack 0
   420  0000B6                     	ds	2
   421  0000B8                     _ig_tmr_disparo:
   422                           	opt stack 0
   423  0000B8                     	ds	2
   424  0000BA                     _ref_rpm:
   425                           	opt stack 0
   426  0000BA                     	ds	2
   427  0000BC                     _t_agua:
   428                           	opt stack 0
   429  0000BC                     	ds	2
   430  0000BE                     _t_ar_com:
   431                           	opt stack 0
   432  0000BE                     	ds	2
   433  0000C0                     _temp_bob:
   434                           	opt stack 0
   435  0000C0                     	ds	2
   436  0000C2                     _ij_dente_14:
   437                           	opt stack 0
   438  0000C2                     	ds	2
   439  0000C4                     _tempo_inj:
   440                           	opt stack 0
   441  0000C4                     	ds	2
   442  0000C6                     _tempo_bob:
   443                           	opt stack 0
   444  0000C6                     	ds	2
   445  0000C8                     _ig_dente_14:
   446                           	opt stack 0
   447  0000C8                     	ds	2
   448  0000CA                     _map:
   449                           	opt stack 0
   450  0000CA                     	ds	2
   451  0000CC                     _pedal_ad:
   452                           	opt stack 0
   453  0000CC                     	ds	2
   454  0000CE                     _teste_envio_william:
   455                           	opt stack 0
   456  0000CE                     	ds	2
   457  0000D0                     _spi_ctr:
   458                           	opt stack 0
   459  0000D0                     	ds	2
   460  0000D2                     _lcd_ctr:
   461                           	opt stack 0
   462  0000D2                     	ds	2
   463  0000D4                     _can_ctr:
   464                           	opt stack 0
   465  0000D4                     	ds	2
   466  0000D6                     _limpa:
   467                           	opt stack 0
   468  0000D6                     	ds	1
   469  0000D7                     _address:
   470                           	opt stack 0
   471  0000D7                     	ds	1
   472  0000D8                     _dado_i2c:
   473                           	opt stack 0
   474  0000D8                     	ds	1
   475  0000D9                     _angle2:
   476                           	opt stack 0
   477  0000D9                     	ds	1
   478  0000DA                     _angle1:
   479                           	opt stack 0
   480  0000DA                     	ds	1
   481  0000DB                     _TempAg:
   482                           	opt stack 0
   483  0000DB                     	ds	1
   484  0000DC                     _TempAr:
   485                           	opt stack 0
   486  0000DC                     	ds	1
   487  0000DD                     _MAP:
   488                           	opt stack 0
   489  0000DD                     	ds	1
   490  0000DE                     _Pedal:
   491                           	opt stack 0
   492  0000DE                     	ds	1
   493  0000DF                     _SetVetVel2:
   494                           	opt stack 0
   495  0000DF                     	ds	1
   496  0000E0                     _InjDntExtra:
   497                           	opt stack 0
   498  0000E0                     	ds	1
   499  0000E1                     _IgTrigger:
   500                           	opt stack 0
   501  0000E1                     	ds	1
   502  0000E2                     _TmrBob:
   503                           	opt stack 0
   504  0000E2                     	ds	1
   505  0000E3                     _InjTrigger2:
   506                           	opt stack 0
   507  0000E3                     	ds	1
   508  0000E4                     _InjTrigger1:
   509                           	opt stack 0
   510  0000E4                     	ds	1
   511  0000E5                     _SCC:
   512                           	opt stack 0
   513  0000E5                     	ds	2
   514                           tblptru	equ	0xFF8
   515                           tblptrh	equ	0xFF7
   516                           tblptrl	equ	0xFF6
   517                           tablat	equ	0xFF5
   518                           postinc0	equ	0xFEE
   519                           wreg	equ	0xFE8
   520                           postdec1	equ	0xFE5
   521                           fsr1l	equ	0xFE1
   522                           
   523                           	psect	dataBANK0
   524  0000F9                     __pdataBANK0:
   525                           	opt stack 0
   526  0000F9                     _BAT:
   527                           	opt stack 0
   528  0000F9                     	ds	2
   529  0000FB                     _Lambda:
   530                           	opt stack 0
   531  0000FB                     	ds	2
   532                           tblptru	equ	0xFF8
   533                           tblptrh	equ	0xFF7
   534                           tblptrl	equ	0xFF6
   535                           tablat	equ	0xFF5
   536                           postinc0	equ	0xFEE
   537                           wreg	equ	0xFE8
   538                           postdec1	equ	0xFE5
   539                           fsr1l	equ	0xFE1
   540                           
   541                           	psect	bssBANK1
   542  000100                     __pbssBANK1:
   543                           	opt stack 0
   544  000100                     _Old_Value:
   545                           	opt stack 0
   546  000100                     	ds	22
   547  000116                     _buffer_read:
   548                           	opt stack 0
   549  000116                     	ds	20
   550  00012A                     _txbuff:
   551                           	opt stack 0
   552  00012A                     	ds	16
   553  00013A                     _valor:
   554                           	opt stack 0
   555  00013A                     	ds	14
   556                           tblptru	equ	0xFF8
   557                           tblptrh	equ	0xFF7
   558                           tblptrl	equ	0xFF6
   559                           tablat	equ	0xFF5
   560                           postinc0	equ	0xFEE
   561                           wreg	equ	0xFE8
   562                           postdec1	equ	0xFE5
   563                           fsr1l	equ	0xFE1
   564                           
   565                           	psect	cstackBANK1
   566  000148                     __pcstackBANK1:
   567                           	opt stack 0
   568  000148                     ___fttol@sign1:
   569                           	opt stack 0
   570                           
   571                           ; 1 bytes @ 0x0
   572  000148                     	ds	1
   573  000149                     ___fttol@lval:
   574                           	opt stack 0
   575                           
   576                           ; 4 bytes @ 0x1
   577  000149                     	ds	4
   578  00014D                     ___fttol@exp1:
   579                           	opt stack 0
   580                           
   581                           ; 1 bytes @ 0x5
   582  00014D                     	ds	1
   583                           tblptru	equ	0xFF8
   584                           tblptrh	equ	0xFF7
   585                           tblptrl	equ	0xFF6
   586                           tablat	equ	0xFF5
   587                           postinc0	equ	0xFEE
   588                           wreg	equ	0xFE8
   589                           postdec1	equ	0xFE5
   590                           fsr1l	equ	0xFE1
   591                           
   592                           	psect	cstackBANK0
   593  0000E7                     __pcstackBANK0:
   594                           	opt stack 0
   595  0000E7                     ?___ftadd:
   596                           	opt stack 0
   597  0000E7                     ___ftadd@f1:
   598                           	opt stack 0
   599                           
   600                           ; 3 bytes @ 0x0
   601  0000E7                     	ds	3
   602  0000EA                     ___ftadd@f2:
   603                           	opt stack 0
   604                           
   605                           ; 3 bytes @ 0x3
   606  0000EA                     	ds	3
   607  0000ED                     ___ftadd@sign:
   608                           	opt stack 0
   609                           
   610                           ; 1 bytes @ 0x6
   611  0000ED                     	ds	1
   612  0000EE                     ___ftadd@exp2:
   613                           	opt stack 0
   614                           
   615                           ; 1 bytes @ 0x7
   616  0000EE                     	ds	1
   617  0000EF                     ___ftadd@exp1:
   618                           	opt stack 0
   619                           
   620                           ; 1 bytes @ 0x8
   621  0000EF                     	ds	1
   622  0000F0                     ?___fttol:
   623                           	opt stack 0
   624  0000F0                     ___fttol@f1:
   625                           	opt stack 0
   626                           
   627                           ; 3 bytes @ 0x9
   628  0000F0                     	ds	4
   629  0000F4                     ??___fttol:
   630                           
   631                           ; 1 bytes @ 0xD
   632  0000F4                     	ds	5
   633                           tblptru	equ	0xFF8
   634                           tblptrh	equ	0xFF7
   635                           tblptrl	equ	0xFF6
   636                           tablat	equ	0xFF5
   637                           postinc0	equ	0xFEE
   638                           wreg	equ	0xFE8
   639                           postdec1	equ	0xFE5
   640                           fsr1l	equ	0xFE1
   641                           
   642                           	psect	cstackCOMRAM
   643  000001                     __pcstackCOMRAM:
   644                           	opt stack 0
   645  000001                     i2Set_Timer3@data_timer:
   646                           	opt stack 0
   647                           
   648                           ; 2 bytes @ 0x0
   649  000001                     	ds	2
   650  000003                     ??_isr:
   651  000003                     
   652                           ; 1 bytes @ 0x2
   653  000003                     	ds	14
   654  000011                     ?_Make16:
   655                           	opt stack 0
   656  000011                     ?___ftpack:
   657                           	opt stack 0
   658  000011                     ?___aldiv:
   659                           	opt stack 0
   660  000011                     Make16@data2:
   661                           	opt stack 0
   662  000011                     Putc_TX1@valor:
   663                           	opt stack 0
   664  000011                     I2C_Slave_Init@address:
   665                           	opt stack 0
   666  000011                     Set_Timer3@data_timer:
   667                           	opt stack 0
   668  000011                     ___ftpack@arg:
   669                           	opt stack 0
   670  000011                     ___aldiv@dividend:
   671                           	opt stack 0
   672                           
   673                           ; 4 bytes @ 0x10
   674  000011                     	ds	1
   675  000012                     Putc_TX1_16bits@dado:
   676                           	opt stack 0
   677                           
   678                           ; 2 bytes @ 0x11
   679  000012                     	ds	1
   680  000013                     ??_Make16:
   681                           
   682                           ; 1 bytes @ 0x12
   683  000013                     	ds	1
   684  000014                     Putc_TX1_16bits@msb:
   685                           	opt stack 0
   686  000014                     ___ftpack@exp:
   687                           	opt stack 0
   688                           
   689                           ; 1 bytes @ 0x13
   690  000014                     	ds	1
   691  000015                     Make16@data1:
   692                           	opt stack 0
   693  000015                     Putc_TX1_16bits@lsb:
   694                           	opt stack 0
   695  000015                     ___ftpack@sign:
   696                           	opt stack 0
   697  000015                     ___aldiv@divisor:
   698                           	opt stack 0
   699                           
   700                           ; 4 bytes @ 0x14
   701  000015                     	ds	1
   702  000016                     ??___ftpack:
   703                           
   704                           ; 1 bytes @ 0x15
   705  000016                     	ds	3
   706  000019                     ?___lwtoft:
   707                           	opt stack 0
   708  000019                     ___aldiv@counter:
   709                           	opt stack 0
   710  000019                     ___lwtoft@c:
   711                           	opt stack 0
   712                           
   713                           ; 2 bytes @ 0x18
   714  000019                     	ds	1
   715  00001A                     ___aldiv@sign:
   716                           	opt stack 0
   717                           
   718                           ; 1 bytes @ 0x19
   719  00001A                     	ds	1
   720  00001B                     ___aldiv@quotient:
   721                           	opt stack 0
   722                           
   723                           ; 4 bytes @ 0x1A
   724  00001B                     	ds	1
   725  00001C                     ?___ftmul:
   726                           	opt stack 0
   727  00001C                     ___ftmul@f1:
   728                           	opt stack 0
   729                           
   730                           ; 3 bytes @ 0x1B
   731  00001C                     	ds	3
   732  00001F                     ___ftmul@f2:
   733                           	opt stack 0
   734  00001F                     Init1_RS232@velocity:
   735                           	opt stack 0
   736                           
   737                           ; 4 bytes @ 0x1E
   738  00001F                     	ds	3
   739  000022                     ??___ftmul:
   740                           
   741                           ; 1 bytes @ 0x21
   742  000022                     	ds	1
   743  000023                     Init1_RS232@mode:
   744                           	opt stack 0
   745                           
   746                           ; 2 bytes @ 0x22
   747  000023                     	ds	2
   748  000025                     ___ftmul@exp:
   749                           	opt stack 0
   750  000025                     Init1_RS232@value:
   751                           	opt stack 0
   752                           
   753                           ; 2 bytes @ 0x24
   754  000025                     	ds	1
   755  000026                     ___ftmul@f3_as_product:
   756                           	opt stack 0
   757                           
   758                           ; 3 bytes @ 0x25
   759  000026                     	ds	1
   760  000027                     _Init1_RS232$3408:
   761                           	opt stack 0
   762                           
   763                           ; 4 bytes @ 0x26
   764  000027                     	ds	2
   765  000029                     ___ftmul@cntr:
   766                           	opt stack 0
   767                           
   768                           ; 1 bytes @ 0x28
   769  000029                     	ds	1
   770  00002A                     ___ftmul@sign:
   771                           	opt stack 0
   772                           
   773                           ; 1 bytes @ 0x29
   774  00002A                     	ds	1
   775  00002B                     ?___ftdiv:
   776                           	opt stack 0
   777  00002B                     ___ftdiv@f1:
   778                           	opt stack 0
   779                           
   780                           ; 3 bytes @ 0x2A
   781  00002B                     	ds	3
   782  00002E                     ___ftdiv@f2:
   783                           	opt stack 0
   784                           
   785                           ; 3 bytes @ 0x2D
   786  00002E                     	ds	3
   787  000031                     ??___ftdiv:
   788                           
   789                           ; 1 bytes @ 0x30
   790  000031                     	ds	3
   791  000034                     ___ftdiv@cntr:
   792                           	opt stack 0
   793                           
   794                           ; 1 bytes @ 0x33
   795  000034                     	ds	1
   796  000035                     ___ftdiv@f3:
   797                           	opt stack 0
   798                           
   799                           ; 3 bytes @ 0x34
   800  000035                     	ds	3
   801  000038                     ___ftdiv@exp:
   802                           	opt stack 0
   803                           
   804                           ; 1 bytes @ 0x37
   805  000038                     	ds	1
   806  000039                     ___ftdiv@sign:
   807                           	opt stack 0
   808                           
   809                           ; 1 bytes @ 0x38
   810  000039                     	ds	1
   811  00003A                     ??___ftadd:
   812                           
   813                           ; 1 bytes @ 0x39
   814  00003A                     	ds	3
   815  00003D                     ??_main:
   816                           
   817                           ; 1 bytes @ 0x3C
   818  00003D                     	ds	2
   819                           tblptru	equ	0xFF8
   820                           tblptrh	equ	0xFF7
   821                           tblptrl	equ	0xFF6
   822                           tablat	equ	0xFF5
   823                           postinc0	equ	0xFEE
   824                           wreg	equ	0xFE8
   825                           postdec1	equ	0xFE5
   826                           fsr1l	equ	0xFE1
   827                           
   828 ;;
   829 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   830 ;;
   831 ;; *************** function _main *****************
   832 ;; Defined at:
   833 ;;		line 500 in file "main.c"
   834 ;; Parameters:    Size  Location     Type
   835 ;;		None
   836 ;; Auto vars:     Size  Location     Type
   837 ;;		None
   838 ;; Return value:  Size  Location     Type
   839 ;;                  1    wreg      void 
   840 ;; Registers used:
   841 ;;		wreg, status,2, status,0, cstack
   842 ;; Tracked objects:
   843 ;;		On entry : 0/0
   844 ;;		On exit  : 0/0
   845 ;;		Unchanged: 0/0
   846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   849 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   850 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   851 ;;Total ram usage:        2 bytes
   852 ;; Hardware stack levels required when called:    5
   853 ;; This function calls:
   854 ;;		_Config_Timer0
   855 ;;		_ConfigureHW
   856 ;;		_I2C_Slave_Init
   857 ;;		_Make16
   858 ;;		_Putc_TX1
   859 ;;		_Putc_TX1_16bits
   860 ;;		_Set_Timer3
   861 ;;		___ftadd
   862 ;;		___ftdiv
   863 ;;		___ftmul
   864 ;;		___fttol
   865 ;;		___lwtoft
   866 ;; This function is called by:
   867 ;;		Startup code after reset
   868 ;; This function uses a non-reentrant model
   869 ;;
   870                           
   871                           	psect	text0
   872  000498                     __ptext0:
   873                           	opt stack 0
   874  000498                     _main:
   875                           	opt stack 26
   876                           
   877                           ;main.c: 502: ConfigureHW();
   878                           
   879                           ;incstack = 0
   880  000498  EC60  F006         	call	_ConfigureHW	;wreg free
   881                           
   882                           ;main.c: 503: _delay((unsigned long)((10)*(40000000/4000.0)));
   883  00049C  0E82               	movlw	130
   884  00049E  6E3D               	movwf	??_main& (0+255),c
   885  0004A0  0EDE               	movlw	222
   886  0004A2                     u3017:
   887  0004A2  2EE8               	decfsz	wreg,f,c
   888  0004A4  D7FE               	bra	u3017
   889  0004A6  2E3D               	decfsz	??_main& (0+255),f,c
   890  0004A8  D7FC               	bra	u3017
   891                           
   892                           ;main.c: 505: (INTCONbits.GIE = 1);
   893  0004AA  8EF2               	bsf	intcon,7,c	;volatile
   894                           
   895                           ;main.c: 506: (INTCONbits.PEIE = 1);
   896  0004AC  8CF2               	bsf	intcon,6,c	;volatile
   897                           
   898                           ;main.c: 509: (PIE2bits.TMR3IE = 1);
   899  0004AE  82A0               	bsf	4000,1,c	;volatile
   900                           
   901                           ;main.c: 510: RCONbits.IPEN = 0;
   902  0004B0  9ED0               	bcf	4048,7,c	;volatile
   903                           
   904                           ;main.c: 512: Config_Timer0();
   905  0004B2  ECF7  F006         	call	_Config_Timer0	;wreg free
   906                           
   907                           ;main.c: 514: Set_Timer3(55535);
   908  0004B6  0ED8               	movlw	216
   909  0004B8  6E12               	movwf	Set_Timer3@data_timer+1,c
   910  0004BA  0EEF               	movlw	239
   911  0004BC  6E11               	movwf	Set_Timer3@data_timer,c
   912  0004BE  EC00  F007         	call	_Set_Timer3	;wreg free
   913                           
   914                           ;main.c: 516: LATCbits.LATC1 = 0;
   915  0004C2  928B               	bcf	3979,1,c	;volatile
   916                           
   917                           ;main.c: 517: LATCbits.LATC0 = 0;
   918  0004C4  908B               	bcf	3979,0,c	;volatile
   919                           
   920                           ;main.c: 518: LATAbits.LA0 = 1;
   921  0004C6  8089               	bsf	3977,0,c	;volatile
   922                           
   923                           ;main.c: 519: LATCbits.LATC2 = 1;
   924  0004C8  848B               	bsf	3979,2,c	;volatile
   925                           
   926                           ;main.c: 520: (INTCON3bits.INT2IE = 0);
   927  0004CA  98F0               	bcf	intcon3,4,c	;volatile
   928                           
   929                           ;main.c: 525: I2C_Slave_Init(0x30);
   930  0004CC  0E30               	movlw	48
   931  0004CE  EC87  F006         	call	_I2C_Slave_Init
   932  0004D2                     l3908:
   933                           
   934                           ;main.c: 528: {
   935                           ;main.c: 530: if(flag_serial == 2)
   936  0004D2  0E02               	movlw	2
   937  0004D4  184A               	xorwf	_flag_serial,w,c
   938  0004D6  A4D8               	btfss	status,2,c
   939  0004D8  D095               	goto	l3946
   940                           
   941                           ;main.c: 531: {
   942                           ;main.c: 532: if (char_serial_ant == 'R')
   943  0004DA  0E52               	movlw	82
   944  0004DC  184C               	xorwf	_char_serial_ant,w,c
   945  0004DE  B4D8               	btfsc	status,2,c
   946  0004E0  D07F               	goto	l3940
   947  0004E2  D08E               	goto	l3944
   948  0004E4                     l3914:
   949                           
   950                           ;main.c: 539: Putc_TX1(206);
   951  0004E4  0ECE               	movlw	206
   952  0004E6  ECE4  F006         	call	_Putc_TX1
   953                           
   954                           ;main.c: 540: Putc_TX1(125);
   955  0004EA  0E7D               	movlw	125
   956  0004EC  ECE4  F006         	call	_Putc_TX1
   957                           
   958                           ;main.c: 541: Putc_TX1(124);
   959  0004F0  0E7C               	movlw	124
   960  0004F2  ECE4  F006         	call	_Putc_TX1
   961                           
   962                           ;main.c: 543: break;
   963  0004F6  D084               	goto	l3944
   964  0004F8                     l3916:
   965                           
   966                           ;main.c: 547: rotacao = (Rot1 << 8) | Rot2;
   967  0004F8  5041               	movf	_Rot2,w,c
   968  0004FA  C042  F03D         	movff	_Rot1,??_main
   969  0004FE  6A3E               	clrf	(??_main+1)& (0+255),c
   970  000500  C03D  F03E         	movff	??_main,??_main+1
   971  000504  6A3D               	clrf	??_main,c
   972  000506  123D               	iorwf	??_main,f,c
   973  000508  0E00               	movlw	0
   974  00050A  123E               	iorwf	??_main+1,f,c
   975  00050C  C03D  F08C         	movff	??_main,_rotacao
   976  000510  C03E  F08D         	movff	??_main+1,_rotacao+1
   977  000514  0100               	movlb	0	; () banked
   978  000516  0E00               	movlw	0
   979  000518  BF8D               	btfsc	(_rotacao+1)& (0+255),7,b
   980  00051A  0EFF               	movlw	-1
   981  00051C  6F8E               	movwf	(_rotacao+2)& (0+255),b
   982  00051E  6F8F               	movwf	(_rotacao+3)& (0+255),b
   983                           
   984                           ; BSR set to: 0
   985                           ;main.c: 550: Putc_TX1_16bits(rotacao);
   986  000520  C08C  F012         	movff	_rotacao,Putc_TX1_16bits@dado
   987  000524  C08D  F013         	movff	_rotacao+1,Putc_TX1_16bits@dado+1
   988  000528  ECD9  F006         	call	_Putc_TX1_16bits	;wreg free
   989                           
   990                           ;main.c: 551: Putc_TX1_16bits(513);
   991  00052C  0E02               	movlw	2
   992  00052E  6E13               	movwf	Putc_TX1_16bits@dado+1,c
   993  000530  0E01               	movlw	1
   994  000532  6E12               	movwf	Putc_TX1_16bits@dado,c
   995  000534  ECD9  F006         	call	_Putc_TX1_16bits	;wreg free
   996                           
   997                           ;main.c: 552: Putc_TX1_16bits(1025);
   998  000538  0E04               	movlw	4
   999  00053A  6E13               	movwf	Putc_TX1_16bits@dado+1,c
  1000  00053C  0E01               	movlw	1
  1001  00053E  6E12               	movwf	Putc_TX1_16bits@dado,c
  1002  000540  ECD9  F006         	call	_Putc_TX1_16bits	;wreg free
  1003                           
  1004                           ;main.c: 553: Putc_TX1(53);
  1005  000544  0E35               	movlw	53
  1006  000546  ECE4  F006         	call	_Putc_TX1
  1007                           
  1008                           ;main.c: 554: Putc_TX1(54);
  1009  00054A  0E36               	movlw	54
  1010  00054C  ECE4  F006         	call	_Putc_TX1
  1011                           
  1012                           ;main.c: 555: Putc_TX1(55);
  1013  000550  0E37               	movlw	55
  1014  000552  ECE4  F006         	call	_Putc_TX1
  1015                           
  1016                           ;main.c: 559: Putc_TX1_16bits(2049);
  1017  000556  0E08               	movlw	8
  1018  000558  6E13               	movwf	Putc_TX1_16bits@dado+1,c
  1019  00055A  0E01               	movlw	1
  1020  00055C  6E12               	movwf	Putc_TX1_16bits@dado,c
  1021  00055E  ECD9  F006         	call	_Putc_TX1_16bits	;wreg free
  1022                           
  1023                           ;main.c: 638: break;
  1024  000562  D04E               	goto	l3944
  1025  000564                     l3932:
  1026                           
  1027                           ;main.c: 642: Putc_TX1_16bits(rotacao);
  1028  000564  C08C  F012         	movff	_rotacao,Putc_TX1_16bits@dado
  1029  000568  C08D  F013         	movff	_rotacao+1,Putc_TX1_16bits@dado+1
  1030  00056C  ECD9  F006         	call	_Putc_TX1_16bits	;wreg free
  1031                           
  1032                           ;main.c: 644: Putc_TX1_16bits(0);
  1033  000570  0E00               	movlw	0
  1034  000572  6E13               	movwf	Putc_TX1_16bits@dado+1,c
  1035  000574  0E00               	movlw	0
  1036  000576  6E12               	movwf	Putc_TX1_16bits@dado,c
  1037  000578  ECD9  F006         	call	_Putc_TX1_16bits	;wreg free
  1038                           
  1039                           ;main.c: 645: Putc_TX1(0);
  1040  00057C  0E00               	movlw	0
  1041  00057E  ECE4  F006         	call	_Putc_TX1
  1042                           
  1043                           ;main.c: 646: Putc_TX1(0);
  1044  000582  0E00               	movlw	0
  1045  000584  ECE4  F006         	call	_Putc_TX1
  1046                           
  1047                           ;main.c: 647: Putc_TX1(0);
  1048  000588  0E00               	movlw	0
  1049  00058A  ECE4  F006         	call	_Putc_TX1
  1050                           
  1051                           ;main.c: 648: Putc_TX1(0);
  1052  00058E  0E00               	movlw	0
  1053  000590  ECE4  F006         	call	_Putc_TX1
  1054                           
  1055                           ;main.c: 649: Putc_TX1_16bits(0);
  1056  000594  0E00               	movlw	0
  1057  000596  6E13               	movwf	Putc_TX1_16bits@dado+1,c
  1058  000598  0E00               	movlw	0
  1059  00059A  6E12               	movwf	Putc_TX1_16bits@dado,c
  1060  00059C  ECD9  F006         	call	_Putc_TX1_16bits	;wreg free
  1061                           
  1062                           ;main.c: 651: break;
  1063  0005A0  D02F               	goto	l3944
  1064  0005A2                     l3934:
  1065                           
  1066                           ;main.c: 655: Putc_TX1_16bits(257);
  1067  0005A2  0E01               	movlw	1
  1068  0005A4  6E13               	movwf	Putc_TX1_16bits@dado+1,c
  1069  0005A6  0E01               	movlw	1
  1070  0005A8  6E12               	movwf	Putc_TX1_16bits@dado,c
  1071  0005AA  ECD9  F006         	call	_Putc_TX1_16bits	;wreg free
  1072                           
  1073                           ;main.c: 656: Putc_TX1_16bits(513);
  1074  0005AE  0E02               	movlw	2
  1075  0005B0  6E13               	movwf	Putc_TX1_16bits@dado+1,c
  1076  0005B2  0E01               	movlw	1
  1077  0005B4  6E12               	movwf	Putc_TX1_16bits@dado,c
  1078  0005B6  ECD9  F006         	call	_Putc_TX1_16bits	;wreg free
  1079                           
  1080                           ;main.c: 659: break;
  1081  0005BA  D022               	goto	l3944
  1082  0005BC                     l3936:
  1083                           
  1084                           ;main.c: 663: Putc_TX1_16bits(rotacao);
  1085  0005BC  C08C  F012         	movff	_rotacao,Putc_TX1_16bits@dado
  1086  0005C0  C08D  F013         	movff	_rotacao+1,Putc_TX1_16bits@dado+1
  1087  0005C4  ECD9  F006         	call	_Putc_TX1_16bits	;wreg free
  1088                           
  1089                           ;main.c: 664: Putc_TX1_16bits(ref_vb);
  1090  0005C8  C043  F012         	movff	_ref_vb,Putc_TX1_16bits@dado
  1091  0005CC  6A13               	clrf	Putc_TX1_16bits@dado+1,c
  1092  0005CE  ECD9  F006         	call	_Putc_TX1_16bits	;wreg free
  1093                           
  1094                           ;main.c: 665: Putc_TX1_16bits(4);
  1095  0005D2  0E00               	movlw	0
  1096  0005D4  6E13               	movwf	Putc_TX1_16bits@dado+1,c
  1097  0005D6  0E04               	movlw	4
  1098  0005D8  6E12               	movwf	Putc_TX1_16bits@dado,c
  1099  0005DA  ECD9  F006         	call	_Putc_TX1_16bits	;wreg free
  1100                           
  1101                           ;main.c: 669: }
  1102                           
  1103                           ;main.c: 667: break;
  1104  0005DE  D010               	goto	l3944
  1105  0005E0                     l3940:
  1106  0005E0  504B               	movf	_char_serial,w,c
  1107                           
  1108                           ; Switch size 1, requested type "space"
  1109                           ; Number of cases is 5, Range of values is 49 to 53
  1110                           ; switch strategies available:
  1111                           ; Name         Instructions Cycles
  1112                           ; simple_byte           16     9 (average)
  1113                           ;	Chosen strategy is simple_byte
  1114  0005E2  0A31               	xorlw	49	; case 49
  1115  0005E4  B4D8               	btfsc	status,2,c
  1116  0005E6  D77E               	goto	l3914
  1117  0005E8  0A03               	xorlw	3	; case 50
  1118  0005EA  B4D8               	btfsc	status,2,c
  1119  0005EC  D785               	goto	l3916
  1120  0005EE  0A01               	xorlw	1	; case 51
  1121  0005F0  B4D8               	btfsc	status,2,c
  1122  0005F2  D7B8               	goto	l3932
  1123  0005F4  0A07               	xorlw	7	; case 52
  1124  0005F6  B4D8               	btfsc	status,2,c
  1125  0005F8  D7D4               	goto	l3934
  1126  0005FA  0A01               	xorlw	1	; case 53
  1127  0005FC  B4D8               	btfsc	status,2,c
  1128  0005FE  D7DE               	goto	l3936
  1129  000600                     l3944:
  1130                           
  1131                           ;main.c: 674: }
  1132                           ;main.c: 675: flag_serial = 0;
  1133  000600  0E00               	movlw	0
  1134  000602  6E4A               	movwf	_flag_serial,c
  1135  000604                     l3946:
  1136                           
  1137                           ;main.c: 676: }
  1138                           ;main.c: 678: if (spi_ctr >= Vet_Total )
  1139  000604  0100               	movlb	0	; () banked
  1140  000606  51D1               	movf	(_spi_ctr+1)& (0+255),w,b
  1141  000608  E105               	bnz	u2920
  1142  00060A  0E07               	movlw	7
  1143  00060C  0100               	movlb	0	; () banked
  1144  00060E  5DD0               	subwf	_spi_ctr& (0+255),w,b
  1145  000610  A0D8               	btfss	status,0,c
  1146  000612  D028               	goto	l3958
  1147  000614                     u2920:
  1148                           
  1149                           ; BSR set to: 0
  1150                           ;main.c: 679: {
  1151                           ;main.c: 680: spi_ctr = 0;
  1152  000614  0E00               	movlw	0
  1153  000616  0100               	movlb	0	; () banked
  1154  000618  6FD1               	movwf	(_spi_ctr+1)& (0+255),b
  1155  00061A  0E00               	movlw	0
  1156  00061C  6FD0               	movwf	_spi_ctr& (0+255),b
  1157                           
  1158                           ; BSR set to: 0
  1159                           ;main.c: 681: rotacao = Make16(valor[Vet_Rot1], valor[Vet_Rot2]);
  1160  00061E  C13C  F011         	movff	_valor+2,Make16@data2
  1161  000622  0101               	movlb	1	; () banked
  1162  000624  513A               	movf	_valor& (0+255),w,b
  1163  000626  ECBF  F006         	call	_Make16
  1164  00062A  C011  F08C         	movff	?_Make16,_rotacao
  1165  00062E  C012  F08D         	movff	?_Make16+1,_rotacao+1
  1166  000632  0100               	movlb	0	; () banked
  1167  000634  6B8E               	clrf	(_rotacao+2)& (0+255),b
  1168  000636  6B8F               	clrf	(_rotacao+3)& (0+255),b
  1169                           
  1170                           ; BSR set to: 0
  1171                           ;main.c: 686: map = valor[Vet_MAP];
  1172  000638  C13E  F0CA         	movff	_valor+4,_map
  1173  00063C  C13F  F0CB         	movff	_valor+5,_map+1
  1174                           
  1175                           ; BSR set to: 0
  1176                           ;main.c: 688: tempo_inj = Make16(valor[Vet_TmrInj1], valor[Vet_TmrInj2]);
  1177  000640  C142  F011         	movff	_valor+8,Make16@data2
  1178  000644  0101               	movlb	1	; () banked
  1179  000646  5140               	movf	(_valor+6)& (0+255),w,b
  1180  000648  ECBF  F006         	call	_Make16
  1181  00064C  C011  F0C4         	movff	?_Make16,_tempo_inj
  1182  000650  C012  F0C5         	movff	?_Make16+1,_tempo_inj+1
  1183                           
  1184                           ;main.c: 691: ref_vb = Make16(valor[Vet_VB1], valor[Vet_VB2]);
  1185  000654  C146  F011         	movff	_valor+12,Make16@data2
  1186  000658  0101               	movlb	1	; () banked
  1187  00065A  5144               	movf	(_valor+10)& (0+255),w,b
  1188  00065C  ECBF  F006         	call	_Make16
  1189  000660  5011               	movf	?_Make16,w,c
  1190  000662  6E43               	movwf	_ref_vb,c
  1191  000664                     l3958:
  1192                           
  1193                           ;main.c: 696: }
  1194                           ;main.c: 698: porc_etanol = (float) ((10000 / (SCC * 0.004)) - 50);
  1195  000664  0E00               	movlw	0
  1196  000666  0100               	movlb	0	; () banked
  1197  000668  6FEA               	movwf	___ftadd@f2& (0+255),b
  1198  00066A  0E48               	movlw	72
  1199  00066C  0100               	movlb	0	; () banked
  1200  00066E  6FEB               	movwf	(___ftadd@f2+1)& (0+255),b
  1201  000670  0EC2               	movlw	194
  1202  000672  0100               	movlb	0	; () banked
  1203  000674  6FEC               	movwf	(___ftadd@f2+2)& (0+255),b
  1204  000676  0E12               	movlw	18
  1205  000678  6E1F               	movwf	___ftmul@f2,c
  1206  00067A  0E83               	movlw	131
  1207  00067C  6E20               	movwf	___ftmul@f2+1,c
  1208  00067E  0E3B               	movlw	59
  1209  000680  6E21               	movwf	___ftmul@f2+2,c
  1210  000682  C0E5  F019         	movff	_SCC,___lwtoft@c
  1211  000686  C0E6  F01A         	movff	_SCC+1,___lwtoft@c+1
  1212  00068A  EC9D  F006         	call	___lwtoft	;wreg free
  1213  00068E  C019  F01C         	movff	?___lwtoft,___ftmul@f1
  1214  000692  C01A  F01D         	movff	?___lwtoft+1,___ftmul@f1+1
  1215  000696  C01B  F01E         	movff	?___lwtoft+2,___ftmul@f1+2
  1216  00069A  EC14  F004         	call	___ftmul	;wreg free
  1217  00069E  C01C  F02E         	movff	?___ftmul,___ftdiv@f2
  1218  0006A2  C01D  F02F         	movff	?___ftmul+1,___ftdiv@f2+1
  1219  0006A6  C01E  F030         	movff	?___ftmul+2,___ftdiv@f2+2
  1220  0006AA  0E40               	movlw	64
  1221  0006AC  6E2B               	movwf	___ftdiv@f1,c
  1222  0006AE  0E1C               	movlw	28
  1223  0006B0  6E2C               	movwf	___ftdiv@f1+1,c
  1224  0006B2  0E46               	movlw	70
  1225  0006B4  6E2D               	movwf	___ftdiv@f1+2,c
  1226  0006B6  EC05  F005         	call	___ftdiv	;wreg free
  1227  0006BA  C02B  F0E7         	movff	?___ftdiv,___ftadd@f1
  1228  0006BE  C02C  F0E8         	movff	?___ftdiv+1,___ftadd@f1+1
  1229  0006C2  C02D  F0E9         	movff	?___ftdiv+2,___ftadd@f1+2
  1230  0006C6  EC24  F001         	call	___ftadd	;wreg free
  1231  0006CA  C0E7  F0F0         	movff	?___ftadd,___fttol@f1
  1232  0006CE  C0E8  F0F1         	movff	?___ftadd+1,___fttol@f1+1
  1233  0006D2  C0E9  F0F2         	movff	?___ftadd+2,___fttol@f1+2
  1234  0006D6  EC72  F003         	call	___fttol	;wreg free
  1235  0006DA  C0F0  F0B2         	movff	?___fttol,_porc_etanol
  1236  0006DE  C0F1  F0B3         	movff	?___fttol+1,_porc_etanol+1
  1237  0006E2  D6F7               	goto	l3908
  1238  0006E4                     __end_of_main:
  1239                           	opt stack 0
  1240                           tblptru	equ	0xFF8
  1241                           tblptrh	equ	0xFF7
  1242                           tblptrl	equ	0xFF6
  1243                           tablat	equ	0xFF5
  1244                           intcon	equ	0xFF2
  1245                           intcon3	equ	0xFF0
  1246                           postinc0	equ	0xFEE
  1247                           wreg	equ	0xFE8
  1248                           postdec1	equ	0xFE5
  1249                           fsr1l	equ	0xFE1
  1250                           status	equ	0xFD8
  1251                           
  1252 ;; *************** function ___lwtoft *****************
  1253 ;; Defined at:
  1254 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\lwtoft.c"
  1255 ;; Parameters:    Size  Location     Type
  1256 ;;  c               2   24[COMRAM] unsigned int 
  1257 ;; Auto vars:     Size  Location     Type
  1258 ;;		None
  1259 ;; Return value:  Size  Location     Type
  1260 ;;                  3   24[COMRAM] float 
  1261 ;; Registers used:
  1262 ;;		wreg, status,2, status,0, cstack
  1263 ;; Tracked objects:
  1264 ;;		On entry : 0/0
  1265 ;;		On exit  : 0/0
  1266 ;;		Unchanged: 0/0
  1267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1268 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1271 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1272 ;;Total ram usage:        3 bytes
  1273 ;; Hardware stack levels used:    1
  1274 ;; Hardware stack levels required when called:    3
  1275 ;; This function calls:
  1276 ;;		___ftpack
  1277 ;; This function is called by:
  1278 ;;		_main
  1279 ;; This function uses a non-reentrant model
  1280 ;;
  1281                           
  1282                           	psect	text1
  1283  000D3A                     __ptext1:
  1284                           	opt stack 0
  1285  000D3A                     ___lwtoft:
  1286                           	opt stack 27
  1287                           
  1288                           ;incstack = 0
  1289  000D3A  C019  F011         	movff	___lwtoft@c,___ftpack@arg
  1290  000D3E  C01A  F012         	movff	___lwtoft@c+1,___ftpack@arg+1
  1291  000D42  6A13               	clrf	___ftpack@arg+2,c
  1292  000D44  0E8E               	movlw	142
  1293  000D46  6E14               	movwf	___ftpack@exp,c
  1294  000D48  0E00               	movlw	0
  1295  000D4A  6E15               	movwf	___ftpack@sign,c
  1296  000D4C  ECDE  F005         	call	___ftpack	;wreg free
  1297  000D50  C011  F019         	movff	?___ftpack,?___lwtoft
  1298  000D54  C012  F01A         	movff	?___ftpack+1,?___lwtoft+1
  1299  000D58  C013  F01B         	movff	?___ftpack+2,?___lwtoft+2
  1300  000D5C  0012               	return	
  1301  000D5E                     __end_of___lwtoft:
  1302                           	opt stack 0
  1303                           tblptru	equ	0xFF8
  1304                           tblptrh	equ	0xFF7
  1305                           tblptrl	equ	0xFF6
  1306                           tablat	equ	0xFF5
  1307                           intcon	equ	0xFF2
  1308                           intcon3	equ	0xFF0
  1309                           postinc0	equ	0xFEE
  1310                           wreg	equ	0xFE8
  1311                           postdec1	equ	0xFE5
  1312                           fsr1l	equ	0xFE1
  1313                           status	equ	0xFD8
  1314                           
  1315 ;; *************** function ___fttol *****************
  1316 ;; Defined at:
  1317 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\fttol.c"
  1318 ;; Parameters:    Size  Location     Type
  1319 ;;  f1              3    9[BANK0 ] float 
  1320 ;; Auto vars:     Size  Location     Type
  1321 ;;  lval            4    1[BANK1 ] unsigned long 
  1322 ;;  exp1            1    5[BANK1 ] unsigned char 
  1323 ;;  sign1           1    0[BANK1 ] unsigned char 
  1324 ;; Return value:  Size  Location     Type
  1325 ;;                  4    9[BANK0 ] long 
  1326 ;; Registers used:
  1327 ;;		wreg, status,2, status,0
  1328 ;; Tracked objects:
  1329 ;;		On entry : 0/0
  1330 ;;		On exit  : 0/0
  1331 ;;		Unchanged: 0/0
  1332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1333 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1334 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1335 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1336 ;;      Totals:         0       9       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1337 ;;Total ram usage:       15 bytes
  1338 ;; Hardware stack levels used:    1
  1339 ;; Hardware stack levels required when called:    2
  1340 ;; This function calls:
  1341 ;;		Nothing
  1342 ;; This function is called by:
  1343 ;;		_main
  1344 ;;		_lcdEscreverInt
  1345 ;;		_lcdEscreverFloat
  1346 ;; This function uses a non-reentrant model
  1347 ;;
  1348                           
  1349                           	psect	text2
  1350  0006E4                     __ptext2:
  1351                           	opt stack 0
  1352  0006E4                     ___fttol:
  1353                           	opt stack 28
  1354                           
  1355                           ;incstack = 0
  1356  0006E4  C0F2  F0F4         	movff	___fttol@f1+2,??___fttol
  1357  0006E8  0100               	movlb	0	; () banked
  1358  0006EA  6BF5               	clrf	(??___fttol+1)& (0+255),b
  1359  0006EC  6BF6               	clrf	(??___fttol+2)& (0+255),b
  1360  0006EE  0100               	movlb	0	; () banked
  1361  0006F0  35F1               	rlcf	(___fttol@f1+1)& (0+255),w,b
  1362  0006F2  0100               	movlb	0	; () banked
  1363  0006F4  37F4               	rlcf	??___fttol& (0+255),f,b
  1364  0006F6  E301               	bnc	u2821
  1365  0006F8  81F5               	bsf	(??___fttol+1)& (0+255),0,b
  1366  0006FA                     u2821:
  1367  0006FA  0100               	movlb	0	; () banked
  1368  0006FC  51F4               	movf	??___fttol& (0+255),w,b
  1369  0006FE  0101               	movlb	1	; () banked
  1370  000700  6F4D               	movwf	___fttol@exp1& (0+255),b
  1371  000702  0101               	movlb	1	; () banked
  1372  000704  514D               	movf	___fttol@exp1& (0+255),w,b
  1373  000706  A4D8               	btfss	status,2,c
  1374  000708  D00A               	goto	l3836
  1375                           
  1376                           ; BSR set to: 1
  1377  00070A  0E00               	movlw	0
  1378  00070C  0100               	movlb	0	; () banked
  1379  00070E  6FF0               	movwf	?___fttol& (0+255),b
  1380  000710  0E00               	movlw	0
  1381  000712  6FF1               	movwf	(?___fttol+1)& (0+255),b
  1382  000714  0E00               	movlw	0
  1383  000716  6FF2               	movwf	(?___fttol+2)& (0+255),b
  1384  000718  0E00               	movlw	0
  1385  00071A  6FF3               	movwf	(?___fttol+3)& (0+255),b
  1386                           
  1387                           ; BSR set to: 0
  1388  00071C  0012               	return	
  1389  00071E                     l3836:
  1390  00071E  0E17               	movlw	23
  1391  000720  0100               	movlb	0	; () banked
  1392  000722  6FF4               	movwf	??___fttol& (0+255),b
  1393  000724  C0F0  F0F5         	movff	___fttol@f1,??___fttol+1
  1394  000728  C0F1  F0F6         	movff	___fttol@f1+1,??___fttol+2
  1395  00072C  C0F2  F0F7         	movff	___fttol@f1+2,??___fttol+3
  1396  000730  0100               	movlb	0	; () banked
  1397  000732  29F4               	incf	??___fttol& (0+255),w,b
  1398  000734  0100               	movlb	0	; () banked
  1399  000736  6FF8               	movwf	(??___fttol+4)& (0+255),b
  1400  000738  D005               	goto	u2840
  1401  00073A                     u2845:
  1402  00073A  0100               	movlb	0	; () banked
  1403  00073C  90D8               	bcf	status,0,c
  1404  00073E  33F7               	rrcf	(??___fttol+3)& (0+255),f,b
  1405  000740  33F6               	rrcf	(??___fttol+2)& (0+255),f,b
  1406  000742  33F5               	rrcf	(??___fttol+1)& (0+255),f,b
  1407  000744                     u2840:
  1408  000744  0100               	movlb	0	; () banked
  1409  000746  2FF8               	decfsz	(??___fttol+4)& (0+255),f,b
  1410  000748  D7F8               	goto	u2845
  1411  00074A  0100               	movlb	0	; () banked
  1412  00074C  51F5               	movf	(??___fttol+1)& (0+255),w,b
  1413  00074E  0101               	movlb	1	; () banked
  1414  000750  6F48               	movwf	___fttol@sign1& (0+255),b
  1415                           
  1416                           ; BSR set to: 1
  1417  000752  0100               	movlb	0	; () banked
  1418  000754  8FF1               	bsf	(___fttol@f1+1)& (0+255),7,b
  1419                           
  1420                           ; BSR set to: 0
  1421  000756  0EFF               	movlw	255
  1422  000758  0100               	movlb	0	; () banked
  1423  00075A  17F0               	andwf	___fttol@f1& (0+255),f,b
  1424  00075C  0EFF               	movlw	255
  1425  00075E  0100               	movlb	0	; () banked
  1426  000760  17F1               	andwf	(___fttol@f1+1)& (0+255),f,b
  1427  000762  0E00               	movlw	0
  1428  000764  0100               	movlb	0	; () banked
  1429  000766  17F2               	andwf	(___fttol@f1+2)& (0+255),f,b
  1430                           
  1431                           ; BSR set to: 0
  1432  000768  0100               	movlb	0	; () banked
  1433  00076A  51F0               	movf	___fttol@f1& (0+255),w,b
  1434  00076C  0101               	movlb	1	; () banked
  1435  00076E  6F49               	movwf	___fttol@lval& (0+255),b
  1436  000770  0100               	movlb	0	; () banked
  1437  000772  51F1               	movf	(___fttol@f1+1)& (0+255),w,b
  1438  000774  0101               	movlb	1	; () banked
  1439  000776  6F4A               	movwf	(___fttol@lval+1)& (0+255),b
  1440  000778  0100               	movlb	0	; () banked
  1441  00077A  51F2               	movf	(___fttol@f1+2)& (0+255),w,b
  1442  00077C  0101               	movlb	1	; () banked
  1443  00077E  6F4B               	movwf	(___fttol@lval+2)& (0+255),b
  1444  000780  0101               	movlb	1	; () banked
  1445  000782  6B4C               	clrf	(___fttol@lval+3)& (0+255),b
  1446                           
  1447                           ; BSR set to: 1
  1448  000784  0E8E               	movlw	142
  1449  000786  0101               	movlb	1	; () banked
  1450  000788  5F4D               	subwf	___fttol@exp1& (0+255),f,b
  1451                           
  1452                           ; BSR set to: 1
  1453  00078A  0101               	movlb	1	; () banked
  1454  00078C  AF4D               	btfss	___fttol@exp1& (0+255),7,b
  1455  00078E  D01A               	goto	l3858
  1456                           
  1457                           ; BSR set to: 1
  1458  000790  0101               	movlb	1	; () banked
  1459  000792  514D               	movf	___fttol@exp1& (0+255),w,b
  1460  000794  0A80               	xorlw	128
  1461  000796  0F8F               	addlw	143
  1462  000798  B0D8               	btfsc	status,0,c
  1463  00079A  D00A               	goto	l3854
  1464                           
  1465                           ; BSR set to: 1
  1466  00079C  0E00               	movlw	0
  1467  00079E  0100               	movlb	0	; () banked
  1468  0007A0  6FF0               	movwf	?___fttol& (0+255),b
  1469  0007A2  0E00               	movlw	0
  1470  0007A4  6FF1               	movwf	(?___fttol+1)& (0+255),b
  1471  0007A6  0E00               	movlw	0
  1472  0007A8  6FF2               	movwf	(?___fttol+2)& (0+255),b
  1473  0007AA  0E00               	movlw	0
  1474  0007AC  6FF3               	movwf	(?___fttol+3)& (0+255),b
  1475                           
  1476                           ; BSR set to: 0
  1477  0007AE  0012               	return	
  1478  0007B0                     l3854:
  1479  0007B0  0101               	movlb	1	; () banked
  1480  0007B2  90D8               	bcf	status,0,c
  1481  0007B4  334C               	rrcf	(___fttol@lval+3)& (0+255),f,b
  1482  0007B6  334B               	rrcf	(___fttol@lval+2)& (0+255),f,b
  1483  0007B8  334A               	rrcf	(___fttol@lval+1)& (0+255),f,b
  1484  0007BA  3349               	rrcf	___fttol@lval& (0+255),f,b
  1485                           
  1486                           ; BSR set to: 1
  1487  0007BC  0101               	movlb	1	; () banked
  1488  0007BE  3F4D               	incfsz	___fttol@exp1& (0+255),f,b
  1489  0007C0  D7F7               	goto	l3854
  1490                           
  1491                           ; BSR set to: 1
  1492  0007C2  D01B               	goto	l3868
  1493  0007C4                     l3858:
  1494                           
  1495                           ; BSR set to: 1
  1496  0007C4  0E17               	movlw	23
  1497  0007C6  0101               	movlb	1	; () banked
  1498  0007C8  654D               	cpfsgt	___fttol@exp1& (0+255),b
  1499  0007CA  D012               	goto	l3866
  1500                           
  1501                           ; BSR set to: 1
  1502  0007CC  0E00               	movlw	0
  1503  0007CE  0100               	movlb	0	; () banked
  1504  0007D0  6FF0               	movwf	?___fttol& (0+255),b
  1505  0007D2  0E00               	movlw	0
  1506  0007D4  6FF1               	movwf	(?___fttol+1)& (0+255),b
  1507  0007D6  0E00               	movlw	0
  1508  0007D8  6FF2               	movwf	(?___fttol+2)& (0+255),b
  1509  0007DA  0E00               	movlw	0
  1510  0007DC  6FF3               	movwf	(?___fttol+3)& (0+255),b
  1511                           
  1512                           ; BSR set to: 0
  1513  0007DE  0012               	return	
  1514  0007E0                     l3864:
  1515  0007E0  0101               	movlb	1	; () banked
  1516  0007E2  90D8               	bcf	status,0,c
  1517  0007E4  3749               	rlcf	___fttol@lval& (0+255),f,b
  1518  0007E6  374A               	rlcf	(___fttol@lval+1)& (0+255),f,b
  1519  0007E8  374B               	rlcf	(___fttol@lval+2)& (0+255),f,b
  1520  0007EA  374C               	rlcf	(___fttol@lval+3)& (0+255),f,b
  1521  0007EC  0101               	movlb	1	; () banked
  1522  0007EE  074D               	decf	___fttol@exp1& (0+255),f,b
  1523  0007F0                     l3866:
  1524  0007F0  0101               	movlb	1	; () banked
  1525  0007F2  514D               	movf	___fttol@exp1& (0+255),w,b
  1526  0007F4  0101               	movlb	1	; () banked
  1527  0007F6  A4D8               	btfss	status,2,c
  1528  0007F8  D7F3               	goto	l3864
  1529  0007FA                     l3868:
  1530                           
  1531                           ; BSR set to: 1
  1532  0007FA  0101               	movlb	1	; () banked
  1533  0007FC  5148               	movf	___fttol@sign1& (0+255),w,b
  1534  0007FE  0101               	movlb	1	; () banked
  1535  000800  B4D8               	btfsc	status,2,c
  1536  000802  D009               	goto	l3872
  1537                           
  1538                           ; BSR set to: 1
  1539  000804  0101               	movlb	1	; () banked
  1540  000806  1F4C               	comf	(___fttol@lval+3)& (0+255),f,b
  1541  000808  1F4B               	comf	(___fttol@lval+2)& (0+255),f,b
  1542  00080A  1F4A               	comf	(___fttol@lval+1)& (0+255),f,b
  1543  00080C  6D49               	negf	___fttol@lval& (0+255),b
  1544  00080E  0E00               	movlw	0
  1545  000810  234A               	addwfc	(___fttol@lval+1)& (0+255),f,b
  1546  000812  234B               	addwfc	(___fttol@lval+2)& (0+255),f,b
  1547  000814  234C               	addwfc	(___fttol@lval+3)& (0+255),f,b
  1548  000816                     l3872:
  1549                           
  1550                           ; BSR set to: 1
  1551  000816  C149  F0F0         	movff	___fttol@lval,?___fttol
  1552  00081A  C14A  F0F1         	movff	___fttol@lval+1,?___fttol+1
  1553  00081E  C14B  F0F2         	movff	___fttol@lval+2,?___fttol+2
  1554  000822  C14C  F0F3         	movff	___fttol@lval+3,?___fttol+3
  1555  000826  0012               	return	
  1556  000828                     __end_of___fttol:
  1557                           	opt stack 0
  1558                           tblptru	equ	0xFF8
  1559                           tblptrh	equ	0xFF7
  1560                           tblptrl	equ	0xFF6
  1561                           tablat	equ	0xFF5
  1562                           intcon	equ	0xFF2
  1563                           intcon3	equ	0xFF0
  1564                           postinc0	equ	0xFEE
  1565                           wreg	equ	0xFE8
  1566                           postdec1	equ	0xFE5
  1567                           fsr1l	equ	0xFE1
  1568                           status	equ	0xFD8
  1569                           
  1570 ;; *************** function ___ftmul *****************
  1571 ;; Defined at:
  1572 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\ftmul.c"
  1573 ;; Parameters:    Size  Location     Type
  1574 ;;  f1              3   27[COMRAM] float 
  1575 ;;  f2              3   30[COMRAM] float 
  1576 ;; Auto vars:     Size  Location     Type
  1577 ;;  f3_as_produc    3   37[COMRAM] unsigned um
  1578 ;;  sign            1   41[COMRAM] unsigned char 
  1579 ;;  cntr            1   40[COMRAM] unsigned char 
  1580 ;;  exp             1   36[COMRAM] unsigned char 
  1581 ;; Return value:  Size  Location     Type
  1582 ;;                  3   27[COMRAM] float 
  1583 ;; Registers used:
  1584 ;;		wreg, status,2, status,0, cstack
  1585 ;; Tracked objects:
  1586 ;;		On entry : 0/0
  1587 ;;		On exit  : 0/0
  1588 ;;		Unchanged: 0/0
  1589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1590 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1591 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1592 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1593 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1594 ;;Total ram usage:       15 bytes
  1595 ;; Hardware stack levels used:    1
  1596 ;; Hardware stack levels required when called:    3
  1597 ;; This function calls:
  1598 ;;		___ftpack
  1599 ;; This function is called by:
  1600 ;;		_main
  1601 ;;		_lcdEscreverInt
  1602 ;;		_lcdEscreverFloat
  1603 ;; This function uses a non-reentrant model
  1604 ;;
  1605                           
  1606                           	psect	text3
  1607  000828                     __ptext3:
  1608                           	opt stack 0
  1609  000828                     ___ftmul:
  1610                           	opt stack 27
  1611                           
  1612                           ;incstack = 0
  1613  000828  C01E  F022         	movff	___ftmul@f1+2,??___ftmul
  1614  00082C  6A23               	clrf	(??___ftmul+1)& (0+255),c
  1615  00082E  6A24               	clrf	(??___ftmul+2)& (0+255),c
  1616  000830  341D               	rlcf	___ftmul@f1+1,w,c
  1617  000832  3622               	rlcf	??___ftmul& (0+255),f,c
  1618  000834  E301               	bnc	u2761
  1619  000836  8023               	bsf	(??___ftmul+1)& (0+255),0,c
  1620  000838                     u2761:
  1621  000838  5022               	movf	??___ftmul,w,c
  1622  00083A  6E25               	movwf	___ftmul@exp,c
  1623  00083C  5025               	movf	___ftmul@exp,w,c
  1624  00083E  A4D8               	btfss	status,2,c
  1625  000840  D007               	goto	l3788
  1626  000842  0E00               	movlw	0
  1627  000844  6E1C               	movwf	?___ftmul,c
  1628  000846  0E00               	movlw	0
  1629  000848  6E1D               	movwf	?___ftmul+1,c
  1630  00084A  0E00               	movlw	0
  1631  00084C  6E1E               	movwf	?___ftmul+2,c
  1632  00084E  0012               	return	
  1633  000850                     l3788:
  1634  000850  C021  F022         	movff	___ftmul@f2+2,??___ftmul
  1635  000854  6A23               	clrf	(??___ftmul+1)& (0+255),c
  1636  000856  6A24               	clrf	(??___ftmul+2)& (0+255),c
  1637  000858  3420               	rlcf	___ftmul@f2+1,w,c
  1638  00085A  3622               	rlcf	??___ftmul& (0+255),f,c
  1639  00085C  E301               	bnc	u2781
  1640  00085E  8023               	bsf	(??___ftmul+1)& (0+255),0,c
  1641  000860                     u2781:
  1642  000860  5022               	movf	??___ftmul,w,c
  1643  000862  6E2A               	movwf	___ftmul@sign,c
  1644  000864  502A               	movf	___ftmul@sign,w,c
  1645  000866  A4D8               	btfss	status,2,c
  1646  000868  D007               	goto	l3794
  1647  00086A  0E00               	movlw	0
  1648  00086C  6E1C               	movwf	?___ftmul,c
  1649  00086E  0E00               	movlw	0
  1650  000870  6E1D               	movwf	?___ftmul+1,c
  1651  000872  0E00               	movlw	0
  1652  000874  6E1E               	movwf	?___ftmul+2,c
  1653  000876  0012               	return	
  1654  000878                     l3794:
  1655  000878  502A               	movf	___ftmul@sign,w,c
  1656  00087A  0F7B               	addlw	123
  1657  00087C  2625               	addwf	___ftmul@exp,f,c
  1658  00087E  C01E  F02A         	movff	___ftmul@f1+2,___ftmul@sign
  1659  000882  5021               	movf	___ftmul@f2+2,w,c
  1660  000884  1A2A               	xorwf	___ftmul@sign,f,c
  1661  000886  0E80               	movlw	128
  1662  000888  162A               	andwf	___ftmul@sign,f,c
  1663  00088A  8E1D               	bsf	___ftmul@f1+1,7,c
  1664  00088C  8E20               	bsf	___ftmul@f2+1,7,c
  1665  00088E  0EFF               	movlw	255
  1666  000890  161F               	andwf	___ftmul@f2,f,c
  1667  000892  0EFF               	movlw	255
  1668  000894  1620               	andwf	___ftmul@f2+1,f,c
  1669  000896  0E00               	movlw	0
  1670  000898  1621               	andwf	___ftmul@f2+2,f,c
  1671  00089A  0E00               	movlw	0
  1672  00089C  6E26               	movwf	___ftmul@f3_as_product,c
  1673  00089E  0E00               	movlw	0
  1674  0008A0  6E27               	movwf	___ftmul@f3_as_product+1,c
  1675  0008A2  0E00               	movlw	0
  1676  0008A4  6E28               	movwf	___ftmul@f3_as_product+2,c
  1677  0008A6  0E07               	movlw	7
  1678  0008A8  6E29               	movwf	___ftmul@cntr,c
  1679  0008AA                     l3808:
  1680  0008AA  A01C               	btfss	___ftmul@f1,0,c
  1681  0008AC  D006               	goto	l3812
  1682  0008AE  501F               	movf	___ftmul@f2,w,c
  1683  0008B0  2626               	addwf	___ftmul@f3_as_product,f,c
  1684  0008B2  5020               	movf	___ftmul@f2+1,w,c
  1685  0008B4  2227               	addwfc	___ftmul@f3_as_product+1,f,c
  1686  0008B6  5021               	movf	___ftmul@f2+2,w,c
  1687  0008B8  2228               	addwfc	___ftmul@f3_as_product+2,f,c
  1688  0008BA                     l3812:
  1689  0008BA  90D8               	bcf	status,0,c
  1690  0008BC  321E               	rrcf	___ftmul@f1+2,f,c
  1691  0008BE  321D               	rrcf	___ftmul@f1+1,f,c
  1692  0008C0  321C               	rrcf	___ftmul@f1,f,c
  1693  0008C2  90D8               	bcf	status,0,c
  1694  0008C4  361F               	rlcf	___ftmul@f2,f,c
  1695  0008C6  3620               	rlcf	___ftmul@f2+1,f,c
  1696  0008C8  3621               	rlcf	___ftmul@f2+2,f,c
  1697  0008CA  2E29               	decfsz	___ftmul@cntr,f,c
  1698  0008CC  D7EE               	goto	l3808
  1699  0008CE  0E09               	movlw	9
  1700  0008D0  6E29               	movwf	___ftmul@cntr,c
  1701  0008D2                     l3818:
  1702  0008D2  A01C               	btfss	___ftmul@f1,0,c
  1703  0008D4  D006               	goto	l3822
  1704  0008D6  501F               	movf	___ftmul@f2,w,c
  1705  0008D8  2626               	addwf	___ftmul@f3_as_product,f,c
  1706  0008DA  5020               	movf	___ftmul@f2+1,w,c
  1707  0008DC  2227               	addwfc	___ftmul@f3_as_product+1,f,c
  1708  0008DE  5021               	movf	___ftmul@f2+2,w,c
  1709  0008E0  2228               	addwfc	___ftmul@f3_as_product+2,f,c
  1710  0008E2                     l3822:
  1711  0008E2  90D8               	bcf	status,0,c
  1712  0008E4  321E               	rrcf	___ftmul@f1+2,f,c
  1713  0008E6  321D               	rrcf	___ftmul@f1+1,f,c
  1714  0008E8  321C               	rrcf	___ftmul@f1,f,c
  1715  0008EA  90D8               	bcf	status,0,c
  1716  0008EC  3228               	rrcf	___ftmul@f3_as_product+2,f,c
  1717  0008EE  3227               	rrcf	___ftmul@f3_as_product+1,f,c
  1718  0008F0  3226               	rrcf	___ftmul@f3_as_product,f,c
  1719  0008F2  2E29               	decfsz	___ftmul@cntr,f,c
  1720  0008F4  D7EE               	goto	l3818
  1721  0008F6  C026  F011         	movff	___ftmul@f3_as_product,___ftpack@arg
  1722  0008FA  C027  F012         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  1723  0008FE  C028  F013         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  1724  000902  C025  F014         	movff	___ftmul@exp,___ftpack@exp
  1725  000906  C02A  F015         	movff	___ftmul@sign,___ftpack@sign
  1726  00090A  ECDE  F005         	call	___ftpack	;wreg free
  1727  00090E  C011  F01C         	movff	?___ftpack,?___ftmul
  1728  000912  C012  F01D         	movff	?___ftpack+1,?___ftmul+1
  1729  000916  C013  F01E         	movff	?___ftpack+2,?___ftmul+2
  1730  00091A  0012               	return	
  1731  00091C                     __end_of___ftmul:
  1732                           	opt stack 0
  1733                           tblptru	equ	0xFF8
  1734                           tblptrh	equ	0xFF7
  1735                           tblptrl	equ	0xFF6
  1736                           tablat	equ	0xFF5
  1737                           intcon	equ	0xFF2
  1738                           intcon3	equ	0xFF0
  1739                           postinc0	equ	0xFEE
  1740                           wreg	equ	0xFE8
  1741                           postdec1	equ	0xFE5
  1742                           fsr1l	equ	0xFE1
  1743                           status	equ	0xFD8
  1744                           
  1745 ;; *************** function ___ftdiv *****************
  1746 ;; Defined at:
  1747 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\ftdiv.c"
  1748 ;; Parameters:    Size  Location     Type
  1749 ;;  f1              3   42[COMRAM] float 
  1750 ;;  f2              3   45[COMRAM] float 
  1751 ;; Auto vars:     Size  Location     Type
  1752 ;;  f3              3   52[COMRAM] float 
  1753 ;;  sign            1   56[COMRAM] unsigned char 
  1754 ;;  exp             1   55[COMRAM] unsigned char 
  1755 ;;  cntr            1   51[COMRAM] unsigned char 
  1756 ;; Return value:  Size  Location     Type
  1757 ;;                  3   42[COMRAM] float 
  1758 ;; Registers used:
  1759 ;;		wreg, status,2, status,0, cstack
  1760 ;; Tracked objects:
  1761 ;;		On entry : 0/0
  1762 ;;		On exit  : 0/0
  1763 ;;		Unchanged: 0/0
  1764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1765 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1766 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1767 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1768 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1769 ;;Total ram usage:       15 bytes
  1770 ;; Hardware stack levels used:    1
  1771 ;; Hardware stack levels required when called:    3
  1772 ;; This function calls:
  1773 ;;		___ftpack
  1774 ;; This function is called by:
  1775 ;;		_main
  1776 ;; This function uses a non-reentrant model
  1777 ;;
  1778                           
  1779                           	psect	text4
  1780  000A0A                     __ptext4:
  1781                           	opt stack 0
  1782  000A0A                     ___ftdiv:
  1783                           	opt stack 27
  1784                           
  1785                           ;incstack = 0
  1786  000A0A  C02D  F031         	movff	___ftdiv@f1+2,??___ftdiv
  1787  000A0E  6A32               	clrf	(??___ftdiv+1)& (0+255),c
  1788  000A10  6A33               	clrf	(??___ftdiv+2)& (0+255),c
  1789  000A12  342C               	rlcf	___ftdiv@f1+1,w,c
  1790  000A14  3631               	rlcf	??___ftdiv& (0+255),f,c
  1791  000A16  E301               	bnc	u2711
  1792  000A18  8032               	bsf	(??___ftdiv+1)& (0+255),0,c
  1793  000A1A                     u2711:
  1794  000A1A  5031               	movf	??___ftdiv,w,c
  1795  000A1C  6E38               	movwf	___ftdiv@exp,c
  1796  000A1E  5038               	movf	___ftdiv@exp,w,c
  1797  000A20  A4D8               	btfss	status,2,c
  1798  000A22  D007               	goto	l3742
  1799  000A24  0E00               	movlw	0
  1800  000A26  6E2B               	movwf	?___ftdiv,c
  1801  000A28  0E00               	movlw	0
  1802  000A2A  6E2C               	movwf	?___ftdiv+1,c
  1803  000A2C  0E00               	movlw	0
  1804  000A2E  6E2D               	movwf	?___ftdiv+2,c
  1805  000A30  0012               	return	
  1806  000A32                     l3742:
  1807  000A32  C030  F031         	movff	___ftdiv@f2+2,??___ftdiv
  1808  000A36  6A32               	clrf	(??___ftdiv+1)& (0+255),c
  1809  000A38  6A33               	clrf	(??___ftdiv+2)& (0+255),c
  1810  000A3A  342F               	rlcf	___ftdiv@f2+1,w,c
  1811  000A3C  3631               	rlcf	??___ftdiv& (0+255),f,c
  1812  000A3E  E301               	bnc	u2731
  1813  000A40  8032               	bsf	(??___ftdiv+1)& (0+255),0,c
  1814  000A42                     u2731:
  1815  000A42  5031               	movf	??___ftdiv,w,c
  1816  000A44  6E39               	movwf	___ftdiv@sign,c
  1817  000A46  5039               	movf	___ftdiv@sign,w,c
  1818  000A48  A4D8               	btfss	status,2,c
  1819  000A4A  D007               	goto	l3748
  1820  000A4C  0E00               	movlw	0
  1821  000A4E  6E2B               	movwf	?___ftdiv,c
  1822  000A50  0E00               	movlw	0
  1823  000A52  6E2C               	movwf	?___ftdiv+1,c
  1824  000A54  0E00               	movlw	0
  1825  000A56  6E2D               	movwf	?___ftdiv+2,c
  1826  000A58  0012               	return	
  1827  000A5A                     l3748:
  1828  000A5A  0E00               	movlw	0
  1829  000A5C  6E35               	movwf	___ftdiv@f3,c
  1830  000A5E  0E00               	movlw	0
  1831  000A60  6E36               	movwf	___ftdiv@f3+1,c
  1832  000A62  0E00               	movlw	0
  1833  000A64  6E37               	movwf	___ftdiv@f3+2,c
  1834  000A66  5039               	movf	___ftdiv@sign,w,c
  1835  000A68  0F89               	addlw	137
  1836  000A6A  5E38               	subwf	___ftdiv@exp,f,c
  1837  000A6C  C02D  F039         	movff	___ftdiv@f1+2,___ftdiv@sign
  1838  000A70  5030               	movf	___ftdiv@f2+2,w,c
  1839  000A72  1A39               	xorwf	___ftdiv@sign,f,c
  1840  000A74  0E80               	movlw	128
  1841  000A76  1639               	andwf	___ftdiv@sign,f,c
  1842  000A78  8E2C               	bsf	___ftdiv@f1+1,7,c
  1843  000A7A  0EFF               	movlw	255
  1844  000A7C  162B               	andwf	___ftdiv@f1,f,c
  1845  000A7E  0EFF               	movlw	255
  1846  000A80  162C               	andwf	___ftdiv@f1+1,f,c
  1847  000A82  0E00               	movlw	0
  1848  000A84  162D               	andwf	___ftdiv@f1+2,f,c
  1849  000A86  8E2F               	bsf	___ftdiv@f2+1,7,c
  1850  000A88  0EFF               	movlw	255
  1851  000A8A  162E               	andwf	___ftdiv@f2,f,c
  1852  000A8C  0EFF               	movlw	255
  1853  000A8E  162F               	andwf	___ftdiv@f2+1,f,c
  1854  000A90  0E00               	movlw	0
  1855  000A92  1630               	andwf	___ftdiv@f2+2,f,c
  1856  000A94  0E18               	movlw	24
  1857  000A96  6E34               	movwf	___ftdiv@cntr,c
  1858  000A98                     l3768:
  1859  000A98  90D8               	bcf	status,0,c
  1860  000A9A  3635               	rlcf	___ftdiv@f3,f,c
  1861  000A9C  3636               	rlcf	___ftdiv@f3+1,f,c
  1862  000A9E  3637               	rlcf	___ftdiv@f3+2,f,c
  1863  000AA0  502E               	movf	___ftdiv@f2,w,c
  1864  000AA2  5C2B               	subwf	___ftdiv@f1,w,c
  1865  000AA4  502F               	movf	___ftdiv@f2+1,w,c
  1866  000AA6  582C               	subwfb	___ftdiv@f1+1,w,c
  1867  000AA8  5030               	movf	___ftdiv@f2+2,w,c
  1868  000AAA  582D               	subwfb	___ftdiv@f1+2,w,c
  1869  000AAC  A0D8               	btfss	status,0,c
  1870  000AAE  D007               	goto	l1153
  1871  000AB0  502E               	movf	___ftdiv@f2,w,c
  1872  000AB2  5E2B               	subwf	___ftdiv@f1,f,c
  1873  000AB4  502F               	movf	___ftdiv@f2+1,w,c
  1874  000AB6  5A2C               	subwfb	___ftdiv@f1+1,f,c
  1875  000AB8  5030               	movf	___ftdiv@f2+2,w,c
  1876  000ABA  5A2D               	subwfb	___ftdiv@f1+2,f,c
  1877  000ABC  8035               	bsf	___ftdiv@f3,0,c
  1878  000ABE                     l1153:
  1879  000ABE  90D8               	bcf	status,0,c
  1880  000AC0  362B               	rlcf	___ftdiv@f1,f,c
  1881  000AC2  362C               	rlcf	___ftdiv@f1+1,f,c
  1882  000AC4  362D               	rlcf	___ftdiv@f1+2,f,c
  1883  000AC6  2E34               	decfsz	___ftdiv@cntr,f,c
  1884  000AC8  D7E7               	goto	l3768
  1885  000ACA  C035  F011         	movff	___ftdiv@f3,___ftpack@arg
  1886  000ACE  C036  F012         	movff	___ftdiv@f3+1,___ftpack@arg+1
  1887  000AD2  C037  F013         	movff	___ftdiv@f3+2,___ftpack@arg+2
  1888  000AD6  C038  F014         	movff	___ftdiv@exp,___ftpack@exp
  1889  000ADA  C039  F015         	movff	___ftdiv@sign,___ftpack@sign
  1890  000ADE  ECDE  F005         	call	___ftpack	;wreg free
  1891  000AE2  C011  F02B         	movff	?___ftpack,?___ftdiv
  1892  000AE6  C012  F02C         	movff	?___ftpack+1,?___ftdiv+1
  1893  000AEA  C013  F02D         	movff	?___ftpack+2,?___ftdiv+2
  1894  000AEE  0012               	return	
  1895  000AF0                     __end_of___ftdiv:
  1896                           	opt stack 0
  1897                           tblptru	equ	0xFF8
  1898                           tblptrh	equ	0xFF7
  1899                           tblptrl	equ	0xFF6
  1900                           tablat	equ	0xFF5
  1901                           intcon	equ	0xFF2
  1902                           intcon3	equ	0xFF0
  1903                           postinc0	equ	0xFEE
  1904                           wreg	equ	0xFE8
  1905                           postdec1	equ	0xFE5
  1906                           fsr1l	equ	0xFE1
  1907                           status	equ	0xFD8
  1908                           
  1909 ;; *************** function ___ftadd *****************
  1910 ;; Defined at:
  1911 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\ftadd.c"
  1912 ;; Parameters:    Size  Location     Type
  1913 ;;  f1              3    0[BANK0 ] float 
  1914 ;;  f2              3    3[BANK0 ] float 
  1915 ;; Auto vars:     Size  Location     Type
  1916 ;;  exp1            1    8[BANK0 ] unsigned char 
  1917 ;;  exp2            1    7[BANK0 ] unsigned char 
  1918 ;;  sign            1    6[BANK0 ] unsigned char 
  1919 ;; Return value:  Size  Location     Type
  1920 ;;                  3    0[BANK0 ] float 
  1921 ;; Registers used:
  1922 ;;		wreg, status,2, status,0, cstack
  1923 ;; Tracked objects:
  1924 ;;		On entry : 0/0
  1925 ;;		On exit  : 0/0
  1926 ;;		Unchanged: 0/0
  1927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1928 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1929 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1930 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1931 ;;      Totals:         3       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1932 ;;Total ram usage:       12 bytes
  1933 ;; Hardware stack levels used:    1
  1934 ;; Hardware stack levels required when called:    3
  1935 ;; This function calls:
  1936 ;;		___ftpack
  1937 ;; This function is called by:
  1938 ;;		_main
  1939 ;;		_lcdEscreverInt
  1940 ;;		_lcdEscreverFloat
  1941 ;; This function uses a non-reentrant model
  1942 ;;
  1943                           
  1944                           	psect	text5
  1945  000248                     __ptext5:
  1946                           	opt stack 0
  1947  000248                     ___ftadd:
  1948                           	opt stack 27
  1949                           
  1950                           ;incstack = 0
  1951  000248  C0E9  F03A         	movff	___ftadd@f1+2,??___ftadd
  1952  00024C  6A3B               	clrf	(??___ftadd+1)& (0+255),c
  1953  00024E  6A3C               	clrf	(??___ftadd+2)& (0+255),c
  1954  000250  0100               	movlb	0	; () banked
  1955  000252  35E8               	rlcf	(___ftadd@f1+1)& (0+255),w,b
  1956  000254  363A               	rlcf	??___ftadd& (0+255),f,c
  1957  000256  E301               	bnc	u2501
  1958  000258  803B               	bsf	(??___ftadd+1)& (0+255),0,c
  1959  00025A                     u2501:
  1960  00025A  503A               	movf	??___ftadd,w,c
  1961  00025C  0100               	movlb	0	; () banked
  1962  00025E  6FEF               	movwf	___ftadd@exp1& (0+255),b
  1963  000260  C0EC  F03A         	movff	___ftadd@f2+2,??___ftadd
  1964  000264  6A3B               	clrf	(??___ftadd+1)& (0+255),c
  1965  000266  6A3C               	clrf	(??___ftadd+2)& (0+255),c
  1966  000268  0100               	movlb	0	; () banked
  1967  00026A  35EB               	rlcf	(___ftadd@f2+1)& (0+255),w,b
  1968  00026C  363A               	rlcf	??___ftadd& (0+255),f,c
  1969  00026E  E301               	bnc	u2511
  1970  000270  803B               	bsf	(??___ftadd+1)& (0+255),0,c
  1971  000272                     u2511:
  1972  000272  503A               	movf	??___ftadd,w,c
  1973  000274  0100               	movlb	0	; () banked
  1974  000276  6FEE               	movwf	___ftadd@exp2& (0+255),b
  1975                           
  1976                           ; BSR set to: 0
  1977  000278  0100               	movlb	0	; () banked
  1978  00027A  51EF               	movf	___ftadd@exp1& (0+255),w,b
  1979  00027C  0100               	movlb	0	; () banked
  1980  00027E  B4D8               	btfsc	status,2,c
  1981  000280  D00F               	goto	l1118
  1982                           
  1983                           ; BSR set to: 0
  1984  000282  0100               	movlb	0	; () banked
  1985  000284  51EE               	movf	___ftadd@exp2& (0+255),w,b
  1986  000286  0100               	movlb	0	; () banked
  1987  000288  5DEF               	subwf	___ftadd@exp1& (0+255),w,b
  1988  00028A  B0D8               	btfsc	status,0,c
  1989  00028C  D010               	goto	l3674
  1990                           
  1991                           ; BSR set to: 0
  1992  00028E  0100               	movlb	0	; () banked
  1993  000290  51EF               	movf	___ftadd@exp1& (0+255),w,b
  1994  000292  0800               	sublw	0
  1995  000294  0100               	movlb	0	; () banked
  1996  000296  25EE               	addwf	___ftadd@exp2& (0+255),w,b
  1997  000298  6E3A               	movwf	??___ftadd& (0+255),c
  1998  00029A  0E18               	movlw	24
  1999  00029C  643A               	cpfsgt	??___ftadd,c
  2000  00029E  D007               	goto	l3674
  2001  0002A0                     l1118:
  2002                           
  2003                           ; BSR set to: 0
  2004  0002A0  C0EA  F0E7         	movff	___ftadd@f2,?___ftadd
  2005  0002A4  C0EB  F0E8         	movff	___ftadd@f2+1,?___ftadd+1
  2006  0002A8  C0EC  F0E9         	movff	___ftadd@f2+2,?___ftadd+2
  2007  0002AC  0012               	return	
  2008  0002AE                     l3674:
  2009                           
  2010                           ; BSR set to: 0
  2011  0002AE  0100               	movlb	0	; () banked
  2012  0002B0  51EE               	movf	___ftadd@exp2& (0+255),w,b
  2013  0002B2  0100               	movlb	0	; () banked
  2014  0002B4  B4D8               	btfsc	status,2,c
  2015  0002B6  D00F               	goto	l1122
  2016                           
  2017                           ; BSR set to: 0
  2018  0002B8  0100               	movlb	0	; () banked
  2019  0002BA  51EF               	movf	___ftadd@exp1& (0+255),w,b
  2020  0002BC  0100               	movlb	0	; () banked
  2021  0002BE  5DEE               	subwf	___ftadd@exp2& (0+255),w,b
  2022  0002C0  B0D8               	btfsc	status,0,c
  2023  0002C2  D010               	goto	l3680
  2024                           
  2025                           ; BSR set to: 0
  2026  0002C4  0100               	movlb	0	; () banked
  2027  0002C6  51EE               	movf	___ftadd@exp2& (0+255),w,b
  2028  0002C8  0800               	sublw	0
  2029  0002CA  0100               	movlb	0	; () banked
  2030  0002CC  25EF               	addwf	___ftadd@exp1& (0+255),w,b
  2031  0002CE  6E3A               	movwf	??___ftadd& (0+255),c
  2032  0002D0  0E18               	movlw	24
  2033  0002D2  643A               	cpfsgt	??___ftadd,c
  2034  0002D4  D007               	goto	l3680
  2035  0002D6                     l1122:
  2036                           
  2037                           ; BSR set to: 0
  2038  0002D6  C0E7  F0E7         	movff	___ftadd@f1,?___ftadd
  2039  0002DA  C0E8  F0E8         	movff	___ftadd@f1+1,?___ftadd+1
  2040  0002DE  C0E9  F0E9         	movff	___ftadd@f1+2,?___ftadd+2
  2041  0002E2  0012               	return	
  2042  0002E4                     l3680:
  2043                           
  2044                           ; BSR set to: 0
  2045  0002E4  0E06               	movlw	6
  2046  0002E6  0100               	movlb	0	; () banked
  2047  0002E8  6FED               	movwf	___ftadd@sign& (0+255),b
  2048                           
  2049                           ; BSR set to: 0
  2050  0002EA  0100               	movlb	0	; () banked
  2051  0002EC  AFE9               	btfss	(___ftadd@f1+2)& (0+255),7,b
  2052  0002EE  D002               	goto	l3686
  2053                           
  2054                           ; BSR set to: 0
  2055  0002F0  0100               	movlb	0	; () banked
  2056  0002F2  8FED               	bsf	___ftadd@sign& (0+255),7,b
  2057  0002F4                     l3686:
  2058                           
  2059                           ; BSR set to: 0
  2060  0002F4  0100               	movlb	0	; () banked
  2061  0002F6  AFEC               	btfss	(___ftadd@f2+2)& (0+255),7,b
  2062  0002F8  D002               	goto	l1124
  2063                           
  2064                           ; BSR set to: 0
  2065  0002FA  0100               	movlb	0	; () banked
  2066  0002FC  8DED               	bsf	___ftadd@sign& (0+255),6,b
  2067  0002FE                     l1124:
  2068                           
  2069                           ; BSR set to: 0
  2070  0002FE  0100               	movlb	0	; () banked
  2071  000300  8FE8               	bsf	(___ftadd@f1+1)& (0+255),7,b
  2072                           
  2073                           ; BSR set to: 0
  2074  000302  0EFF               	movlw	255
  2075  000304  0100               	movlb	0	; () banked
  2076  000306  17E7               	andwf	___ftadd@f1& (0+255),f,b
  2077  000308  0EFF               	movlw	255
  2078  00030A  0100               	movlb	0	; () banked
  2079  00030C  17E8               	andwf	(___ftadd@f1+1)& (0+255),f,b
  2080  00030E  0E00               	movlw	0
  2081  000310  0100               	movlb	0	; () banked
  2082  000312  17E9               	andwf	(___ftadd@f1+2)& (0+255),f,b
  2083  000314  0100               	movlb	0	; () banked
  2084  000316  8FEB               	bsf	(___ftadd@f2+1)& (0+255),7,b
  2085                           
  2086                           ; BSR set to: 0
  2087  000318  0EFF               	movlw	255
  2088  00031A  0100               	movlb	0	; () banked
  2089  00031C  17EA               	andwf	___ftadd@f2& (0+255),f,b
  2090  00031E  0EFF               	movlw	255
  2091  000320  0100               	movlb	0	; () banked
  2092  000322  17EB               	andwf	(___ftadd@f2+1)& (0+255),f,b
  2093  000324  0E00               	movlw	0
  2094  000326  0100               	movlb	0	; () banked
  2095  000328  17EC               	andwf	(___ftadd@f2+2)& (0+255),f,b
  2096                           
  2097                           ; BSR set to: 0
  2098  00032A  0100               	movlb	0	; () banked
  2099  00032C  51EE               	movf	___ftadd@exp2& (0+255),w,b
  2100  00032E  0100               	movlb	0	; () banked
  2101  000330  5DEF               	subwf	___ftadd@exp1& (0+255),w,b
  2102  000332  B0D8               	btfsc	status,0,c
  2103  000334  D024               	goto	l3706
  2104  000336                     l3696:
  2105                           
  2106                           ; BSR set to: 0
  2107  000336  0100               	movlb	0	; () banked
  2108  000338  90D8               	bcf	status,0,c
  2109  00033A  37EA               	rlcf	___ftadd@f2& (0+255),f,b
  2110  00033C  37EB               	rlcf	(___ftadd@f2+1)& (0+255),f,b
  2111  00033E  37EC               	rlcf	(___ftadd@f2+2)& (0+255),f,b
  2112  000340  0100               	movlb	0	; () banked
  2113  000342  07EE               	decf	___ftadd@exp2& (0+255),f,b
  2114                           
  2115                           ; BSR set to: 0
  2116  000344  0100               	movlb	0	; () banked
  2117  000346  51EF               	movf	___ftadd@exp1& (0+255),w,b
  2118  000348  0100               	movlb	0	; () banked
  2119  00034A  19EE               	xorwf	___ftadd@exp2& (0+255),w,b
  2120  00034C  B4D8               	btfsc	status,2,c
  2121  00034E  D010               	goto	l3704
  2122                           
  2123                           ; BSR set to: 0
  2124  000350  0100               	movlb	0	; () banked
  2125  000352  07ED               	decf	___ftadd@sign& (0+255),f,b
  2126  000354  C0ED  F03A         	movff	___ftadd@sign,??___ftadd
  2127  000358  0E07               	movlw	7
  2128  00035A  163A               	andwf	??___ftadd,f,c
  2129  00035C  B4D8               	btfsc	status,2,c
  2130  00035E  D008               	goto	l3704
  2131  000360  D7EA               	goto	l3696
  2132  000362                     l3702:
  2133                           
  2134                           ; BSR set to: 0
  2135  000362  0100               	movlb	0	; () banked
  2136  000364  90D8               	bcf	status,0,c
  2137  000366  33E9               	rrcf	(___ftadd@f1+2)& (0+255),f,b
  2138  000368  33E8               	rrcf	(___ftadd@f1+1)& (0+255),f,b
  2139  00036A  33E7               	rrcf	___ftadd@f1& (0+255),f,b
  2140  00036C  0100               	movlb	0	; () banked
  2141  00036E  2BEF               	incf	___ftadd@exp1& (0+255),f,b
  2142  000370                     l3704:
  2143                           
  2144                           ; BSR set to: 0
  2145  000370  0100               	movlb	0	; () banked
  2146  000372  51EE               	movf	___ftadd@exp2& (0+255),w,b
  2147  000374  0100               	movlb	0	; () banked
  2148  000376  19EF               	xorwf	___ftadd@exp1& (0+255),w,b
  2149  000378  B4D8               	btfsc	status,2,c
  2150  00037A  D02A               	goto	l1133
  2151  00037C  D7F2               	goto	l3702
  2152  00037E                     l3706:
  2153                           
  2154                           ; BSR set to: 0
  2155  00037E  0100               	movlb	0	; () banked
  2156  000380  51EF               	movf	___ftadd@exp1& (0+255),w,b
  2157  000382  0100               	movlb	0	; () banked
  2158  000384  5DEE               	subwf	___ftadd@exp2& (0+255),w,b
  2159  000386  B0D8               	btfsc	status,0,c
  2160  000388  D023               	goto	l1133
  2161  00038A                     l3708:
  2162                           
  2163                           ; BSR set to: 0
  2164  00038A  0100               	movlb	0	; () banked
  2165  00038C  90D8               	bcf	status,0,c
  2166  00038E  37E7               	rlcf	___ftadd@f1& (0+255),f,b
  2167  000390  37E8               	rlcf	(___ftadd@f1+1)& (0+255),f,b
  2168  000392  37E9               	rlcf	(___ftadd@f1+2)& (0+255),f,b
  2169  000394  0100               	movlb	0	; () banked
  2170  000396  07EF               	decf	___ftadd@exp1& (0+255),f,b
  2171                           
  2172                           ; BSR set to: 0
  2173  000398  0100               	movlb	0	; () banked
  2174  00039A  51EF               	movf	___ftadd@exp1& (0+255),w,b
  2175  00039C  0100               	movlb	0	; () banked
  2176  00039E  19EE               	xorwf	___ftadd@exp2& (0+255),w,b
  2177  0003A0  B4D8               	btfsc	status,2,c
  2178  0003A2  D010               	goto	l3716
  2179                           
  2180                           ; BSR set to: 0
  2181  0003A4  0100               	movlb	0	; () banked
  2182  0003A6  07ED               	decf	___ftadd@sign& (0+255),f,b
  2183  0003A8  C0ED  F03A         	movff	___ftadd@sign,??___ftadd
  2184  0003AC  0E07               	movlw	7
  2185  0003AE  163A               	andwf	??___ftadd,f,c
  2186  0003B0  B4D8               	btfsc	status,2,c
  2187  0003B2  D008               	goto	l3716
  2188  0003B4  D7EA               	goto	l3708
  2189  0003B6                     l3714:
  2190                           
  2191                           ; BSR set to: 0
  2192  0003B6  0100               	movlb	0	; () banked
  2193  0003B8  90D8               	bcf	status,0,c
  2194  0003BA  33EC               	rrcf	(___ftadd@f2+2)& (0+255),f,b
  2195  0003BC  33EB               	rrcf	(___ftadd@f2+1)& (0+255),f,b
  2196  0003BE  33EA               	rrcf	___ftadd@f2& (0+255),f,b
  2197  0003C0  0100               	movlb	0	; () banked
  2198  0003C2  2BEE               	incf	___ftadd@exp2& (0+255),f,b
  2199  0003C4                     l3716:
  2200                           
  2201                           ; BSR set to: 0
  2202  0003C4  0100               	movlb	0	; () banked
  2203  0003C6  51EE               	movf	___ftadd@exp2& (0+255),w,b
  2204  0003C8  0100               	movlb	0	; () banked
  2205  0003CA  19EF               	xorwf	___ftadd@exp1& (0+255),w,b
  2206  0003CC  A4D8               	btfss	status,2,c
  2207  0003CE  D7F3               	goto	l3714
  2208  0003D0                     l1133:
  2209                           
  2210                           ; BSR set to: 0
  2211  0003D0  0100               	movlb	0	; () banked
  2212  0003D2  AFED               	btfss	___ftadd@sign& (0+255),7,b
  2213  0003D4  D012               	goto	l1142
  2214                           
  2215                           ; BSR set to: 0
  2216  0003D6  0EFF               	movlw	255
  2217  0003D8  0100               	movlb	0	; () banked
  2218  0003DA  1BE7               	xorwf	___ftadd@f1& (0+255),f,b
  2219  0003DC  0EFF               	movlw	255
  2220  0003DE  0100               	movlb	0	; () banked
  2221  0003E0  1BE8               	xorwf	(___ftadd@f1+1)& (0+255),f,b
  2222  0003E2  0EFF               	movlw	255
  2223  0003E4  0100               	movlb	0	; () banked
  2224  0003E6  1BE9               	xorwf	(___ftadd@f1+2)& (0+255),f,b
  2225  0003E8  0E01               	movlw	1
  2226  0003EA  0100               	movlb	0	; () banked
  2227  0003EC  27E7               	addwf	___ftadd@f1& (0+255),f,b
  2228  0003EE  0E00               	movlw	0
  2229  0003F0  0100               	movlb	0	; () banked
  2230  0003F2  23E8               	addwfc	(___ftadd@f1+1)& (0+255),f,b
  2231  0003F4  0E00               	movlw	0
  2232  0003F6  0100               	movlb	0	; () banked
  2233  0003F8  23E9               	addwfc	(___ftadd@f1+2)& (0+255),f,b
  2234  0003FA                     l1142:
  2235                           
  2236                           ; BSR set to: 0
  2237  0003FA  0100               	movlb	0	; () banked
  2238  0003FC  ADED               	btfss	___ftadd@sign& (0+255),6,b
  2239  0003FE  D012               	goto	l3722
  2240                           
  2241                           ; BSR set to: 0
  2242  000400  0EFF               	movlw	255
  2243  000402  0100               	movlb	0	; () banked
  2244  000404  1BEA               	xorwf	___ftadd@f2& (0+255),f,b
  2245  000406  0EFF               	movlw	255
  2246  000408  0100               	movlb	0	; () banked
  2247  00040A  1BEB               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  2248  00040C  0EFF               	movlw	255
  2249  00040E  0100               	movlb	0	; () banked
  2250  000410  1BEC               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  2251  000412  0E01               	movlw	1
  2252  000414  0100               	movlb	0	; () banked
  2253  000416  27EA               	addwf	___ftadd@f2& (0+255),f,b
  2254  000418  0E00               	movlw	0
  2255  00041A  0100               	movlb	0	; () banked
  2256  00041C  23EB               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  2257  00041E  0E00               	movlw	0
  2258  000420  0100               	movlb	0	; () banked
  2259  000422  23EC               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  2260  000424                     l3722:
  2261                           
  2262                           ; BSR set to: 0
  2263  000424  0E00               	movlw	0
  2264  000426  0100               	movlb	0	; () banked
  2265  000428  6FED               	movwf	___ftadd@sign& (0+255),b
  2266                           
  2267                           ; BSR set to: 0
  2268  00042A  0100               	movlb	0	; () banked
  2269  00042C  51E7               	movf	___ftadd@f1& (0+255),w,b
  2270  00042E  0100               	movlb	0	; () banked
  2271  000430  27EA               	addwf	___ftadd@f2& (0+255),f,b
  2272  000432  0100               	movlb	0	; () banked
  2273  000434  51E8               	movf	(___ftadd@f1+1)& (0+255),w,b
  2274  000436  0100               	movlb	0	; () banked
  2275  000438  23EB               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  2276  00043A  0100               	movlb	0	; () banked
  2277  00043C  51E9               	movf	(___ftadd@f1+2)& (0+255),w,b
  2278  00043E  0100               	movlb	0	; () banked
  2279  000440  23EC               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  2280                           
  2281                           ; BSR set to: 0
  2282  000442  0100               	movlb	0	; () banked
  2283  000444  AFEC               	btfss	(___ftadd@f2+2)& (0+255),7,b
  2284  000446  D015               	goto	l3732
  2285                           
  2286                           ; BSR set to: 0
  2287  000448  0EFF               	movlw	255
  2288  00044A  0100               	movlb	0	; () banked
  2289  00044C  1BEA               	xorwf	___ftadd@f2& (0+255),f,b
  2290  00044E  0EFF               	movlw	255
  2291  000450  0100               	movlb	0	; () banked
  2292  000452  1BEB               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  2293  000454  0EFF               	movlw	255
  2294  000456  0100               	movlb	0	; () banked
  2295  000458  1BEC               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  2296  00045A  0E01               	movlw	1
  2297  00045C  0100               	movlb	0	; () banked
  2298  00045E  27EA               	addwf	___ftadd@f2& (0+255),f,b
  2299  000460  0E00               	movlw	0
  2300  000462  0100               	movlb	0	; () banked
  2301  000464  23EB               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  2302  000466  0E00               	movlw	0
  2303  000468  0100               	movlb	0	; () banked
  2304  00046A  23EC               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  2305                           
  2306                           ; BSR set to: 0
  2307  00046C  0E01               	movlw	1
  2308  00046E  0100               	movlb	0	; () banked
  2309  000470  6FED               	movwf	___ftadd@sign& (0+255),b
  2310  000472                     l3732:
  2311                           
  2312                           ; BSR set to: 0
  2313  000472  C0EA  F011         	movff	___ftadd@f2,___ftpack@arg
  2314  000476  C0EB  F012         	movff	___ftadd@f2+1,___ftpack@arg+1
  2315  00047A  C0EC  F013         	movff	___ftadd@f2+2,___ftpack@arg+2
  2316  00047E  C0EF  F014         	movff	___ftadd@exp1,___ftpack@exp
  2317  000482  C0ED  F015         	movff	___ftadd@sign,___ftpack@sign
  2318  000486  ECDE  F005         	call	___ftpack	;wreg free
  2319  00048A  C011  F0E7         	movff	?___ftpack,?___ftadd
  2320  00048E  C012  F0E8         	movff	?___ftpack+1,?___ftadd+1
  2321  000492  C013  F0E9         	movff	?___ftpack+2,?___ftadd+2
  2322  000496  0012               	return	
  2323  000498                     __end_of___ftadd:
  2324                           	opt stack 0
  2325                           tblptru	equ	0xFF8
  2326                           tblptrh	equ	0xFF7
  2327                           tblptrl	equ	0xFF6
  2328                           tablat	equ	0xFF5
  2329                           intcon	equ	0xFF2
  2330                           intcon3	equ	0xFF0
  2331                           postinc0	equ	0xFEE
  2332                           wreg	equ	0xFE8
  2333                           postdec1	equ	0xFE5
  2334                           fsr1l	equ	0xFE1
  2335                           status	equ	0xFD8
  2336                           
  2337 ;; *************** function ___ftpack *****************
  2338 ;; Defined at:
  2339 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\float.c"
  2340 ;; Parameters:    Size  Location     Type
  2341 ;;  arg             3   16[COMRAM] unsigned um
  2342 ;;  exp             1   19[COMRAM] unsigned char 
  2343 ;;  sign            1   20[COMRAM] unsigned char 
  2344 ;; Auto vars:     Size  Location     Type
  2345 ;;		None
  2346 ;; Return value:  Size  Location     Type
  2347 ;;                  3   16[COMRAM] float 
  2348 ;; Registers used:
  2349 ;;		wreg, status,2, status,0
  2350 ;; Tracked objects:
  2351 ;;		On entry : 0/0
  2352 ;;		On exit  : 0/0
  2353 ;;		Unchanged: 0/0
  2354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2355 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2357 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2358 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2359 ;;Total ram usage:        8 bytes
  2360 ;; Hardware stack levels used:    1
  2361 ;; Hardware stack levels required when called:    2
  2362 ;; This function calls:
  2363 ;;		Nothing
  2364 ;; This function is called by:
  2365 ;;		___ftadd
  2366 ;;		___ftdiv
  2367 ;;		___ftmul
  2368 ;;		___lwtoft
  2369 ;; This function uses a non-reentrant model
  2370 ;;
  2371                           
  2372                           	psect	text6
  2373  000BBC                     __ptext6:
  2374                           	opt stack 0
  2375  000BBC                     ___ftpack:
  2376                           	opt stack 27
  2377                           
  2378                           ;incstack = 0
  2379  000BBC  5014               	movf	___ftpack@exp,w,c
  2380  000BBE  B4D8               	btfsc	status,2,c
  2381  000BC0  D005               	goto	l3602
  2382  000BC2  5011               	movf	___ftpack@arg,w,c
  2383  000BC4  1012               	iorwf	___ftpack@arg+1,w,c
  2384  000BC6  1013               	iorwf	___ftpack@arg+2,w,c
  2385  000BC8  A4D8               	btfss	status,2,c
  2386  000BCA  D00C               	goto	l3608
  2387  000BCC                     l3602:
  2388  000BCC  0E00               	movlw	0
  2389  000BCE  6E11               	movwf	?___ftpack,c
  2390  000BD0  0E00               	movlw	0
  2391  000BD2  6E12               	movwf	?___ftpack+1,c
  2392  000BD4  0E00               	movlw	0
  2393  000BD6  6E13               	movwf	?___ftpack+2,c
  2394  000BD8  0012               	return	
  2395  000BDA                     l3606:
  2396  000BDA  2A14               	incf	___ftpack@exp,f,c
  2397  000BDC  90D8               	bcf	status,0,c
  2398  000BDE  3213               	rrcf	___ftpack@arg+2,f,c
  2399  000BE0  3212               	rrcf	___ftpack@arg+1,f,c
  2400  000BE2  3211               	rrcf	___ftpack@arg,f,c
  2401  000BE4                     l3608:
  2402  000BE4  0E00               	movlw	0
  2403  000BE6  1411               	andwf	___ftpack@arg,w,c
  2404  000BE8  6E16               	movwf	??___ftpack& (0+255),c
  2405  000BEA  0E00               	movlw	0
  2406  000BEC  1412               	andwf	___ftpack@arg+1,w,c
  2407  000BEE  6E17               	movwf	(??___ftpack+1)& (0+255),c
  2408  000BF0  0EFE               	movlw	254
  2409  000BF2  1413               	andwf	___ftpack@arg+2,w,c
  2410  000BF4  6E18               	movwf	(??___ftpack+2)& (0+255),c
  2411  000BF6  5016               	movf	??___ftpack,w,c
  2412  000BF8  1017               	iorwf	??___ftpack+1,w,c
  2413  000BFA  1018               	iorwf	??___ftpack+2,w,c
  2414  000BFC  B4D8               	btfsc	status,2,c
  2415  000BFE  D00C               	goto	l3614
  2416  000C00  D7EC               	goto	l3606
  2417  000C02                     l3610:
  2418  000C02  2A14               	incf	___ftpack@exp,f,c
  2419  000C04  0E01               	movlw	1
  2420  000C06  2611               	addwf	___ftpack@arg,f,c
  2421  000C08  0E00               	movlw	0
  2422  000C0A  2212               	addwfc	___ftpack@arg+1,f,c
  2423  000C0C  0E00               	movlw	0
  2424  000C0E  2213               	addwfc	___ftpack@arg+2,f,c
  2425  000C10  90D8               	bcf	status,0,c
  2426  000C12  3213               	rrcf	___ftpack@arg+2,f,c
  2427  000C14  3212               	rrcf	___ftpack@arg+1,f,c
  2428  000C16  3211               	rrcf	___ftpack@arg,f,c
  2429  000C18                     l3614:
  2430  000C18  0E00               	movlw	0
  2431  000C1A  1411               	andwf	___ftpack@arg,w,c
  2432  000C1C  6E16               	movwf	??___ftpack& (0+255),c
  2433  000C1E  0E00               	movlw	0
  2434  000C20  1412               	andwf	___ftpack@arg+1,w,c
  2435  000C22  6E17               	movwf	(??___ftpack+1)& (0+255),c
  2436  000C24  0EFF               	movlw	255
  2437  000C26  1413               	andwf	___ftpack@arg+2,w,c
  2438  000C28  6E18               	movwf	(??___ftpack+2)& (0+255),c
  2439  000C2A  5016               	movf	??___ftpack,w,c
  2440  000C2C  1017               	iorwf	??___ftpack+1,w,c
  2441  000C2E  1018               	iorwf	??___ftpack+2,w,c
  2442  000C30  B4D8               	btfsc	status,2,c
  2443  000C32  D006               	goto	l3618
  2444  000C34  D7E6               	goto	l3610
  2445  000C36                     l3616:
  2446  000C36  0614               	decf	___ftpack@exp,f,c
  2447  000C38  90D8               	bcf	status,0,c
  2448  000C3A  3611               	rlcf	___ftpack@arg,f,c
  2449  000C3C  3612               	rlcf	___ftpack@arg+1,f,c
  2450  000C3E  3613               	rlcf	___ftpack@arg+2,f,c
  2451  000C40                     l3618:
  2452  000C40  BE12               	btfsc	___ftpack@arg+1,7,c
  2453  000C42  D003               	goto	l1095
  2454  000C44  0E02               	movlw	2
  2455  000C46  6014               	cpfslt	___ftpack@exp,c
  2456  000C48  D7F6               	goto	l3616
  2457  000C4A                     l1095:
  2458  000C4A  A014               	btfss	___ftpack@exp,0,c
  2459  000C4C  9E12               	bcf	___ftpack@arg+1,7,c
  2460  000C4E  90D8               	bcf	status,0,c
  2461  000C50  3214               	rrcf	___ftpack@exp,f,c
  2462  000C52  5014               	movf	___ftpack@exp,w,c
  2463  000C54  1213               	iorwf	___ftpack@arg+2,f,c
  2464  000C56  5015               	movf	___ftpack@sign,w,c
  2465  000C58  A4D8               	btfss	status,2,c
  2466  000C5A  8E13               	bsf	___ftpack@arg+2,7,c
  2467  000C5C  C011  F011         	movff	___ftpack@arg,?___ftpack
  2468  000C60  C012  F012         	movff	___ftpack@arg+1,?___ftpack+1
  2469  000C64  C013  F013         	movff	___ftpack@arg+2,?___ftpack+2
  2470  000C68  0012               	return	
  2471  000C6A                     __end_of___ftpack:
  2472                           	opt stack 0
  2473                           tblptru	equ	0xFF8
  2474                           tblptrh	equ	0xFF7
  2475                           tblptrl	equ	0xFF6
  2476                           tablat	equ	0xFF5
  2477                           intcon	equ	0xFF2
  2478                           intcon3	equ	0xFF0
  2479                           postinc0	equ	0xFEE
  2480                           wreg	equ	0xFE8
  2481                           postdec1	equ	0xFE5
  2482                           fsr1l	equ	0xFE1
  2483                           status	equ	0xFD8
  2484                           
  2485 ;; *************** function _Set_Timer3 *****************
  2486 ;; Defined at:
  2487 ;;		line 72 in file "TIMERS_XC8.c"
  2488 ;; Parameters:    Size  Location     Type
  2489 ;;  data_timer      2   16[COMRAM] unsigned int 
  2490 ;; Auto vars:     Size  Location     Type
  2491 ;;		None
  2492 ;; Return value:  Size  Location     Type
  2493 ;;                  1    wreg      void 
  2494 ;; Registers used:
  2495 ;;		wreg, status,2
  2496 ;; Tracked objects:
  2497 ;;		On entry : 0/0
  2498 ;;		On exit  : 0/0
  2499 ;;		Unchanged: 0/0
  2500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2501 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2504 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2505 ;;Total ram usage:        2 bytes
  2506 ;; Hardware stack levels used:    1
  2507 ;; Hardware stack levels required when called:    2
  2508 ;; This function calls:
  2509 ;;		Nothing
  2510 ;; This function is called by:
  2511 ;;		_main
  2512 ;; This function uses a non-reentrant model
  2513 ;;
  2514                           
  2515                           	psect	text7
  2516  000E00                     __ptext7:
  2517                           	opt stack 0
  2518  000E00                     _Set_Timer3:
  2519                           	opt stack 28
  2520                           
  2521                           ;TIMERS_XC8.c: 74: TMR3H = data_timer >> 8;
  2522                           
  2523                           ;incstack = 0
  2524  000E00  5012               	movf	Set_Timer3@data_timer+1,w,c
  2525  000E02  6EB3               	movwf	4019,c	;volatile
  2526                           
  2527                           ;TIMERS_XC8.c: 75: TMR3L = data_timer & 0x00FF;
  2528  000E04  C011  FFB2         	movff	Set_Timer3@data_timer,4018	;volatile
  2529  000E08  0012               	return		;funcret
  2530  000E0A                     __end_of_Set_Timer3:
  2531                           	opt stack 0
  2532                           tblptru	equ	0xFF8
  2533                           tblptrh	equ	0xFF7
  2534                           tblptrl	equ	0xFF6
  2535                           tablat	equ	0xFF5
  2536                           intcon	equ	0xFF2
  2537                           intcon3	equ	0xFF0
  2538                           postinc0	equ	0xFEE
  2539                           wreg	equ	0xFE8
  2540                           postdec1	equ	0xFE5
  2541                           fsr1l	equ	0xFE1
  2542                           status	equ	0xFD8
  2543                           
  2544 ;; *************** function _Putc_TX1_16bits *****************
  2545 ;; Defined at:
  2546 ;;		line 32 in file "RS232_K22.c"
  2547 ;; Parameters:    Size  Location     Type
  2548 ;;  dado            2   17[COMRAM] unsigned int 
  2549 ;; Auto vars:     Size  Location     Type
  2550 ;;  lsb             1   20[COMRAM] unsigned char 
  2551 ;;  msb             1   19[COMRAM] unsigned char 
  2552 ;; Return value:  Size  Location     Type
  2553 ;;                  1    wreg      void 
  2554 ;; Registers used:
  2555 ;;		wreg, status,2, cstack
  2556 ;; Tracked objects:
  2557 ;;		On entry : 0/0
  2558 ;;		On exit  : 0/0
  2559 ;;		Unchanged: 0/0
  2560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2561 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2562 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2564 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2565 ;;Total ram usage:        4 bytes
  2566 ;; Hardware stack levels used:    1
  2567 ;; Hardware stack levels required when called:    3
  2568 ;; This function calls:
  2569 ;;		_Putc_TX1
  2570 ;; This function is called by:
  2571 ;;		_main
  2572 ;; This function uses a non-reentrant model
  2573 ;;
  2574                           
  2575                           	psect	text8
  2576  000DB2                     __ptext8:
  2577                           	opt stack 0
  2578  000DB2                     _Putc_TX1_16bits:
  2579                           	opt stack 27
  2580                           
  2581                           ;RS232_K22.c: 34: unsigned char msb, lsb;
  2582                           ;RS232_K22.c: 36: msb = (unsigned char)((dado >> 8) & 0xFF);
  2583                           
  2584                           ;incstack = 0
  2585  000DB2  5013               	movf	Putc_TX1_16bits@dado+1,w,c
  2586  000DB4  6E14               	movwf	Putc_TX1_16bits@msb,c
  2587                           
  2588                           ;RS232_K22.c: 37: lsb = (unsigned char)(dado & 0xFF);
  2589  000DB6  C012  F015         	movff	Putc_TX1_16bits@dado,Putc_TX1_16bits@lsb
  2590                           
  2591                           ;RS232_K22.c: 40: Putc_TX1(msb);
  2592  000DBA  5014               	movf	Putc_TX1_16bits@msb,w,c
  2593  000DBC  ECE4  F006         	call	_Putc_TX1
  2594                           
  2595                           ;RS232_K22.c: 43: Putc_TX1(lsb);
  2596  000DC0  5015               	movf	Putc_TX1_16bits@lsb,w,c
  2597  000DC2  ECE4  F006         	call	_Putc_TX1
  2598  000DC6  0012               	return		;funcret
  2599  000DC8                     __end_of_Putc_TX1_16bits:
  2600                           	opt stack 0
  2601                           tblptru	equ	0xFF8
  2602                           tblptrh	equ	0xFF7
  2603                           tblptrl	equ	0xFF6
  2604                           tablat	equ	0xFF5
  2605                           intcon	equ	0xFF2
  2606                           intcon3	equ	0xFF0
  2607                           postinc0	equ	0xFEE
  2608                           wreg	equ	0xFE8
  2609                           postdec1	equ	0xFE5
  2610                           fsr1l	equ	0xFE1
  2611                           status	equ	0xFD8
  2612                           
  2613 ;; *************** function _Putc_TX1 *****************
  2614 ;; Defined at:
  2615 ;;		line 72 in file "RS232_K22.c"
  2616 ;; Parameters:    Size  Location     Type
  2617 ;;  valor           1    wreg     unsigned char 
  2618 ;; Auto vars:     Size  Location     Type
  2619 ;;  valor           1   16[COMRAM] unsigned char 
  2620 ;; Return value:  Size  Location     Type
  2621 ;;                  1    wreg      void 
  2622 ;; Registers used:
  2623 ;;		wreg, status,2, cstack
  2624 ;; Tracked objects:
  2625 ;;		On entry : 0/0
  2626 ;;		On exit  : 0/0
  2627 ;;		Unchanged: 0/0
  2628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2630 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2632 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2633 ;;Total ram usage:        1 bytes
  2634 ;; Hardware stack levels used:    1
  2635 ;; Hardware stack levels required when called:    2
  2636 ;; This function calls:
  2637 ;;		Nothing
  2638 ;; This function is called by:
  2639 ;;		_main
  2640 ;;		_Putc_TX1_16bits
  2641 ;;		_Putc_TX1_Data
  2642 ;;		_Putc_Text_TX1
  2643 ;; This function uses a non-reentrant model
  2644 ;;
  2645                           
  2646                           	psect	text9
  2647  000DC8                     __ptext9:
  2648                           	opt stack 0
  2649  000DC8                     _Putc_TX1:
  2650                           	opt stack 27
  2651                           
  2652                           ;incstack = 0
  2653                           ;Putc_TX1@valor stored from wreg
  2654  000DC8  6E11               	movwf	Putc_TX1@valor,c
  2655                           
  2656                           ;RS232_K22.c: 75: TXREG1 = valor;
  2657  000DCA  C011  FFAD         	movff	Putc_TX1@valor,4013	;volatile
  2658  000DCE                     l389:
  2659  000DCE  A2AC               	btfss	4012,1,c	;volatile
  2660  000DD0  D7FE               	goto	l389
  2661                           
  2662                           ;RS232_K22.c: 77: _delay((unsigned long)((10)*(40000000/4000000.0)));
  2663  000DD2  0E21               	movlw	33
  2664  000DD4                     u3027:
  2665  000DD4  2EE8               	decfsz	wreg,f,c
  2666  000DD6  D7FE               	bra	u3027
  2667  000DD8  F000               	nop	
  2668  000DDA  0012               	return		;funcret
  2669  000DDC                     __end_of_Putc_TX1:
  2670                           	opt stack 0
  2671                           tblptru	equ	0xFF8
  2672                           tblptrh	equ	0xFF7
  2673                           tblptrl	equ	0xFF6
  2674                           tablat	equ	0xFF5
  2675                           intcon	equ	0xFF2
  2676                           intcon3	equ	0xFF0
  2677                           postinc0	equ	0xFEE
  2678                           wreg	equ	0xFE8
  2679                           postdec1	equ	0xFE5
  2680                           fsr1l	equ	0xFE1
  2681                           status	equ	0xFD8
  2682                           
  2683 ;; *************** function _Make16 *****************
  2684 ;; Defined at:
  2685 ;;		line 356 in file "main.c"
  2686 ;; Parameters:    Size  Location     Type
  2687 ;;  data1           1    wreg     unsigned char 
  2688 ;;  data2           1   16[COMRAM] unsigned char 
  2689 ;; Auto vars:     Size  Location     Type
  2690 ;;  data1           1   20[COMRAM] unsigned char 
  2691 ;; Return value:  Size  Location     Type
  2692 ;;                  2   16[COMRAM] unsigned int 
  2693 ;; Registers used:
  2694 ;;		wreg, status,2, status,0
  2695 ;; Tracked objects:
  2696 ;;		On entry : 0/0
  2697 ;;		On exit  : 0/0
  2698 ;;		Unchanged: 0/0
  2699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2700 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2701 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2702 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2703 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2704 ;;Total ram usage:        5 bytes
  2705 ;; Hardware stack levels used:    1
  2706 ;; Hardware stack levels required when called:    2
  2707 ;; This function calls:
  2708 ;;		Nothing
  2709 ;; This function is called by:
  2710 ;;		_main
  2711 ;; This function uses a non-reentrant model
  2712 ;;
  2713                           
  2714                           	psect	text10
  2715  000D7E                     __ptext10:
  2716                           	opt stack 0
  2717  000D7E                     _Make16:
  2718                           	opt stack 28
  2719                           
  2720                           ;incstack = 0
  2721                           ;Make16@data1 stored from wreg
  2722  000D7E  6E15               	movwf	Make16@data1,c
  2723                           
  2724                           ;main.c: 358: return ((data1 << 8) | data2);
  2725  000D80  5011               	movf	Make16@data2,w,c
  2726  000D82  C015  F013         	movff	Make16@data1,??_Make16
  2727  000D86  6A14               	clrf	(??_Make16+1)& (0+255),c
  2728  000D88  C013  F014         	movff	??_Make16,??_Make16+1
  2729  000D8C  6A13               	clrf	??_Make16,c
  2730  000D8E  1013               	iorwf	??_Make16,w,c
  2731  000D90  6E11               	movwf	?_Make16,c
  2732  000D92  5014               	movf	??_Make16+1,w,c
  2733  000D94  6E12               	movwf	?_Make16+1,c
  2734  000D96  0012               	return	
  2735  000D98                     __end_of_Make16:
  2736                           	opt stack 0
  2737                           tblptru	equ	0xFF8
  2738                           tblptrh	equ	0xFF7
  2739                           tblptrl	equ	0xFF6
  2740                           tablat	equ	0xFF5
  2741                           intcon	equ	0xFF2
  2742                           intcon3	equ	0xFF0
  2743                           postinc0	equ	0xFEE
  2744                           wreg	equ	0xFE8
  2745                           postdec1	equ	0xFE5
  2746                           fsr1l	equ	0xFE1
  2747                           status	equ	0xFD8
  2748                           
  2749 ;; *************** function _I2C_Slave_Init *****************
  2750 ;; Defined at:
  2751 ;;		line 21 in file "ConfigI2c.c"
  2752 ;; Parameters:    Size  Location     Type
  2753 ;;  address         1    wreg     unsigned char 
  2754 ;; Auto vars:     Size  Location     Type
  2755 ;;  address         1   16[COMRAM] unsigned char 
  2756 ;; Return value:  Size  Location     Type
  2757 ;;                  1    wreg      void 
  2758 ;; Registers used:
  2759 ;;		wreg, status,2
  2760 ;; Tracked objects:
  2761 ;;		On entry : 0/0
  2762 ;;		On exit  : 0/0
  2763 ;;		Unchanged: 0/0
  2764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2766 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2768 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2769 ;;Total ram usage:        1 bytes
  2770 ;; Hardware stack levels used:    1
  2771 ;; Hardware stack levels required when called:    2
  2772 ;; This function calls:
  2773 ;;		Nothing
  2774 ;; This function is called by:
  2775 ;;		_main
  2776 ;; This function uses a non-reentrant model
  2777 ;;
  2778                           
  2779                           	psect	text11
  2780  000D0E                     __ptext11:
  2781                           	opt stack 0
  2782  000D0E                     _I2C_Slave_Init:
  2783                           	opt stack 28
  2784                           
  2785                           ;incstack = 0
  2786                           ;I2C_Slave_Init@address stored from wreg
  2787  000D0E  6E11               	movwf	I2C_Slave_Init@address,c
  2788                           
  2789                           ;ConfigI2c.c: 24: ANSELC = 0x00;
  2790  000D10  0E00               	movlw	0
  2791  000D12  010F               	movlb	15	; () banked
  2792  000D14  6F3A               	movwf	58,b	;volatile
  2793                           
  2794                           ; BSR set to: 15
  2795                           ;ConfigI2c.c: 26: TRISCbits.RC3 = 1;
  2796  000D16  8694               	bsf	3988,3,c	;volatile
  2797                           
  2798                           ; BSR set to: 15
  2799                           ;ConfigI2c.c: 27: TRISCbits.RC4 = 1;
  2800  000D18  8894               	bsf	3988,4,c	;volatile
  2801                           
  2802                           ; BSR set to: 15
  2803                           ;ConfigI2c.c: 28: TRISCbits.RC5 = 1;
  2804  000D1A  8A94               	bsf	3988,5,c	;volatile
  2805                           
  2806                           ;ConfigI2c.c: 30: SSP1CON1 = 0b00110110;
  2807  000D1C  0E36               	movlw	54
  2808  000D1E  6EC6               	movwf	4038,c	;volatile
  2809                           
  2810                           ;ConfigI2c.c: 31: SSP1CON2 = 0x01;
  2811  000D20  0E01               	movlw	1
  2812  000D22  6EC5               	movwf	4037,c	;volatile
  2813                           
  2814                           ; BSR set to: 15
  2815                           ;ConfigI2c.c: 32: SSP1ADD = address;
  2816  000D24  C011  FFC8         	movff	I2C_Slave_Init@address,4040	;volatile
  2817                           
  2818                           ; BSR set to: 15
  2819                           ;ConfigI2c.c: 33: SSP1STAT = 0x00;
  2820  000D28  0E00               	movlw	0
  2821  000D2A  6EC7               	movwf	4039,c	;volatile
  2822                           
  2823                           ; BSR set to: 15
  2824                           ;ConfigI2c.c: 35: INTCONbits.GIE=1;
  2825  000D2C  8EF2               	bsf	intcon,7,c	;volatile
  2826                           
  2827                           ; BSR set to: 15
  2828                           ;ConfigI2c.c: 36: INTCONbits.PEIE=1;
  2829  000D2E  8CF2               	bsf	intcon,6,c	;volatile
  2830                           
  2831                           ; BSR set to: 15
  2832                           ;ConfigI2c.c: 37: PIE1bits.SSPIE = 1;
  2833  000D30  869D               	bsf	3997,3,c	;volatile
  2834                           
  2835                           ; BSR set to: 15
  2836                           ;ConfigI2c.c: 38: PIE1bits.SSP1IE = 1;
  2837  000D32  869D               	bsf	3997,3,c	;volatile
  2838                           
  2839                           ; BSR set to: 15
  2840                           ;ConfigI2c.c: 39: PIR1bits.SSP1IF = 0;
  2841  000D34  969E               	bcf	3998,3,c	;volatile
  2842                           
  2843                           ; BSR set to: 15
  2844                           ;ConfigI2c.c: 40: PIR1bits.SSPIF = 0;
  2845  000D36  969E               	bcf	3998,3,c	;volatile
  2846                           
  2847                           ; BSR set to: 15
  2848  000D38  0012               	return		;funcret
  2849  000D3A                     __end_of_I2C_Slave_Init:
  2850                           	opt stack 0
  2851                           tblptru	equ	0xFF8
  2852                           tblptrh	equ	0xFF7
  2853                           tblptrl	equ	0xFF6
  2854                           tablat	equ	0xFF5
  2855                           intcon	equ	0xFF2
  2856                           intcon3	equ	0xFF0
  2857                           postinc0	equ	0xFEE
  2858                           wreg	equ	0xFE8
  2859                           postdec1	equ	0xFE5
  2860                           fsr1l	equ	0xFE1
  2861                           status	equ	0xFD8
  2862                           
  2863 ;; *************** function _ConfigureHW *****************
  2864 ;; Defined at:
  2865 ;;		line 401 in file "main.c"
  2866 ;; Parameters:    Size  Location     Type
  2867 ;;		None
  2868 ;; Auto vars:     Size  Location     Type
  2869 ;;		None
  2870 ;; Return value:  Size  Location     Type
  2871 ;;                  1    wreg      void 
  2872 ;; Registers used:
  2873 ;;		wreg, status,2, status,0, cstack
  2874 ;; Tracked objects:
  2875 ;;		On entry : 0/0
  2876 ;;		On exit  : 0/0
  2877 ;;		Unchanged: 0/0
  2878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2879 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2880 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2882 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2883 ;;Total ram usage:        0 bytes
  2884 ;; Hardware stack levels used:    1
  2885 ;; Hardware stack levels required when called:    4
  2886 ;; This function calls:
  2887 ;;		_Config_Timer1
  2888 ;;		_Config_Timer3
  2889 ;;		_Init1_RS232
  2890 ;;		_No_Analogs
  2891 ;; This function is called by:
  2892 ;;		_main
  2893 ;; This function uses a non-reentrant model
  2894 ;;
  2895                           
  2896                           	psect	text12
  2897  000CC0                     __ptext12:
  2898                           	opt stack 0
  2899  000CC0                     _ConfigureHW:
  2900                           	opt stack 26
  2901                           
  2902                           ;main.c: 403: No_Analogs();
  2903                           
  2904                           ; BSR set to: 15
  2905                           ;incstack = 0
  2906  000CC0  ECAF  F006         	call	_No_Analogs	;wreg free
  2907                           
  2908                           ;main.c: 404: TRISC7 = 1;
  2909  000CC4  8E94               	bsf	3988,7,c	;volatile
  2910                           
  2911                           ;main.c: 405: TRISC6 = 0;
  2912  000CC6  9C94               	bcf	3988,6,c	;volatile
  2913                           
  2914                           ;main.c: 406: TRISB7 = 0;
  2915  000CC8  9E93               	bcf	3987,7,c	;volatile
  2916                           
  2917                           ;main.c: 407: TRISA0 = 0;
  2918  000CCA  9092               	bcf	3986,0,c	;volatile
  2919                           
  2920                           ;main.c: 408: TRISAbits.TRISA1 = 0;
  2921  000CCC  9292               	bcf	3986,1,c	;volatile
  2922                           
  2923                           ;main.c: 409: TRISAbits.TRISA2 = 0;
  2924  000CCE  9492               	bcf	3986,2,c	;volatile
  2925                           
  2926                           ;main.c: 410: TRISAbits.TRISA3 = 0;
  2927  000CD0  9692               	bcf	3986,3,c	;volatile
  2928                           
  2929                           ;main.c: 411: TRISAbits.TRISA4 = 0;
  2930  000CD2  9892               	bcf	3986,4,c	;volatile
  2931                           
  2932                           ;main.c: 412: PORTB = 0b00000010;
  2933  000CD4  0E02               	movlw	2
  2934  000CD6  6E81               	movwf	3969,c	;volatile
  2935                           
  2936                           ;main.c: 413: TRISBbits.TRISB2 = 0;
  2937  000CD8  9493               	bcf	3987,2,c	;volatile
  2938                           
  2939                           ;main.c: 414: TRISBbits.TRISB3 = 0;
  2940  000CDA  9693               	bcf	3987,3,c	;volatile
  2941                           
  2942                           ;main.c: 415: TRISBbits.TRISB4 = 0;
  2943  000CDC  9893               	bcf	3987,4,c	;volatile
  2944                           
  2945                           ;main.c: 416: TRISBbits.TRISB5 = 0;
  2946  000CDE  9A93               	bcf	3987,5,c	;volatile
  2947                           
  2948                           ;main.c: 417: TRISC1 = 0;
  2949  000CE0  9294               	bcf	3988,1,c	;volatile
  2950                           
  2951                           ;main.c: 418: TRISC0 = 0;
  2952  000CE2  9094               	bcf	3988,0,c	;volatile
  2953                           
  2954                           ;main.c: 419: TRISC2 = 0;
  2955  000CE4  9494               	bcf	3988,2,c	;volatile
  2956                           
  2957                           ;main.c: 420: TRISE = 0xFF;
  2958  000CE6  6896               	setf	3990,c	;volatile
  2959                           
  2960                           ;main.c: 422: Init1_RS232(38400, 1);
  2961  000CE8  0E00               	movlw	0
  2962  000CEA  6E1F               	movwf	Init1_RS232@velocity,c
  2963  000CEC  0E96               	movlw	150
  2964  000CEE  6E20               	movwf	Init1_RS232@velocity+1,c
  2965  000CF0  0E00               	movlw	0
  2966  000CF2  6E21               	movwf	Init1_RS232@velocity+2,c
  2967  000CF4  0E00               	movlw	0
  2968  000CF6  6E22               	movwf	Init1_RS232@velocity+3,c
  2969  000CF8  0E00               	movlw	0
  2970  000CFA  6E24               	movwf	Init1_RS232@mode+1,c
  2971  000CFC  0E01               	movlw	1
  2972  000CFE  6E23               	movwf	Init1_RS232@mode,c
  2973  000D00  EC8E  F004         	call	_Init1_RS232	;wreg free
  2974                           
  2975                           ;main.c: 425: Config_Timer1();
  2976  000D04  ECEE  F006         	call	_Config_Timer1	;wreg free
  2977                           
  2978                           ;main.c: 426: Config_Timer3();
  2979  000D08  ECCC  F006         	call	_Config_Timer3	;wreg free
  2980  000D0C  0012               	return		;funcret
  2981  000D0E                     __end_of_ConfigureHW:
  2982                           	opt stack 0
  2983                           tblptru	equ	0xFF8
  2984                           tblptrh	equ	0xFF7
  2985                           tblptrl	equ	0xFF6
  2986                           tablat	equ	0xFF5
  2987                           intcon	equ	0xFF2
  2988                           intcon3	equ	0xFF0
  2989                           postinc0	equ	0xFEE
  2990                           wreg	equ	0xFE8
  2991                           postdec1	equ	0xFE5
  2992                           fsr1l	equ	0xFE1
  2993                           status	equ	0xFD8
  2994                           
  2995 ;; *************** function _No_Analogs *****************
  2996 ;; Defined at:
  2997 ;;		line 392 in file "main.c"
  2998 ;; Parameters:    Size  Location     Type
  2999 ;;		None
  3000 ;; Auto vars:     Size  Location     Type
  3001 ;;		None
  3002 ;; Return value:  Size  Location     Type
  3003 ;;                  1    wreg      void 
  3004 ;; Registers used:
  3005 ;;		wreg, status,2
  3006 ;; Tracked objects:
  3007 ;;		On entry : 0/0
  3008 ;;		On exit  : 0/0
  3009 ;;		Unchanged: 0/0
  3010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3014 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3015 ;;Total ram usage:        0 bytes
  3016 ;; Hardware stack levels used:    1
  3017 ;; Hardware stack levels required when called:    2
  3018 ;; This function calls:
  3019 ;;		Nothing
  3020 ;; This function is called by:
  3021 ;;		_ConfigureHW
  3022 ;; This function uses a non-reentrant model
  3023 ;;
  3024                           
  3025                           	psect	text13
  3026  000D5E                     __ptext13:
  3027                           	opt stack 0
  3028  000D5E                     _No_Analogs:
  3029                           	opt stack 27
  3030                           
  3031                           ;main.c: 394: ANSELA = 0x00;
  3032                           
  3033                           ;incstack = 0
  3034  000D5E  0E00               	movlw	0
  3035  000D60  010F               	movlb	15	; () banked
  3036  000D62  6F38               	movwf	56,b	;volatile
  3037                           
  3038                           ;main.c: 395: ANSELB = 0x00;
  3039  000D64  0E00               	movlw	0
  3040  000D66  010F               	movlb	15	; () banked
  3041  000D68  6F39               	movwf	57,b	;volatile
  3042                           
  3043                           ;main.c: 396: ANSELC = 0x00;
  3044  000D6A  0E00               	movlw	0
  3045  000D6C  010F               	movlb	15	; () banked
  3046  000D6E  6F3A               	movwf	58,b	;volatile
  3047                           
  3048                           ;main.c: 397: ANSELD = 0x00;
  3049  000D70  0E00               	movlw	0
  3050  000D72  010F               	movlb	15	; () banked
  3051  000D74  6F3B               	movwf	59,b	;volatile
  3052                           
  3053                           ;main.c: 398: ANSELE = 0x00;
  3054  000D76  0E00               	movlw	0
  3055  000D78  010F               	movlb	15	; () banked
  3056  000D7A  6F3C               	movwf	60,b	;volatile
  3057                           
  3058                           ; BSR set to: 15
  3059  000D7C  0012               	return		;funcret
  3060  000D7E                     __end_of_No_Analogs:
  3061                           	opt stack 0
  3062                           tblptru	equ	0xFF8
  3063                           tblptrh	equ	0xFF7
  3064                           tblptrl	equ	0xFF6
  3065                           tablat	equ	0xFF5
  3066                           intcon	equ	0xFF2
  3067                           intcon3	equ	0xFF0
  3068                           postinc0	equ	0xFEE
  3069                           wreg	equ	0xFE8
  3070                           postdec1	equ	0xFE5
  3071                           fsr1l	equ	0xFE1
  3072                           status	equ	0xFD8
  3073                           
  3074 ;; *************** function _Init1_RS232 *****************
  3075 ;; Defined at:
  3076 ;;		line 6 in file "RS232_K22.c"
  3077 ;; Parameters:    Size  Location     Type
  3078 ;;  velocity        4   30[COMRAM] long 
  3079 ;;  mode            2   34[COMRAM] unsigned int 
  3080 ;; Auto vars:     Size  Location     Type
  3081 ;;  value           2   36[COMRAM] int 
  3082 ;; Return value:  Size  Location     Type
  3083 ;;                  1    wreg      void 
  3084 ;; Registers used:
  3085 ;;		wreg, status,2, status,0, cstack
  3086 ;; Tracked objects:
  3087 ;;		On entry : 0/0
  3088 ;;		On exit  : 0/0
  3089 ;;		Unchanged: 0/0
  3090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3091 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3092 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3094 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3095 ;;Total ram usage:       12 bytes
  3096 ;; Hardware stack levels used:    1
  3097 ;; Hardware stack levels required when called:    3
  3098 ;; This function calls:
  3099 ;;		___aldiv
  3100 ;; This function is called by:
  3101 ;;		_ConfigureHW
  3102 ;; This function uses a non-reentrant model
  3103 ;;
  3104                           
  3105                           	psect	text14
  3106  00091C                     __ptext14:
  3107                           	opt stack 0
  3108  00091C                     _Init1_RS232:
  3109                           	opt stack 26
  3110                           
  3111                           ;RS232_K22.c: 9: TRISC7 = 1;
  3112                           
  3113                           ; BSR set to: 15
  3114                           ;incstack = 0
  3115  00091C  8E94               	bsf	3988,7,c	;volatile
  3116                           
  3117                           ;RS232_K22.c: 10: TRISC6 = 0;
  3118  00091E  9C94               	bcf	3988,6,c	;volatile
  3119                           
  3120                           ;RS232_K22.c: 11: RCSTA1 = 0X90;
  3121  000920  0E90               	movlw	144
  3122  000922  6EAB               	movwf	4011,c	;volatile
  3123                           
  3124                           ;RS232_K22.c: 12: int value;
  3125                           ;RS232_K22.c: 13: if(mode == 1)
  3126  000924  0423               	decf	Init1_RS232@mode,w,c
  3127  000926  1024               	iorwf	Init1_RS232@mode+1,w,c
  3128  000928  A4D8               	btfss	status,2,c
  3129  00092A  D033               	goto	l2802
  3130                           
  3131                           ;RS232_K22.c: 14: {
  3132                           ;RS232_K22.c: 15: TXSTA1 = 0X24;
  3133  00092C  0E24               	movlw	36
  3134  00092E  6EAC               	movwf	4012,c	;volatile
  3135                           
  3136                           ;RS232_K22.c: 16: value =(unsigned int)(((40000000/velocity)-16)/16);
  3137  000930  C01F  F015         	movff	Init1_RS232@velocity,___aldiv@divisor
  3138  000934  C020  F016         	movff	Init1_RS232@velocity+1,___aldiv@divisor+1
  3139  000938  C021  F017         	movff	Init1_RS232@velocity+2,___aldiv@divisor+2
  3140  00093C  C022  F018         	movff	Init1_RS232@velocity+3,___aldiv@divisor+3
  3141  000940  0E00               	movlw	0
  3142  000942  6E11               	movwf	___aldiv@dividend,c
  3143  000944  0E5A               	movlw	90
  3144  000946  6E12               	movwf	___aldiv@dividend+1,c
  3145  000948  0E62               	movlw	98
  3146  00094A  6E13               	movwf	___aldiv@dividend+2,c
  3147  00094C  0E02               	movlw	2
  3148  00094E  6E14               	movwf	___aldiv@dividend+3,c
  3149  000950  EC78  F005         	call	___aldiv	;wreg free
  3150  000954  0EF0               	movlw	240
  3151  000956  2411               	addwf	?___aldiv,w,c
  3152  000958  6E27               	movwf	_Init1_RS232$3408,c
  3153  00095A  0EFF               	movlw	255
  3154  00095C  2012               	addwfc	?___aldiv+1,w,c
  3155  00095E  6E28               	movwf	_Init1_RS232$3408+1,c
  3156  000960  0EFF               	movlw	255
  3157  000962  2013               	addwfc	?___aldiv+2,w,c
  3158  000964  6E29               	movwf	_Init1_RS232$3408+2,c
  3159  000966  0EFF               	movlw	255
  3160  000968  2014               	addwfc	?___aldiv+3,w,c
  3161  00096A  6E2A               	movwf	_Init1_RS232$3408+3,c
  3162                           
  3163                           ;RS232_K22.c: 16: value =(unsigned int)(((40000000/velocity)-16)/16);
  3164  00096C  C027  F011         	movff	_Init1_RS232$3408,___aldiv@dividend
  3165  000970  C028  F012         	movff	_Init1_RS232$3408+1,___aldiv@dividend+1
  3166  000974  C029  F013         	movff	_Init1_RS232$3408+2,___aldiv@dividend+2
  3167  000978  C02A  F014         	movff	_Init1_RS232$3408+3,___aldiv@dividend+3
  3168  00097C  0E10               	movlw	16
  3169  00097E  6E15               	movwf	___aldiv@divisor,c
  3170  000980  0E00               	movlw	0
  3171  000982  6E16               	movwf	___aldiv@divisor+1,c
  3172  000984  0E00               	movlw	0
  3173  000986  6E17               	movwf	___aldiv@divisor+2,c
  3174  000988  0E00               	movlw	0
  3175  00098A  6E18               	movwf	___aldiv@divisor+3,c
  3176  00098C  EC78  F005         	call	___aldiv	;wreg free
  3177  000990  D032               	goto	L1
  3178  000992                     l2802:
  3179                           
  3180                           ;RS232_K22.c: 18: else
  3181                           ;RS232_K22.c: 19: {
  3182                           ;RS232_K22.c: 20: TXSTA1 = 0X20;
  3183  000992  0E20               	movlw	32
  3184  000994  6EAC               	movwf	4012,c	;volatile
  3185                           
  3186                           ;RS232_K22.c: 21: value =(unsigned int)(((40000000/velocity)-64)/64);
  3187  000996  C01F  F015         	movff	Init1_RS232@velocity,___aldiv@divisor
  3188  00099A  C020  F016         	movff	Init1_RS232@velocity+1,___aldiv@divisor+1
  3189  00099E  C021  F017         	movff	Init1_RS232@velocity+2,___aldiv@divisor+2
  3190  0009A2  C022  F018         	movff	Init1_RS232@velocity+3,___aldiv@divisor+3
  3191  0009A6  0E00               	movlw	0
  3192  0009A8  6E11               	movwf	___aldiv@dividend,c
  3193  0009AA  0E5A               	movlw	90
  3194  0009AC  6E12               	movwf	___aldiv@dividend+1,c
  3195  0009AE  0E62               	movlw	98
  3196  0009B0  6E13               	movwf	___aldiv@dividend+2,c
  3197  0009B2  0E02               	movlw	2
  3198  0009B4  6E14               	movwf	___aldiv@dividend+3,c
  3199  0009B6  EC78  F005         	call	___aldiv	;wreg free
  3200  0009BA  0EC0               	movlw	192
  3201  0009BC  2411               	addwf	?___aldiv,w,c
  3202  0009BE  6E27               	movwf	_Init1_RS232$3408,c
  3203  0009C0  0EFF               	movlw	255
  3204  0009C2  2012               	addwfc	?___aldiv+1,w,c
  3205  0009C4  6E28               	movwf	_Init1_RS232$3408+1,c
  3206  0009C6  0EFF               	movlw	255
  3207  0009C8  2013               	addwfc	?___aldiv+2,w,c
  3208  0009CA  6E29               	movwf	_Init1_RS232$3408+2,c
  3209  0009CC  0EFF               	movlw	255
  3210  0009CE  2014               	addwfc	?___aldiv+3,w,c
  3211  0009D0  6E2A               	movwf	_Init1_RS232$3408+3,c
  3212                           
  3213                           ;RS232_K22.c: 21: value =(unsigned int)(((40000000/velocity)-64)/64);
  3214  0009D2  C027  F011         	movff	_Init1_RS232$3408,___aldiv@dividend
  3215  0009D6  C028  F012         	movff	_Init1_RS232$3408+1,___aldiv@dividend+1
  3216  0009DA  C029  F013         	movff	_Init1_RS232$3408+2,___aldiv@dividend+2
  3217  0009DE  C02A  F014         	movff	_Init1_RS232$3408+3,___aldiv@dividend+3
  3218  0009E2  0E40               	movlw	64
  3219  0009E4  6E15               	movwf	___aldiv@divisor,c
  3220  0009E6  0E00               	movlw	0
  3221  0009E8  6E16               	movwf	___aldiv@divisor+1,c
  3222  0009EA  0E00               	movlw	0
  3223  0009EC  6E17               	movwf	___aldiv@divisor+2,c
  3224  0009EE  0E00               	movlw	0
  3225  0009F0  6E18               	movwf	___aldiv@divisor+3,c
  3226  0009F2  EC78  F005         	call	___aldiv	;wreg free
  3227  0009F6                     L1:
  3228  0009F6  C011  F025         	movff	?___aldiv,Init1_RS232@value
  3229  0009FA  C012  F026         	movff	?___aldiv+1,Init1_RS232@value+1
  3230                           
  3231                           ;RS232_K22.c: 22: }
  3232                           ;RS232_K22.c: 27: BAUDCON1bits.BRG16 = 0;
  3233  0009FE  96B8               	bcf	4024,3,c	;volatile
  3234                           
  3235                           ;RS232_K22.c: 28: SPBRG1 = value;
  3236  000A00  C025  FFAF         	movff	Init1_RS232@value,4015	;volatile
  3237                           
  3238                           ;RS232_K22.c: 29: RC1IE = 1;
  3239  000A04  8A9D               	bsf	3997,5,c	;volatile
  3240                           
  3241                           ;RS232_K22.c: 30: TX1IE = 0;
  3242  000A06  989D               	bcf	3997,4,c	;volatile
  3243  000A08  0012               	return		;funcret
  3244  000A0A                     __end_of_Init1_RS232:
  3245                           	opt stack 0
  3246                           tblptru	equ	0xFF8
  3247                           tblptrh	equ	0xFF7
  3248                           tblptrl	equ	0xFF6
  3249                           tablat	equ	0xFF5
  3250                           intcon	equ	0xFF2
  3251                           intcon3	equ	0xFF0
  3252                           postinc0	equ	0xFEE
  3253                           wreg	equ	0xFE8
  3254                           postdec1	equ	0xFE5
  3255                           fsr1l	equ	0xFE1
  3256                           status	equ	0xFD8
  3257                           
  3258 ;; *************** function ___aldiv *****************
  3259 ;; Defined at:
  3260 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\aldiv.c"
  3261 ;; Parameters:    Size  Location     Type
  3262 ;;  dividend        4   16[COMRAM] long 
  3263 ;;  divisor         4   20[COMRAM] long 
  3264 ;; Auto vars:     Size  Location     Type
  3265 ;;  quotient        4   26[COMRAM] long 
  3266 ;;  sign            1   25[COMRAM] unsigned char 
  3267 ;;  counter         1   24[COMRAM] unsigned char 
  3268 ;; Return value:  Size  Location     Type
  3269 ;;                  4   16[COMRAM] long 
  3270 ;; Registers used:
  3271 ;;		wreg, status,2, status,0
  3272 ;; Tracked objects:
  3273 ;;		On entry : 0/0
  3274 ;;		On exit  : 0/0
  3275 ;;		Unchanged: 0/0
  3276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3277 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3278 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3280 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3281 ;;Total ram usage:       14 bytes
  3282 ;; Hardware stack levels used:    1
  3283 ;; Hardware stack levels required when called:    2
  3284 ;; This function calls:
  3285 ;;		Nothing
  3286 ;; This function is called by:
  3287 ;;		_Init1_RS232
  3288 ;;		_Init2_RS232
  3289 ;; This function uses a non-reentrant model
  3290 ;;
  3291                           
  3292                           	psect	text15
  3293  000AF0                     __ptext15:
  3294                           	opt stack 0
  3295  000AF0                     ___aldiv:
  3296                           	opt stack 26
  3297                           
  3298                           ;incstack = 0
  3299  000AF0  0E00               	movlw	0
  3300  000AF2  6E1A               	movwf	___aldiv@sign,c
  3301  000AF4  AE18               	btfss	___aldiv@divisor+3,7,c
  3302  000AF6  D00A               	goto	l2748
  3303  000AF8  1E18               	comf	___aldiv@divisor+3,f,c
  3304  000AFA  1E17               	comf	___aldiv@divisor+2,f,c
  3305  000AFC  1E16               	comf	___aldiv@divisor+1,f,c
  3306  000AFE  6C15               	negf	___aldiv@divisor,c
  3307  000B00  0E00               	movlw	0
  3308  000B02  2216               	addwfc	___aldiv@divisor+1,f,c
  3309  000B04  2217               	addwfc	___aldiv@divisor+2,f,c
  3310  000B06  2218               	addwfc	___aldiv@divisor+3,f,c
  3311  000B08  0E01               	movlw	1
  3312  000B0A  6E1A               	movwf	___aldiv@sign,c
  3313  000B0C                     l2748:
  3314  000B0C  AE14               	btfss	___aldiv@dividend+3,7,c
  3315  000B0E  D00A               	goto	l2754
  3316  000B10  1E14               	comf	___aldiv@dividend+3,f,c
  3317  000B12  1E13               	comf	___aldiv@dividend+2,f,c
  3318  000B14  1E12               	comf	___aldiv@dividend+1,f,c
  3319  000B16  6C11               	negf	___aldiv@dividend,c
  3320  000B18  0E00               	movlw	0
  3321  000B1A  2212               	addwfc	___aldiv@dividend+1,f,c
  3322  000B1C  2213               	addwfc	___aldiv@dividend+2,f,c
  3323  000B1E  2214               	addwfc	___aldiv@dividend+3,f,c
  3324  000B20  0E01               	movlw	1
  3325  000B22  1A1A               	xorwf	___aldiv@sign,f,c
  3326  000B24                     l2754:
  3327  000B24  0E00               	movlw	0
  3328  000B26  6E1B               	movwf	___aldiv@quotient,c
  3329  000B28  0E00               	movlw	0
  3330  000B2A  6E1C               	movwf	___aldiv@quotient+1,c
  3331  000B2C  0E00               	movlw	0
  3332  000B2E  6E1D               	movwf	___aldiv@quotient+2,c
  3333  000B30  0E00               	movlw	0
  3334  000B32  6E1E               	movwf	___aldiv@quotient+3,c
  3335  000B34  5015               	movf	___aldiv@divisor,w,c
  3336  000B36  1016               	iorwf	___aldiv@divisor+1,w,c
  3337  000B38  1017               	iorwf	___aldiv@divisor+2,w,c
  3338  000B3A  1018               	iorwf	___aldiv@divisor+3,w,c
  3339  000B3C  B4D8               	btfsc	status,2,c
  3340  000B3E  D02A               	goto	l2776
  3341  000B40  0E01               	movlw	1
  3342  000B42  6E19               	movwf	___aldiv@counter,c
  3343  000B44  D006               	goto	l2762
  3344  000B46                     l2760:
  3345  000B46  90D8               	bcf	status,0,c
  3346  000B48  3615               	rlcf	___aldiv@divisor,f,c
  3347  000B4A  3616               	rlcf	___aldiv@divisor+1,f,c
  3348  000B4C  3617               	rlcf	___aldiv@divisor+2,f,c
  3349  000B4E  3618               	rlcf	___aldiv@divisor+3,f,c
  3350  000B50  2A19               	incf	___aldiv@counter,f,c
  3351  000B52                     l2762:
  3352  000B52  AE18               	btfss	___aldiv@divisor+3,7,c
  3353  000B54  D7F8               	goto	l2760
  3354  000B56                     l2764:
  3355  000B56  90D8               	bcf	status,0,c
  3356  000B58  361B               	rlcf	___aldiv@quotient,f,c
  3357  000B5A  361C               	rlcf	___aldiv@quotient+1,f,c
  3358  000B5C  361D               	rlcf	___aldiv@quotient+2,f,c
  3359  000B5E  361E               	rlcf	___aldiv@quotient+3,f,c
  3360  000B60  5015               	movf	___aldiv@divisor,w,c
  3361  000B62  5C11               	subwf	___aldiv@dividend,w,c
  3362  000B64  5016               	movf	___aldiv@divisor+1,w,c
  3363  000B66  5812               	subwfb	___aldiv@dividend+1,w,c
  3364  000B68  5017               	movf	___aldiv@divisor+2,w,c
  3365  000B6A  5813               	subwfb	___aldiv@dividend+2,w,c
  3366  000B6C  5018               	movf	___aldiv@divisor+3,w,c
  3367  000B6E  5814               	subwfb	___aldiv@dividend+3,w,c
  3368  000B70  A0D8               	btfss	status,0,c
  3369  000B72  D009               	goto	l2772
  3370  000B74  5015               	movf	___aldiv@divisor,w,c
  3371  000B76  5E11               	subwf	___aldiv@dividend,f,c
  3372  000B78  5016               	movf	___aldiv@divisor+1,w,c
  3373  000B7A  5A12               	subwfb	___aldiv@dividend+1,f,c
  3374  000B7C  5017               	movf	___aldiv@divisor+2,w,c
  3375  000B7E  5A13               	subwfb	___aldiv@dividend+2,f,c
  3376  000B80  5018               	movf	___aldiv@divisor+3,w,c
  3377  000B82  5A14               	subwfb	___aldiv@dividend+3,f,c
  3378  000B84  801B               	bsf	___aldiv@quotient,0,c
  3379  000B86                     l2772:
  3380  000B86  90D8               	bcf	status,0,c
  3381  000B88  3218               	rrcf	___aldiv@divisor+3,f,c
  3382  000B8A  3217               	rrcf	___aldiv@divisor+2,f,c
  3383  000B8C  3216               	rrcf	___aldiv@divisor+1,f,c
  3384  000B8E  3215               	rrcf	___aldiv@divisor,f,c
  3385  000B90  2E19               	decfsz	___aldiv@counter,f,c
  3386  000B92  D7E1               	goto	l2764
  3387  000B94                     l2776:
  3388  000B94  501A               	movf	___aldiv@sign,w,c
  3389  000B96  B4D8               	btfsc	status,2,c
  3390  000B98  D008               	goto	l2780
  3391  000B9A  1E1E               	comf	___aldiv@quotient+3,f,c
  3392  000B9C  1E1D               	comf	___aldiv@quotient+2,f,c
  3393  000B9E  1E1C               	comf	___aldiv@quotient+1,f,c
  3394  000BA0  6C1B               	negf	___aldiv@quotient,c
  3395  000BA2  0E00               	movlw	0
  3396  000BA4  221C               	addwfc	___aldiv@quotient+1,f,c
  3397  000BA6  221D               	addwfc	___aldiv@quotient+2,f,c
  3398  000BA8  221E               	addwfc	___aldiv@quotient+3,f,c
  3399  000BAA                     l2780:
  3400  000BAA  C01B  F011         	movff	___aldiv@quotient,?___aldiv
  3401  000BAE  C01C  F012         	movff	___aldiv@quotient+1,?___aldiv+1
  3402  000BB2  C01D  F013         	movff	___aldiv@quotient+2,?___aldiv+2
  3403  000BB6  C01E  F014         	movff	___aldiv@quotient+3,?___aldiv+3
  3404  000BBA  0012               	return	
  3405  000BBC                     __end_of___aldiv:
  3406                           	opt stack 0
  3407                           tblptru	equ	0xFF8
  3408                           tblptrh	equ	0xFF7
  3409                           tblptrl	equ	0xFF6
  3410                           tablat	equ	0xFF5
  3411                           intcon	equ	0xFF2
  3412                           intcon3	equ	0xFF0
  3413                           postinc0	equ	0xFEE
  3414                           wreg	equ	0xFE8
  3415                           postdec1	equ	0xFE5
  3416                           fsr1l	equ	0xFE1
  3417                           status	equ	0xFD8
  3418                           
  3419 ;; *************** function _Config_Timer3 *****************
  3420 ;; Defined at:
  3421 ;;		line 50 in file "TIMERS_XC8.c"
  3422 ;; Parameters:    Size  Location     Type
  3423 ;;		None
  3424 ;; Auto vars:     Size  Location     Type
  3425 ;;		None
  3426 ;; Return value:  Size  Location     Type
  3427 ;;                  1    wreg      void 
  3428 ;; Registers used:
  3429 ;;		wreg, status,2
  3430 ;; Tracked objects:
  3431 ;;		On entry : 0/0
  3432 ;;		On exit  : 0/0
  3433 ;;		Unchanged: 0/0
  3434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3438 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3439 ;;Total ram usage:        0 bytes
  3440 ;; Hardware stack levels used:    1
  3441 ;; Hardware stack levels required when called:    2
  3442 ;; This function calls:
  3443 ;;		Nothing
  3444 ;; This function is called by:
  3445 ;;		_ConfigureHW
  3446 ;; This function uses a non-reentrant model
  3447 ;;
  3448                           
  3449                           	psect	text16
  3450  000D98                     __ptext16:
  3451                           	opt stack 0
  3452  000D98                     _Config_Timer3:
  3453                           	opt stack 27
  3454                           
  3455                           ;TIMERS_XC8.c: 52: TMR3IE = 0;
  3456                           
  3457                           ;incstack = 0
  3458  000D98  92A0               	bcf	4000,1,c	;volatile
  3459                           
  3460                           ;TIMERS_XC8.c: 60: T3CONbits.T3CKPS1 = 0;
  3461  000D9A  9AB1               	bcf	4017,5,c	;volatile
  3462                           
  3463                           ;TIMERS_XC8.c: 61: T3CONbits.T3CKPS0 = 0;
  3464  000D9C  98B1               	bcf	4017,4,c	;volatile
  3465                           
  3466                           ;TIMERS_XC8.c: 63: T3CONbits.T3SOSCEN = 0;
  3467  000D9E  96B1               	bcf	4017,3,c	;volatile
  3468                           
  3469                           ;TIMERS_XC8.c: 64: T3CONbits.TMR3CS = 0;
  3470  000DA0  0E3F               	movlw	-193
  3471  000DA2  16B1               	andwf	4017,f,c	;volatile
  3472                           
  3473                           ;TIMERS_XC8.c: 65: T3CONbits.T3RD16 = 1;
  3474  000DA4  82B1               	bsf	4017,1,c	;volatile
  3475                           
  3476                           ;TIMERS_XC8.c: 66: TMR3L = 0;
  3477  000DA6  0E00               	movlw	0
  3478  000DA8  6EB2               	movwf	4018,c	;volatile
  3479                           
  3480                           ;TIMERS_XC8.c: 67: TMR3H = 0;
  3481  000DAA  0E00               	movlw	0
  3482  000DAC  6EB3               	movwf	4019,c	;volatile
  3483                           
  3484                           ;TIMERS_XC8.c: 69: T3CONbits.TMR3ON = 1;
  3485  000DAE  80B1               	bsf	4017,0,c	;volatile
  3486  000DB0  0012               	return		;funcret
  3487  000DB2                     __end_of_Config_Timer3:
  3488                           	opt stack 0
  3489                           tblptru	equ	0xFF8
  3490                           tblptrh	equ	0xFF7
  3491                           tblptrl	equ	0xFF6
  3492                           tablat	equ	0xFF5
  3493                           intcon	equ	0xFF2
  3494                           intcon3	equ	0xFF0
  3495                           postinc0	equ	0xFEE
  3496                           wreg	equ	0xFE8
  3497                           postdec1	equ	0xFE5
  3498                           fsr1l	equ	0xFE1
  3499                           status	equ	0xFD8
  3500                           
  3501 ;; *************** function _Config_Timer1 *****************
  3502 ;; Defined at:
  3503 ;;		line 14 in file "TIMERS_XC8.c"
  3504 ;; Parameters:    Size  Location     Type
  3505 ;;		None
  3506 ;; Auto vars:     Size  Location     Type
  3507 ;;		None
  3508 ;; Return value:  Size  Location     Type
  3509 ;;                  1    wreg      void 
  3510 ;; Registers used:
  3511 ;;		wreg, status,2
  3512 ;; Tracked objects:
  3513 ;;		On entry : 0/0
  3514 ;;		On exit  : 0/0
  3515 ;;		Unchanged: 0/0
  3516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3520 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3521 ;;Total ram usage:        0 bytes
  3522 ;; Hardware stack levels used:    1
  3523 ;; Hardware stack levels required when called:    2
  3524 ;; This function calls:
  3525 ;;		Nothing
  3526 ;; This function is called by:
  3527 ;;		_ConfigureHW
  3528 ;; This function uses a non-reentrant model
  3529 ;;
  3530                           
  3531                           	psect	text17
  3532  000DDC                     __ptext17:
  3533                           	opt stack 0
  3534  000DDC                     _Config_Timer1:
  3535                           	opt stack 27
  3536                           
  3537                           ;TIMERS_XC8.c: 16: TMR1IE = 0;
  3538                           
  3539                           ;incstack = 0
  3540  000DDC  909D               	bcf	3997,0,c	;volatile
  3541                           
  3542                           ;TIMERS_XC8.c: 24: T1CONbits.T1CKPS1 = 1;
  3543  000DDE  8ACD               	bsf	4045,5,c	;volatile
  3544                           
  3545                           ;TIMERS_XC8.c: 25: T1CONbits.T1CKPS0 = 0;
  3546  000DE0  98CD               	bcf	4045,4,c	;volatile
  3547                           
  3548                           ;TIMERS_XC8.c: 27: T1CONbits.T1OSCEN = 0;
  3549  000DE2  96CD               	bcf	4045,3,c	;volatile
  3550                           
  3551                           ;TIMERS_XC8.c: 28: T1CONbits.TMR1CS = 0;
  3552  000DE4  0E3F               	movlw	-193
  3553  000DE6  16CD               	andwf	4045,f,c	;volatile
  3554                           
  3555                           ;TIMERS_XC8.c: 29: T1CONbits.T1RD16 = 1;
  3556  000DE8  82CD               	bsf	4045,1,c	;volatile
  3557                           
  3558                           ;TIMERS_XC8.c: 32: T1CONbits.TMR1ON = 1;
  3559  000DEA  80CD               	bsf	4045,0,c	;volatile
  3560  000DEC  0012               	return		;funcret
  3561  000DEE                     __end_of_Config_Timer1:
  3562                           	opt stack 0
  3563                           tblptru	equ	0xFF8
  3564                           tblptrh	equ	0xFF7
  3565                           tblptrl	equ	0xFF6
  3566                           tablat	equ	0xFF5
  3567                           intcon	equ	0xFF2
  3568                           intcon3	equ	0xFF0
  3569                           postinc0	equ	0xFEE
  3570                           wreg	equ	0xFE8
  3571                           postdec1	equ	0xFE5
  3572                           fsr1l	equ	0xFE1
  3573                           status	equ	0xFD8
  3574                           
  3575 ;; *************** function _Config_Timer0 *****************
  3576 ;; Defined at:
  3577 ;;		line 265 in file "TIMERS_XC8.c"
  3578 ;; Parameters:    Size  Location     Type
  3579 ;;		None
  3580 ;; Auto vars:     Size  Location     Type
  3581 ;;		None
  3582 ;; Return value:  Size  Location     Type
  3583 ;;                  1    wreg      void 
  3584 ;; Registers used:
  3585 ;;		None
  3586 ;; Tracked objects:
  3587 ;;		On entry : 0/0
  3588 ;;		On exit  : 0/0
  3589 ;;		Unchanged: 0/0
  3590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3594 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3595 ;;Total ram usage:        0 bytes
  3596 ;; Hardware stack levels used:    1
  3597 ;; Hardware stack levels required when called:    2
  3598 ;; This function calls:
  3599 ;;		Nothing
  3600 ;; This function is called by:
  3601 ;;		_main
  3602 ;; This function uses a non-reentrant model
  3603 ;;
  3604                           
  3605                           	psect	text18
  3606  000DEE                     __ptext18:
  3607                           	opt stack 0
  3608  000DEE                     _Config_Timer0:
  3609                           	opt stack 28
  3610                           
  3611                           ;TIMERS_XC8.c: 267: T0CONbits.T0PS0 = 1;
  3612                           
  3613                           ;incstack = 0
  3614  000DEE  80D5               	bsf	4053,0,c	;volatile
  3615                           
  3616                           ;TIMERS_XC8.c: 268: T0CONbits.T0PS1 = 0;
  3617  000DF0  92D5               	bcf	4053,1,c	;volatile
  3618                           
  3619                           ;TIMERS_XC8.c: 269: T0CONbits.T0PS2 = 0;
  3620  000DF2  94D5               	bcf	4053,2,c	;volatile
  3621                           
  3622                           ;TIMERS_XC8.c: 280: T0CONbits.T08BIT = 0;
  3623  000DF4  9CD5               	bcf	4053,6,c	;volatile
  3624                           
  3625                           ;TIMERS_XC8.c: 284: T0CONbits.PSA = 0;
  3626  000DF6  96D5               	bcf	4053,3,c	;volatile
  3627                           
  3628                           ;TIMERS_XC8.c: 285: T0CONbits.T0SE = 0;
  3629  000DF8  98D5               	bcf	4053,4,c	;volatile
  3630                           
  3631                           ;TIMERS_XC8.c: 286: T0CONbits.T0CS = 0;
  3632  000DFA  9AD5               	bcf	4053,5,c	;volatile
  3633                           
  3634                           ;TIMERS_XC8.c: 288: T0CONbits.TMR0ON = 1;
  3635  000DFC  8ED5               	bsf	4053,7,c	;volatile
  3636  000DFE  0012               	return		;funcret
  3637  000E00                     __end_of_Config_Timer0:
  3638                           	opt stack 0
  3639                           tblptru	equ	0xFF8
  3640                           tblptrh	equ	0xFF7
  3641                           tblptrl	equ	0xFF6
  3642                           tablat	equ	0xFF5
  3643                           intcon	equ	0xFF2
  3644                           intcon3	equ	0xFF0
  3645                           postinc0	equ	0xFEE
  3646                           wreg	equ	0xFE8
  3647                           postdec1	equ	0xFE5
  3648                           fsr1l	equ	0xFE1
  3649                           status	equ	0xFD8
  3650                           
  3651 ;; *************** function _isr *****************
  3652 ;; Defined at:
  3653 ;;		line 187 in file "main.c"
  3654 ;; Parameters:    Size  Location     Type
  3655 ;;		None
  3656 ;; Auto vars:     Size  Location     Type
  3657 ;;		None
  3658 ;; Return value:  Size  Location     Type
  3659 ;;                  1    wreg      void 
  3660 ;; Registers used:
  3661 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3662 ;; Tracked objects:
  3663 ;;		On entry : 0/0
  3664 ;;		On exit  : 0/0
  3665 ;;		Unchanged: 0/0
  3666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3669 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3670 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3671 ;;Total ram usage:       14 bytes
  3672 ;; Hardware stack levels used:    1
  3673 ;; Hardware stack levels required when called:    1
  3674 ;; This function calls:
  3675 ;;		i2_Set_Timer3
  3676 ;; This function is called by:
  3677 ;;		Interrupt level 2
  3678 ;; This function uses a non-reentrant model
  3679 ;;
  3680                           
  3681                           	psect	intcode
  3682  000008                     __pintcode:
  3683                           	opt stack 0
  3684  000008                     _isr:
  3685                           	opt stack 26
  3686                           
  3687                           ;incstack = 0
  3688  000008  824F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3689  00000A  CFFA F003          	movff	pclath,??_isr
  3690  00000E  CFFB F004          	movff	pclatu,??_isr+1
  3691  000012  CFE9 F005          	movff	fsr0l,??_isr+2
  3692  000016  CFEA F006          	movff	fsr0h,??_isr+3
  3693  00001A  CFE1 F007          	movff	fsr1l,??_isr+4
  3694  00001E  CFE2 F008          	movff	fsr1h,??_isr+5
  3695  000022  CFD9 F009          	movff	fsr2l,??_isr+6
  3696  000026  CFDA F00A          	movff	fsr2h,??_isr+7
  3697  00002A  CFF3 F00B          	movff	prodl,??_isr+8
  3698  00002E  CFF4 F00C          	movff	prodh,??_isr+9
  3699  000032  CFF6 F00D          	movff	tblptrl,??_isr+10
  3700  000036  CFF7 F00E          	movff	tblptrh,??_isr+11
  3701  00003A  CFF8 F00F          	movff	tblptru,??_isr+12
  3702  00003E  CFF5 F010          	movff	tablat,??_isr+13
  3703                           
  3704                           ;main.c: 190: if(PIR1bits.SSPIF || PIR1bits.SSP1IF)
  3705  000042  B69E               	btfsc	3998,3,c	;volatile
  3706  000044  D002               	goto	i2l251
  3707  000046  A69E               	btfss	3998,3,c	;volatile
  3708  000048  D0AD               	goto	i2l3290
  3709  00004A                     i2l251:
  3710                           
  3711                           ;main.c: 191: {
  3712                           ;main.c: 192: LATAbits.LA0 = 0;
  3713  00004A  9089               	bcf	3977,0,c	;volatile
  3714                           
  3715                           ;main.c: 193: SSP1CON1bits.CKP = 0;
  3716  00004C  98C6               	bcf	4038,4,c	;volatile
  3717                           
  3718                           ;main.c: 194: if ((SSP1CON1bits.SSPOV) || (SSP1CON1bits.WCOL))
  3719  00004E  BCC6               	btfsc	4038,6,c	;volatile
  3720  000050  D002               	goto	i2l254
  3721  000052  AEC6               	btfss	4038,7,c	;volatile
  3722  000054  D005               	goto	i2l252
  3723  000056                     i2l254:
  3724                           
  3725                           ;main.c: 195: {
  3726                           ;main.c: 196: limpa = SSP1BUF;
  3727  000056  CFC9 F0D6          	movff	4041,_limpa	;volatile
  3728                           
  3729                           ;main.c: 197: SSP1CON1bits.SSPOV = 0;
  3730  00005A  9CC6               	bcf	4038,6,c	;volatile
  3731                           
  3732                           ;main.c: 198: SSP1CON1bits.WCOL = 0;
  3733  00005C  9EC6               	bcf	4038,7,c	;volatile
  3734                           
  3735                           ;main.c: 199: SSP1CON1bits.CKP = 1;
  3736  00005E  88C6               	bsf	4038,4,c	;volatile
  3737  000060                     i2l252:
  3738                           
  3739                           ;main.c: 200: }
  3740                           ;main.c: 201: if (SSP1STATbits.R_nW == 0)
  3741  000060  B4C7               	btfsc	4039,2,c	;volatile
  3742  000062  D074               	goto	i2l3260
  3743                           
  3744                           ;main.c: 202: {
  3745                           ;main.c: 203: if (SSP1STATbits.D_nA == 0)
  3746  000064  BAC7               	btfsc	4039,5,c	;volatile
  3747  000066  D003               	goto	i2l256
  3748                           
  3749                           ;main.c: 204: address = SSP1BUF;
  3750  000068  CFC9 F0D7          	movff	4041,_address	;volatile
  3751  00006C  D06E               	goto	i2l3258
  3752  00006E                     i2l256:
  3753                           
  3754                           ;main.c: 205: else
  3755                           ;main.c: 206: {
  3756                           ;main.c: 207: dado_i2c = SSP1BUF;
  3757  00006E  CFC9 F0D8          	movff	4041,_dado_i2c	;volatile
  3758                           
  3759                           ;main.c: 208: buffer[index] = SSP1BUF;
  3760  000072  5040               	movf	_index,w,c	;volatile
  3761  000074  0D01               	mullw	1
  3762  000076  0E74               	movlw	low _buffer
  3763  000078  24F3               	addwf	prodl,w,c
  3764  00007A  6ED9               	movwf	fsr2l,c
  3765  00007C  0E00               	movlw	high _buffer
  3766  00007E  20F4               	addwfc	prodh,w,c
  3767  000080  6EDA               	movwf	fsr2h,c
  3768  000082  CFC9 FFDF          	movff	4041,indf2	;volatile
  3769                           
  3770                           ;main.c: 209: index++;
  3771  000086  2A40               	incf	_index,f,c	;volatile
  3772                           
  3773                           ;main.c: 211: if(buffer[0] == 0x40)
  3774  000088  0E40               	movlw	64
  3775  00008A  0100               	movlb	0	; () banked
  3776  00008C  1974               	xorwf	_buffer& (0+255),w,b	;volatile
  3777  00008E  A4D8               	btfss	status,2,c
  3778  000090  D050               	goto	i2l3252
  3779                           
  3780                           ; BSR set to: 0
  3781                           ;main.c: 212: {
  3782                           ;main.c: 213: flag_send_ger = 1;
  3783  000092  884D               	bsf	_flag_send_ger/(0+8),_flag_send_ger& (0+7),c
  3784                           
  3785                           ; BSR set to: 0
  3786                           ;main.c: 214: index_read = 0;
  3787  000094  0E00               	movlw	0
  3788  000096  6E3F               	movwf	_index_read,c	;volatile
  3789                           
  3790                           ; BSR set to: 0
  3791                           ;main.c: 215: flag_send_adm = 0;
  3792  000098  964D               	bcf	_flag_send_adm/(0+8),_flag_send_adm& (0+7),c
  3793                           
  3794                           ; BSR set to: 0
  3795                           ;main.c: 216: flag_send_sinc = 0;
  3796  00009A  9A4D               	bcf	_flag_send_sinc/(0+8),_flag_send_sinc& (0+7),c
  3797                           
  3798                           ; BSR set to: 0
  3799                           ;main.c: 217: if(index > 17)
  3800  00009C  0E11               	movlw	17
  3801  00009E  6440               	cpfsgt	_index,c	;volatile
  3802  0000A0  D048               	goto	i2l3252
  3803                           
  3804                           ; BSR set to: 0
  3805                           ;main.c: 218: {
  3806                           ;main.c: 219: IgDnt = buffer_already[0] = buffer[1];
  3807  0000A2  C075  F060         	movff	_buffer+1,_buffer_already	;volatile
  3808  0000A6  C060  F048         	movff	_buffer_already,_IgDnt	;volatile
  3809                           
  3810                           ;main.c: 220: TmrInj1 = buffer_already[1] = buffer[2];
  3811  0000AA  C076  F061         	movff	_buffer+2,_buffer_already+1	;volatile
  3812  0000AE  C061  F047         	movff	_buffer_already+1,_TmrInj1	;volatile
  3813                           
  3814                           ;main.c: 221: TmrInj2 = buffer_already[2] = buffer[3];
  3815  0000B2  C077  F062         	movff	_buffer+3,_buffer_already+2	;volatile
  3816  0000B6  C062  F046         	movff	_buffer_already+2,_TmrInj2	;volatile
  3817                           
  3818                           ;main.c: 222: estado_controle_ign = buffer_already[3] = buffer[4];
  3819  0000BA  C078  F063         	movff	_buffer+4,_buffer_already+3	;volatile
  3820  0000BE  C063  F045         	movff	_buffer_already+3,_estado_controle_ign	;volatile
  3821                           
  3822                           ;main.c: 223: IjDnt = buffer_already[4] = buffer[5];
  3823  0000C2  C079  F064         	movff	_buffer+5,_buffer_already+4	;volatile
  3824  0000C6  C064  F044         	movff	_buffer_already+4,_IjDnt	;volatile
  3825                           
  3826                           ;main.c: 224: InjTrigger1 = buffer_already[5] = buffer[6];
  3827  0000CA  C07A  F065         	movff	_buffer+6,_buffer_already+5	;volatile
  3828  0000CE  C065  F0E4         	movff	_buffer_already+5,_InjTrigger1	;volatile
  3829                           
  3830                           ;main.c: 225: InjTrigger2 = buffer_already[6] = buffer[7];
  3831  0000D2  C07B  F066         	movff	_buffer+7,_buffer_already+6	;volatile
  3832  0000D6  C066  F0E3         	movff	_buffer_already+6,_InjTrigger2	;volatile
  3833                           
  3834                           ;main.c: 226: TmrBob = buffer_already[7] = buffer[8];
  3835  0000DA  C07C  F067         	movff	_buffer+8,_buffer_already+7	;volatile
  3836  0000DE  C067  F0E2         	movff	_buffer_already+7,_TmrBob	;volatile
  3837                           
  3838                           ;main.c: 227: IgTrigger = buffer_already[8] = buffer[9];
  3839  0000E2  C07D  F068         	movff	_buffer+9,_buffer_already+8	;volatile
  3840  0000E6  C068  F0E1         	movff	_buffer_already+8,_IgTrigger	;volatile
  3841                           
  3842                           ;main.c: 229: InjDntExtra = buffer_already[9] = buffer[10];
  3843  0000EA  C07E  F069         	movff	_buffer+10,_buffer_already+9	;volatile
  3844  0000EE  C069  F0E0         	movff	_buffer_already+9,_InjDntExtra	;volatile
  3845                           
  3846                           ;main.c: 230: TempAg = buffer_already[10] = buffer[11];
  3847  0000F2  C07F  F06A         	movff	_buffer+11,_buffer_already+10	;volatile
  3848  0000F6  C06A  F0DB         	movff	_buffer_already+10,_TempAg	;volatile
  3849                           
  3850                           ;main.c: 233: ref_vb = buffer_already[11] = buffer[12];
  3851  0000FA  C080  F06B         	movff	_buffer+12,_buffer_already+11	;volatile
  3852  0000FE  C06B  F043         	movff	_buffer_already+11,_ref_vb	;volatile
  3853                           
  3854                           ;main.c: 237: Rot1 = buffer_already[12] = buffer[13];
  3855  000102  C081  F06C         	movff	_buffer+13,_buffer_already+12	;volatile
  3856  000106  C06C  F042         	movff	_buffer_already+12,_Rot1	;volatile
  3857                           
  3858                           ;main.c: 238: Rot2 = buffer_already[13] = buffer[14];
  3859  00010A  C082  F06D         	movff	_buffer+14,_buffer_already+13	;volatile
  3860  00010E  C06D  F041         	movff	_buffer_already+13,_Rot2	;volatile
  3861                           
  3862                           ;main.c: 239: map = buffer_already[14] = buffer[15];
  3863  000112  C083  F06E         	movff	_buffer+15,_buffer_already+14	;volatile
  3864  000116  C06E  F0CA         	movff	_buffer_already+14,_map	;volatile
  3865  00011A  0100               	movlb	0	; () banked
  3866  00011C  6BCB               	clrf	(_map+1)& (0+255),b
  3867                           
  3868                           ;main.c: 240: angle1 = buffer_ger[0] = buffer[16];
  3869  00011E  C084  F090         	movff	_buffer+16,_buffer_ger	;volatile
  3870  000122  C090  F0DA         	movff	_buffer_ger,_angle1	;volatile
  3871                           
  3872                           ;main.c: 241: angle2 = buffer_ger[1] = buffer[17];
  3873  000126  C085  F091         	movff	_buffer+17,_buffer_ger+1	;volatile
  3874  00012A  C091  F0D9         	movff	_buffer_ger+1,_angle2	;volatile
  3875                           
  3876                           ; BSR set to: 0
  3877                           ;main.c: 242: index = 0;
  3878  00012E  0E00               	movlw	0
  3879  000130  6E40               	movwf	_index,c	;volatile
  3880  000132                     i2l3252:
  3881                           
  3882                           ; BSR set to: 0
  3883                           ;main.c: 243: }
  3884                           ;main.c: 245: }
  3885                           ;main.c: 246: if(buffer[0] == 0x60)
  3886  000132  0E60               	movlw	96
  3887  000134  0100               	movlb	0	; () banked
  3888  000136  1974               	xorwf	_buffer& (0+255),w,b	;volatile
  3889  000138  A4D8               	btfss	status,2,c
  3890  00013A  D007               	goto	i2l3258
  3891                           
  3892                           ; BSR set to: 0
  3893                           ;main.c: 247: {
  3894                           ;main.c: 248: flag_send_sinc = 1;
  3895  00013C  8A4D               	bsf	_flag_send_sinc/(0+8),_flag_send_sinc& (0+7),c
  3896                           
  3897                           ;main.c: 249: flag_send_adm = 0;
  3898  00013E  964D               	bcf	_flag_send_adm/(0+8),_flag_send_adm& (0+7),c
  3899                           
  3900                           ;main.c: 250: flag_send_ger = 0;
  3901  000140  984D               	bcf	_flag_send_ger/(0+8),_flag_send_ger& (0+7),c
  3902                           
  3903                           ; BSR set to: 0
  3904                           ;main.c: 251: index_read = 0;
  3905  000142  0E00               	movlw	0
  3906  000144  6E3F               	movwf	_index_read,c	;volatile
  3907                           
  3908                           ;main.c: 252: index = 0;
  3909  000146  0E00               	movlw	0
  3910  000148  6E40               	movwf	_index,c	;volatile
  3911  00014A                     i2l3258:
  3912                           
  3913                           ;main.c: 253: }
  3914                           ;main.c: 254: }
  3915                           ;main.c: 255: SSP1CON1bits.CKP = 1;
  3916  00014A  88C6               	bsf	4038,4,c	;volatile
  3917  00014C                     i2l3260:
  3918                           
  3919                           ;main.c: 256: }
  3920                           ;main.c: 257: if(SSP1STATbits.R_nW)
  3921  00014C  A4C7               	btfss	4039,2,c	;volatile
  3922  00014E  D028               	goto	i2l3286
  3923                           
  3924                           ;main.c: 258: {
  3925                           ;main.c: 259: if(flag_send_ger == 1)
  3926  000150  A84D               	btfss	_flag_send_ger/(0+8),_flag_send_ger& (0+7),c
  3927  000152  D012               	goto	i2l3274
  3928                           
  3929                           ;main.c: 260: {
  3930                           ;main.c: 261: index = 0;
  3931  000154  0E00               	movlw	0
  3932  000156  6E40               	movwf	_index,c	;volatile
  3933                           
  3934                           ;main.c: 262: SSP1BUF = buffer_ger[index_read];
  3935  000158  503F               	movf	_index_read,w,c	;volatile
  3936  00015A  0D01               	mullw	1
  3937  00015C  0E90               	movlw	low _buffer_ger
  3938  00015E  24F3               	addwf	prodl,w,c
  3939  000160  6ED9               	movwf	fsr2l,c
  3940  000162  0E00               	movlw	high _buffer_ger
  3941  000164  20F4               	addwfc	prodh,w,c
  3942  000166  6EDA               	movwf	fsr2h,c
  3943  000168  50DF               	movf	indf2,w,c
  3944  00016A  6EC9               	movwf	4041,c	;volatile
  3945                           
  3946                           ;main.c: 263: index_read++;
  3947  00016C  2A3F               	incf	_index_read,f,c	;volatile
  3948                           
  3949                           ;main.c: 264: if(index_read > 1)
  3950  00016E  0E01               	movlw	1
  3951  000170  643F               	cpfsgt	_index_read,c	;volatile
  3952  000172  D002               	goto	i2l3274
  3953                           
  3954                           ;main.c: 265: index_read = 0;
  3955  000174  0E00               	movlw	0
  3956  000176  6E3F               	movwf	_index_read,c	;volatile
  3957  000178                     i2l3274:
  3958                           
  3959                           ;main.c: 266: }
  3960                           ;main.c: 267: if(flag_send_sinc == 1)
  3961  000178  AA4D               	btfss	_flag_send_sinc/(0+8),_flag_send_sinc& (0+7),c
  3962  00017A  D012               	goto	i2l3286
  3963                           
  3964                           ;main.c: 268: {
  3965                           ;main.c: 269: index = 0;
  3966  00017C  0E00               	movlw	0
  3967  00017E  6E40               	movwf	_index,c	;volatile
  3968                           
  3969                           ;main.c: 270: SSP1BUF = buffer_already[index_read];
  3970  000180  503F               	movf	_index_read,w,c	;volatile
  3971  000182  0D01               	mullw	1
  3972  000184  0E60               	movlw	low _buffer_already
  3973  000186  24F3               	addwf	prodl,w,c
  3974  000188  6ED9               	movwf	fsr2l,c
  3975  00018A  0E00               	movlw	high _buffer_already
  3976  00018C  20F4               	addwfc	prodh,w,c
  3977  00018E  6EDA               	movwf	fsr2h,c
  3978  000190  50DF               	movf	indf2,w,c
  3979  000192  6EC9               	movwf	4041,c	;volatile
  3980                           
  3981                           ;main.c: 271: index_read++;
  3982  000194  2A3F               	incf	_index_read,f,c	;volatile
  3983                           
  3984                           ;main.c: 272: if(index_read > 10)
  3985  000196  0E0A               	movlw	10
  3986  000198  643F               	cpfsgt	_index_read,c	;volatile
  3987  00019A  D002               	goto	i2l3286
  3988                           
  3989                           ;main.c: 273: {
  3990                           ;main.c: 274: index_read = 0;
  3991  00019C  0E00               	movlw	0
  3992  00019E  6E3F               	movwf	_index_read,c	;volatile
  3993  0001A0                     i2l3286:
  3994                           
  3995                           ;main.c: 275: }
  3996                           ;main.c: 276: }
  3997                           ;main.c: 277: }
  3998                           ;main.c: 278: PIR1bits.SSP1IF = 0;
  3999  0001A0  969E               	bcf	3998,3,c	;volatile
  4000                           
  4001                           ;main.c: 279: SSP1CON1bits.CKP = 1;
  4002  0001A2  88C6               	bsf	4038,4,c	;volatile
  4003  0001A4                     i2l3290:
  4004                           
  4005                           ;main.c: 280: }
  4006                           ;main.c: 282: if(RCIF == 1)
  4007  0001A4  AA9E               	btfss	3998,5,c	;volatile
  4008  0001A6  D00F               	goto	i2l3300
  4009                           
  4010                           ;main.c: 283: {
  4011                           ;main.c: 284: RC1IE = 0;
  4012  0001A8  9A9D               	bcf	3997,5,c	;volatile
  4013                           
  4014                           ;main.c: 285: RCIF = 0;
  4015  0001AA  9A9E               	bcf	3998,5,c	;volatile
  4016                           
  4017                           ;main.c: 287: if (RCSTA1bits.OERR == 1 || RCSTA1bits.FERR == 1)
  4018  0001AC  B2AB               	btfsc	4011,1,c	;volatile
  4019  0001AE  D002               	goto	i2l269
  4020  0001B0  A4AB               	btfss	4011,2,c	;volatile
  4021  0001B2  D003               	goto	i2l267
  4022  0001B4                     i2l269:
  4023                           
  4024                           ;main.c: 288: {
  4025                           ;main.c: 289: RCSTA1bits.OERR = 0;
  4026  0001B4  92AB               	bcf	4011,1,c	;volatile
  4027                           
  4028                           ;main.c: 290: RCSTA1bits.CREN = 0;
  4029  0001B6  98AB               	bcf	4011,4,c	;volatile
  4030                           
  4031                           ;main.c: 291: RCSTA1bits.CREN = 1;
  4032  0001B8  88AB               	bsf	4011,4,c	;volatile
  4033  0001BA                     i2l267:
  4034                           
  4035                           ;main.c: 292: }
  4036                           ;main.c: 294: char_serial_ant=char_serial;
  4037  0001BA  C04B  F04C         	movff	_char_serial,_char_serial_ant
  4038                           
  4039                           ;main.c: 295: char_serial = RCREG1;
  4040  0001BE  CFAE F04B          	movff	4014,_char_serial	;volatile
  4041                           
  4042                           ;main.c: 296: flag_serial ++;
  4043  0001C2  2A4A               	incf	_flag_serial,f,c
  4044                           
  4045                           ;main.c: 299: RC1IE = 1;
  4046  0001C4  8A9D               	bsf	3997,5,c	;volatile
  4047  0001C6                     i2l3300:
  4048                           
  4049                           ;main.c: 301: }
  4050                           ;main.c: 339: if(PIR2bits.TMR3IF && PIE2bits.TMR3IE){
  4051  0001C6  B2A1               	btfsc	4001,1,c	;volatile
  4052  0001C8  A2A0               	btfss	4000,1,c	;volatile
  4053  0001CA  D01E               	goto	i2l272
  4054                           
  4055                           ;main.c: 340: (PIR2bits.TMR3IF = 0);
  4056  0001CC  92A1               	bcf	4001,1,c	;volatile
  4057                           
  4058                           ;main.c: 341: Set_Timer3(55535);
  4059  0001CE  0ED8               	movlw	216
  4060  0001D0  6E02               	movwf	i2Set_Timer3@data_timer+1,c
  4061  0001D2  0EEF               	movlw	239
  4062  0001D4  6E01               	movwf	i2Set_Timer3@data_timer,c
  4063  0001D6  EC05  F007         	call	i2_Set_Timer3	;wreg free
  4064                           
  4065                           ;main.c: 343: CountCANRot++;
  4066  0001DA  0100               	movlb	0	; () banked
  4067  0001DC  4BA8               	infsnz	_CountCANRot& (0+255),f,b
  4068  0001DE  2BA9               	incf	(_CountCANRot+1)& (0+255),f,b
  4069                           
  4070                           ; BSR set to: 0
  4071                           ;main.c: 344: CountCANTemp++;
  4072  0001E0  0100               	movlb	0	; () banked
  4073  0001E2  4BA6               	infsnz	_CountCANTemp& (0+255),f,b
  4074  0001E4  2BA7               	incf	(_CountCANTemp+1)& (0+255),f,b
  4075                           
  4076                           ; BSR set to: 0
  4077                           ;main.c: 345: CountSerial++;
  4078  0001E6  0100               	movlb	0	; () banked
  4079  0001E8  4BA4               	infsnz	_CountSerial& (0+255),f,b
  4080  0001EA  2BA5               	incf	(_CountSerial+1)& (0+255),f,b
  4081                           
  4082                           ; BSR set to: 0
  4083                           ;main.c: 347: if (CountSerial >= 15)
  4084  0001EC  0100               	movlb	0	; () banked
  4085  0001EE  51A5               	movf	(_CountSerial+1)& (0+255),w,b
  4086  0001F0  E105               	bnz	i2u217_40
  4087  0001F2  0E0F               	movlw	15
  4088  0001F4  0100               	movlb	0	; () banked
  4089  0001F6  5DA4               	subwf	_CountSerial& (0+255),w,b
  4090  0001F8  A0D8               	btfss	status,0,c
  4091  0001FA  D006               	goto	i2l272
  4092  0001FC                     i2u217_40:
  4093                           
  4094                           ; BSR set to: 0
  4095                           ;main.c: 348: {
  4096                           ;main.c: 349: Select_Data++;
  4097  0001FC  2A49               	incf	_Select_Data,f,c
  4098                           
  4099                           ; BSR set to: 0
  4100                           ;main.c: 350: CountSerial = 0;
  4101  0001FE  0E00               	movlw	0
  4102  000200  0100               	movlb	0	; () banked
  4103  000202  6FA5               	movwf	(_CountSerial+1)& (0+255),b
  4104  000204  0E00               	movlw	0
  4105  000206  6FA4               	movwf	_CountSerial& (0+255),b
  4106  000208                     i2l272:
  4107  000208  C010  FFF5         	movff	??_isr+13,tablat
  4108  00020C  C00F  FFF8         	movff	??_isr+12,tblptru
  4109  000210  C00E  FFF7         	movff	??_isr+11,tblptrh
  4110  000214  C00D  FFF6         	movff	??_isr+10,tblptrl
  4111  000218  C00C  FFF4         	movff	??_isr+9,prodh
  4112  00021C  C00B  FFF3         	movff	??_isr+8,prodl
  4113  000220  C00A  FFDA         	movff	??_isr+7,fsr2h
  4114  000224  C009  FFD9         	movff	??_isr+6,fsr2l
  4115  000228  C008  FFE2         	movff	??_isr+5,fsr1h
  4116  00022C  C007  FFE1         	movff	??_isr+4,fsr1l
  4117  000230  C006  FFEA         	movff	??_isr+3,fsr0h
  4118  000234  C005  FFE9         	movff	??_isr+2,fsr0l
  4119  000238  C004  FFFB         	movff	??_isr+1,pclatu
  4120  00023C  C003  FFFA         	movff	??_isr,pclath
  4121  000240  924F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  4122  000242  0011               	retfie		f
  4123  000244                     __end_of_isr:
  4124                           	opt stack 0
  4125                           pclatu	equ	0xFFB
  4126                           pclath	equ	0xFFA
  4127                           tblptru	equ	0xFF8
  4128                           tblptrh	equ	0xFF7
  4129                           tblptrl	equ	0xFF6
  4130                           tablat	equ	0xFF5
  4131                           prodh	equ	0xFF4
  4132                           prodl	equ	0xFF3
  4133                           intcon	equ	0xFF2
  4134                           intcon3	equ	0xFF0
  4135                           postinc0	equ	0xFEE
  4136                           fsr0h	equ	0xFEA
  4137                           fsr0l	equ	0xFE9
  4138                           wreg	equ	0xFE8
  4139                           postdec1	equ	0xFE5
  4140                           fsr1h	equ	0xFE2
  4141                           fsr1l	equ	0xFE1
  4142                           indf2	equ	0xFDF
  4143                           fsr2h	equ	0xFDA
  4144                           fsr2l	equ	0xFD9
  4145                           status	equ	0xFD8
  4146                           
  4147 ;; *************** function i2_Set_Timer3 *****************
  4148 ;; Defined at:
  4149 ;;		line 72 in file "TIMERS_XC8.c"
  4150 ;; Parameters:    Size  Location     Type
  4151 ;;  data_timer      2    0[COMRAM] unsigned int 
  4152 ;; Auto vars:     Size  Location     Type
  4153 ;;		None
  4154 ;; Return value:  Size  Location     Type
  4155 ;;                  1    wreg      void 
  4156 ;; Registers used:
  4157 ;;		wreg, status,2
  4158 ;; Tracked objects:
  4159 ;;		On entry : 0/0
  4160 ;;		On exit  : 0/0
  4161 ;;		Unchanged: 0/0
  4162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4163 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4166 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4167 ;;Total ram usage:        2 bytes
  4168 ;; Hardware stack levels used:    1
  4169 ;; This function calls:
  4170 ;;		Nothing
  4171 ;; This function is called by:
  4172 ;;		_isr
  4173 ;; This function uses a non-reentrant model
  4174 ;;
  4175                           
  4176                           	psect	text20
  4177  000E0A                     __ptext20:
  4178                           	opt stack 0
  4179  000E0A                     i2_Set_Timer3:
  4180                           	opt stack 26
  4181                           
  4182                           ;TIMERS_XC8.c: 74: TMR3H = data_timer >> 8;
  4183                           
  4184                           ;incstack = 0
  4185  000E0A  5002               	movf	i2Set_Timer3@data_timer+1,w,c
  4186  000E0C  6EB3               	movwf	4019,c	;volatile
  4187                           
  4188                           ;TIMERS_XC8.c: 75: TMR3L = data_timer & 0x00FF;
  4189  000E0E  C001  FFB2         	movff	i2Set_Timer3@data_timer,4018	;volatile
  4190  000E12  0012               	return		;funcret
  4191  000E14                     __end_ofi2_Set_Timer3:
  4192                           	opt stack 0
  4193  0000                     pclatu	equ	0xFFB
  4194                           pclath	equ	0xFFA
  4195                           tblptru	equ	0xFF8
  4196                           tblptrh	equ	0xFF7
  4197                           tblptrl	equ	0xFF6
  4198                           tablat	equ	0xFF5
  4199                           prodh	equ	0xFF4
  4200                           prodl	equ	0xFF3
  4201                           intcon	equ	0xFF2
  4202                           intcon3	equ	0xFF0
  4203                           postinc0	equ	0xFEE
  4204                           fsr0h	equ	0xFEA
  4205                           fsr0l	equ	0xFE9
  4206                           wreg	equ	0xFE8
  4207                           postdec1	equ	0xFE5
  4208                           fsr1h	equ	0xFE2
  4209                           fsr1l	equ	0xFE1
  4210                           indf2	equ	0xFDF
  4211                           fsr2h	equ	0xFDA
  4212                           fsr2l	equ	0xFD9
  4213                           status	equ	0xFD8
  4214                           pclatu	equ	0xFFB
  4215                           pclath	equ	0xFFA
  4216                           tblptru	equ	0xFF8
  4217                           tblptrh	equ	0xFF7
  4218                           tblptrl	equ	0xFF6
  4219                           tablat	equ	0xFF5
  4220                           prodh	equ	0xFF4
  4221                           prodl	equ	0xFF3
  4222                           intcon	equ	0xFF2
  4223                           intcon3	equ	0xFF0
  4224                           postinc0	equ	0xFEE
  4225                           fsr0h	equ	0xFEA
  4226                           fsr0l	equ	0xFE9
  4227                           wreg	equ	0xFE8
  4228                           postdec1	equ	0xFE5
  4229                           fsr1h	equ	0xFE2
  4230                           fsr1l	equ	0xFE1
  4231                           indf2	equ	0xFDF
  4232                           fsr2h	equ	0xFDA
  4233                           fsr2l	equ	0xFD9
  4234                           status	equ	0xFD8
  4235                           
  4236                           	psect	rparam
  4237  0000                     pclatu	equ	0xFFB
  4238                           pclath	equ	0xFFA
  4239                           tblptru	equ	0xFF8
  4240                           tblptrh	equ	0xFF7
  4241                           tblptrl	equ	0xFF6
  4242                           tablat	equ	0xFF5
  4243                           prodh	equ	0xFF4
  4244                           prodl	equ	0xFF3
  4245                           intcon	equ	0xFF2
  4246                           intcon3	equ	0xFF0
  4247                           postinc0	equ	0xFEE
  4248                           fsr0h	equ	0xFEA
  4249                           fsr0l	equ	0xFE9
  4250                           wreg	equ	0xFE8
  4251                           postdec1	equ	0xFE5
  4252                           fsr1h	equ	0xFE2
  4253                           fsr1l	equ	0xFE1
  4254                           indf2	equ	0xFDF
  4255                           fsr2h	equ	0xFDA
  4256                           fsr2l	equ	0xFD9
  4257                           status	equ	0xFD8
  4258                           
  4259                           	psect	temp
  4260  00004F                     btemp:
  4261                           	opt stack 0
  4262  00004F                     	ds	1
  4263  0000                     int$flags	set	btemp
  4264                           pclatu	equ	0xFFB
  4265                           pclath	equ	0xFFA
  4266                           tblptru	equ	0xFF8
  4267                           tblptrh	equ	0xFF7
  4268                           tblptrl	equ	0xFF6
  4269                           tablat	equ	0xFF5
  4270                           prodh	equ	0xFF4
  4271                           prodl	equ	0xFF3
  4272                           intcon	equ	0xFF2
  4273                           intcon3	equ	0xFF0
  4274                           postinc0	equ	0xFEE
  4275                           fsr0h	equ	0xFEA
  4276                           fsr0l	equ	0xFE9
  4277                           wreg	equ	0xFE8
  4278                           postdec1	equ	0xFE5
  4279                           fsr1h	equ	0xFE2
  4280                           fsr1l	equ	0xFE1
  4281                           indf2	equ	0xFDF
  4282                           fsr2h	equ	0xFDA
  4283                           fsr2l	equ	0xFD9
  4284                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        4
    BSS         221
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     62      78
    BANK0           160     18     157
    BANK1           256      6      78
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->___ftadd
    ___lwtoft->___ftpack
    ___fttol->___ftadd
    ___ftmul->___lwtoft
    ___ftdiv->___ftmul
    ___ftadd->___ftdiv
    _Putc_TX1_16bits->_Putc_TX1
    _ConfigureHW->_Init1_RS232
    _Init1_RS232->___aldiv

Critical Paths under _isr in COMRAM

    _isr->i2_Set_Timer3

Critical Paths under _main in BANK0

    _main->___fttol
    ___fttol->___ftadd

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->___fttol

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   19647
                                             60 COMRAM     2     2      0
                      _Config_Timer0
                        _ConfigureHW
                     _I2C_Slave_Init
                             _Make16
                           _Putc_TX1
                    _Putc_TX1_16bits
                         _Set_Timer3
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___fttol
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             3     0      3    3014
                                             24 COMRAM     3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             15    11      4     641
                                              9 BANK0      9     5      4
                                              0 BANK1      6     6      0
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftmul                                             15     9      6    4061
                                             27 COMRAM    15     9      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             15     9      6    3633
                                             42 COMRAM    15     9      6
                            ___ftmul (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftadd                                             12     6      6    4938
                                             57 COMRAM     3     3      0
                                              0 BANK0      9     3      6
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    2893
                                             16 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _Set_Timer3                                           2     0      2     170
                                             16 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _Putc_TX1_16bits                                      4     2      2    1024
                                             17 COMRAM     4     2      2
                           _Putc_TX1
 ---------------------------------------------------------------------------------
 (2) _Putc_TX1                                             1     1      0      22
                                             16 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Make16                                               5     3      2     272
                                             16 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _I2C_Slave_Init                                       1     1      0      22
                                             16 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ConfigureHW                                          0     0      0    1850
                      _Config_Timer1
                      _Config_Timer3
                        _Init1_RS232
                         _No_Analogs
 ---------------------------------------------------------------------------------
 (2) _No_Analogs                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Init1_RS232                                         16    10      6    1850
                                             30 COMRAM    12     6      6
                            ___aldiv
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8    1516
                                             16 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (2) _Config_Timer3                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Config_Timer1                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Config_Timer0                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                 14    14      0      70
                                              2 COMRAM    14    14      0
                       i2_Set_Timer3
 ---------------------------------------------------------------------------------
 (5) i2_Set_Timer3                                         2     0      2      70
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Config_Timer0
   _ConfigureHW
     _Config_Timer1
     _Config_Timer3
     _Init1_RS232
       ___aldiv
     _No_Analogs
   _I2C_Slave_Init
   _Make16
   _Putc_TX1
   _Putc_TX1_16bits
     _Putc_TX1
   _Set_Timer3
   ___ftadd
     ___ftdiv (ARG)
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul (ARG)
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftpack (ARG)
     ___lwtoft (ARG)
       ___ftpack
   ___ftdiv
     ___ftmul (ARG)
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftpack (ARG)
     ___lwtoft (ARG)
       ___ftpack
   ___ftmul
     ___ftpack
     ___lwtoft (ARG)
       ___ftpack
   ___fttol
     ___ftadd (ARG)
       ___ftdiv (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftdiv (ARG)
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul (ARG)
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft (ARG)
       ___ftpack
   ___lwtoft
     ___ftpack

 _isr (ROOT)
   i2_Set_Timer3

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      6      4E       7       30.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     12      9D       5       98.1%
BITCOMRAM           5E      0       2       0        2.1%
COMRAM              5E     3E      4E       1       83.0%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     139      12        0.0%
DATA                 0      0     139       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Mon Aug 12 16:58:07 2019

                       _i 009E                        _VB 00B0             ??_Init1_RS232 0025  
            __CFG_CP0$OFF 000000              __CFG_CP1$OFF 000000              ___ftadd@exp1 00EF  
            ___ftadd@exp2 00EE              ___ftadd@sign 00ED                       l389 0DCE  
                     _BAT 00F9              __CFG_CPB$OFF 000000                       _MAP 00DD  
                     _SCC 00E5              __CFG_CPD$OFF 000000                       _map 00CA  
                     _isr 0008                       _tmr 00A2                       prod 000FF3  
                     wreg 000FE8              __CFG_LVP$OFF 000000              ___ftdiv@cntr 0034  
            ___ftdiv@sign 0039                      l1122 02D6                      l1124 02FE  
                    l1133 03D0                      l1142 03FA                      l1118 02A0  
                    l1153 0ABE                      l1095 0C4A                      l2802 0992  
                    l3610 0C02                      l3602 0BCC                      l3614 0C18  
                    l3606 0BDA                      l3702 0362                      l2760 0B46  
                    l3616 0C36                      l3608 0BE4                      l3704 0370  
                    l2762 0B52                      l2754 0B24                      l3618 0C40  
                    l3722 0424                      l3714 03B6                      l3706 037E  
                    l2780 0BAA                      l2772 0B86                      l2764 0B56  
                    l2748 0B0C                      l3732 0472                      l3716 03C4  
                    l3708 038A                      l3812 08BA                      l3742 0A32  
                    l3822 08E2                      l2776 0B94                      l3680 02E4  
                    l3808 08AA                      l3674 02AE                      l3818 08D2  
                    l3914 04E4                      l3748 0A5A                      l3836 071E  
                    l3932 0564                      l3916 04F8                      l3940 05E0  
                    l3908 04D2                      l3686 02F4                      l3854 07B0  
                    l3934 05A2                      l3696 0336                      l3768 0A98  
                    l3872 0816                      l3864 07E0                      l3936 05BC  
                    l3944 0600                      l3794 0878                      l3866 07F0  
                    l3858 07C4                      l3946 0604                      l3788 0850  
                    l3868 07FA                      l3958 0664                      ?_isr 0001  
                    u3017 04A2                      u3027 0DD4                      u2501 025A  
                    u2511 0272                      u2711 0A1A                      u2731 0A42  
                    u2821 06FA                      u2840 0744                      u2920 0614  
                    u2761 0838                      u2781 0860                      u2845 073A  
                    _RCIF 007CF5                      _TMR2 000FBC                      _TMR4 000F53  
                    _TMR6 000F4C                      _Rot1 0042                      _Rot2 0041  
                    _flag 026E                      _main 0498              ___ftpack@arg 0011  
            ___ftpack@exp 0014                      _shit 026F                      fsr0h 000FEA  
                    fsr1h 000FE2                      fsr2h 000FDA                      fsr0l 000FE9  
                    indf2 000FDF                      fsr1l 000FE1                      fsr2l 000FD9  
                    btemp 004F                      prodh 000FF4                      prodl 000FF3  
                    start 0244             __CFG_IESO$OFF 000000              ___ftmul@cntr 0029  
            ___param_bank 000000              ___ftmul@sign 002A              ___fttol@exp1 014D  
            ___fttol@lval 0149                     ??_isr 0003       __end_of_ConfigureHW 0D0E  
            _BAUDCON1bits 000FB8              _BAUDCON2bits 000F70           __end_of___aldiv 0BBC  
                   ?_main 0001           __end_of___ftadd 0498           __end_of___ftdiv 0AF0  
         __end_of___ftmul 091C           __end_of___fttol 0828                     _RC1IE 007CED  
                   _RC1IF 007CF5                     _RC2IE 007D1D                     _RC2IF 007D25  
                   i2l251 004A                     i2l252 0060                     i2l254 0056  
                   i2l272 0208                     i2l256 006E                     i2l267 01BA  
                   i2l269 01B4                     _TMR0H 000FD7                     _TMR1H 000FCF  
                   _TX1IE 007CEC                     _TMR0L 000FD6                     _TMR1L 000FCE  
                   _TMR3H 000FB3                     _TX2IE 007D1C                     _TX2IF 007D24  
                   _TMR3L 000FB2                     _TMR5H 000F50                     _TMR5L 000F4F  
                   _PORTB 000F81                     _TRMT1 007D61                     _TRISE 000F96  
     _estado_controle_ign 0045                     _IgDnt 0048                     _IjDnt 0044  
           __CFG_WRT0$OFF 000000             __CFG_WRT1$OFF 000000       __end_of_Init1_RS232 0A0A  
                   _Count 00AE                     _Pedal 00DE            __CFG_EBTR0$OFF 000000  
          __CFG_FCMEN$OFF 000000            __CFG_EBTR1$OFF 000000             __CFG_WRTB$OFF 000000  
           __CFG_WRTC$OFF 000000             __CFG_WRTD$OFF 000000            __CFG_EBTRB$OFF 000000  
                   _index 0040                     _limpa 00D6             ___ftpack@sign 0015  
                   _valor 013A                     _tempo 0096            __pbitbssCOMRAM 0268  
                   pclath 000FFA                     tablat 000FF5                     status 000FD8  
              _No_Analogs 0D5E            __CFG_FOSC$HSHP 000000            _ij_tmr_disparo 00B6  
         __initialization 0C6A              __end_of_main 06E4           _Putc_TX1_16bits 0DB2  
                  ??_main 003D             ___fttol@sign1 0148             __activetblptr 000002  
          __CFG_PLLCFG$ON 000000          __end_of_Putc_TX1 0DDC                    _ADRESH 000FC4  
                  _ANSELA 000F38                    _ANSELB 000F39                    _ANSELC 000F3A  
                  _ANSELD 000F3B                    _ANSELE 000F3C          __end_of___ftpack 0C6A  
                  i2l3300 01C6                    i2l3252 0132                    i2l3260 014C  
                  i2l3274 0178                    i2l3258 014A                    i2l3290 01A4  
                  i2l3286 01A0                    _RCREG1 000FAE                    _RCREG2 000F74  
        __end_of___lwtoft 0D5E                _SetVetVel2 00DF                    _RCSTA1 000FAB  
                  _RCSTA2 000F71                _Set_Timer3 0E00                    _SPBRG1 000FAF  
                  _TMR1IE 007CE8                    _TMR3IE 007D01                    _TMR5IE 007BE9  
                  _SSP1IP 007CFB                    _TRISA0 007C90                    _TRISB0 007C98  
                  _TRISB1 007C99                    _TRISC0 007CA0                    _TRISB2 007C9A  
                  _TRISC1 007CA1                    _TRISA5 007C95                    _TRISC2 007CA2  
                  _TRISD0 007CA8                    _TRISC3 007CA3                    _TRISD1 007CA9  
                  _TRISC4 007CA4                    _TRISB7 007C9F                    _TRISC5 007CA5  
                  _TRISD3 007CAB                    _TRISC6 007CA6                    _TRISD4 007CAC  
                  _TRISC7 007CA7                    _TRISD6 007CAE                    _TRISD7 007CAF  
                  _TXREG1 000FAD                    _TXREG2 000F73                    _TXSTA1 000FAC  
                  _TXSTA2 000F72                    _Make16 0D7E                    _Lambda 00FB  
             _ConfigureHW 0CC0            __CFG_XINST$OFF 000000                    _TempAg 00DB  
                  _TempAr 00DC                    _TmrBob 00E2               _InjDntExtra 00E0  
               ??___aldiv 0019                 ??___ftadd 003A            __CFG_STVREN$ON 000000  
                  _angle1 00DA                    _angle2 00D9                 ??___ftdiv 0031  
               ??___ftmul 0022                 ??___fttol 00F4                    _buffer 0074  
                  _t_agua 00BC                    _logica 0270                    _ref_vb 0043  
                  clear_0 0C90                    clear_1 0C9C                    clear_2 0CAC  
             _Init1_RS232 091C               _CountCANRot 00A8                    _txbuff 012A  
   ___ftmul@f3_as_product 0026                    tblptrh 000FF7                    tblptrl 000FF6  
                  tblptru 000FF8               _InjTrigger1 00E4               _InjTrigger2 00E3  
             _CountSerial 00A4                __accesstop 0060   __end_of__initialization 0CB2  
         _char_serial_ant 004C               ?_No_Analogs 0001                ___ftadd@f1 00E7  
              ___ftadd@f2 00EA   __end_of_Putc_TX1_16bits 0DC8             ___rparam_used 000001  
              ___ftdiv@f1 002B                ___ftdiv@f2 002E                ___ftdiv@f3 0035  
     Init1_RS232@velocity 001F                ___ftmul@f1 001C                ___ftmul@f2 001F  
              ___fttol@f1 00F0            __pcstackCOMRAM 0001              __pidataBANK0 0E14  
 __size_of_I2C_Slave_Init 002C     __end_of_Config_Timer0 0E00     __end_of_Config_Timer1 0DEE  
   __end_of_Config_Timer3 0DB2                ___lwtoft@c 0019     I2C_Slave_Init@address 0011  
              __pbssBANK0 0060                __pbssBANK1 0100               ?_Set_Timer3 0011  
                 ?_Make16 0011                 ?_Putc_TX1 0001                 ?___ftpack 0011  
               ?___lwtoft 0019       __size_of_No_Analogs 0020               _Select_Data 0049  
              _buffer_ger 0090                   _SSP1ADD 000FC8                   _SSP1BUF 000FC9  
                 _SSP2BUF 000F6F          ?_Putc_TX1_16bits 0012           __size_of_Make16 001A  
                 __Hparam 0000                _index_read 003F                   __Lparam 0000  
                 _VarTest 009C                   _TmrInj1 0047                   _TmrInj2 0046  
                 ___aldiv 0AF0                ??_Putc_TX1 0011                   ___ftadd 0248  
                 ___ftdiv 0A0A                   ___ftmul 0828                   ___fttol 06E4  
                 _address 00D7                   _can_ctr 00D4                   __pcinit 0C6A  
              ??___ftpack 0016                   __ramtop 1000                   __ptext0 0498  
                 __ptext1 0D3A                   __ptext2 06E4                   __ptext3 0828  
                 __ptext4 0A0A                   __ptext5 0248                   __ptext6 0BBC  
                 __ptext7 0E00                   __ptext8 0DB2                   __ptext9 0DC8  
      _final_i2c_admissao 0269                   _lcd_ctr 00D2       __size_of_Set_Timer3 000A  
              ??___lwtoft 001C                 _T0CONbits 000FD5                 _T1CONbits 000FCD  
               _T2CONbits 000FBA              __size_of_isr 023C                 _T3CONbits 000FB1  
                 _ref_rpm 00BA                   _percent 00A0          ___aldiv@dividend 0011  
               _T4CONbits 000F51              _CountCANTemp 00A6                 _T5CONbits 000F4E  
               _T6CONbits 000F4A                   _spi_ctr 00D0                   _rotacao 008C  
    end_of_initialization 0CB2             __Lmediumconst 0000              ?_ConfigureHW 0001  
          _I2C_Slave_Init 0D0E          ___aldiv@quotient 001B                   postdec1 000FE5  
                 postinc0 000FEE              ?_Init1_RS232 001F                 _TRISAbits 000F92  
               _TRISBbits 000F93                 _TRISCbits 000F94                 _TRISEbits 000F96  
  i2Set_Timer3@data_timer 0001             ?i2_Set_Timer3 0001              ??_No_Analogs 0011  
             ___ftdiv@exp 0038    __end_of_I2C_Slave_Init 0D3A            __end_of_Make16 0D98  
             ___ftmul@exp 0025                 _IgTrigger 00E1        __end_of_No_Analogs 0D7E  
     start_initialization 0C6A               __end_of_isr 0244                 _Old_Value 0100  
          ??i2_Set_Timer3 0003              ??_Set_Timer3 0013                  ??_Make16 0013  
         ?_I2C_Slave_Init 0001                 _TempMotor 00AC               __pdataBANK0 00F9  
          _flag_send_sinc 026D                 _UpdateRot 00AA         __size_of_Putc_TX1 0014  
      __end_of_Set_Timer3 0E0A         __size_of___ftpack 00AE               __pbssCOMRAM 003F  
       __size_of___lwtoft 0024             __pcstackBANK0 00E7             __pcstackBANK1 0148  
             _char_serial 004B    __size_of_Config_Timer0 0012    __size_of_Config_Timer1 0012  
  __size_of_Config_Timer3 001A                 __pintcode 0008      __size_of_ConfigureHW 004E  
                ?___aldiv 0011                  ?___ftadd 00E7                  ?___ftdiv 002B  
                ?___ftmul 001C                  ?___fttol 00F0      __size_of_Init1_RS232 00EE  
             _ig_dente_14 00C8     _final_i2c_sincronismo 026A               _flag_serial 004A  
         ___aldiv@divisor 0015           ___aldiv@counter 0019                  _LATAbits 000F89  
                _LATBbits 000F8A                  _LATCbits 000F8B                  _LATEbits 000F8D  
             _ij_dente_14 00C2                  _PIE1bits 000F9D                  _PIE2bits 000FA0  
                i2u217_40 01FC                  _PIR1bits 000F9E                  _PIR2bits 000FA1  
             _buffer_read 0116                  _RCONbits 000FD0          __CFG_WDTPS$32768 000000  
               _tempo_bob 00C6                 _tempo_inj 00C4                  _SSP1CON1 000FC6  
                _SSP1CON2 000FC5                  _SSP2CON1 000F6C                  _SSP1STAT 000FC7  
                _SSP2STAT 000F6D  __size_of_Putc_TX1_16bits 0016             _Config_Timer0 0DEE  
           _Config_Timer1 0DDC             _Config_Timer3 0D98                 _rotacao_4 0088  
    __end_ofi2_Set_Timer3 0E14                _ADCON0bits 000FC2                _ADCON1bits 000FC1  
              _ADCON2bits 000FC0       Putc_TX1_16bits@dado 0012               _INTCON2bits 000FF1  
             _INTCON3bits 000FF0                 copy_data0 0C7E                  __Hrparam 0000  
                __Lrparam 0000             _flag_send_adm 026B             _flag_send_ger 026C  
                _Putc_TX1 0DC8          __size_of___aldiv 00CC            ?_Config_Timer0 0001  
          ?_Config_Timer1 0001            ?_Config_Timer3 0001          __size_of___ftadd 0250  
        __size_of___ftdiv 00E6          __size_of___ftmul 00F4          __size_of___fttol 0144  
                ___ftpack 0BBC                  ___lwtoft 0D3A                  _dado_i2c 00D8  
           _tempo_inj_com 0099               Make16@data1 0015               Make16@data2 0011  
                __ptext10 0D7E                  __ptext11 0D0E                  __ptext20 0E0A  
                __ptext12 0CC0                  __ptext13 0D5E                  __ptext14 091C  
                __ptext15 0AF0                  __ptext16 0D98                  __ptext17 0DDC  
                __ptext18 0DEE              _SSP1CON1bits 000FC6                  _cont_SCC 00B4  
        ??_I2C_Slave_Init 0011             Putc_TX1@valor 0011                  _p_etanol 0093  
        _Init1_RS232$3408 0027                  _pedal_ad 00CC             __size_of_main 024C  
                _t_ar_com 00BE            _buffer_already 0060                  _temp_bob 00C0  
                int$flags 004F       _teste_envio_william 00CE              _SSP1STATbits 000FC7  
            _SSP2STATbits 000F6D   _final_i2c_gerenciamento 0268        Putc_TX1_16bits@lsb 0015  
      Putc_TX1_16bits@msb 0014                _INTCONbits 000FF2         ??_Putc_TX1_16bits 0014  
        Init1_RS232@value 0025      Set_Timer3@data_timer 0011                  intlevel2 0000  
              _RCSTA1bits 000FAB            _ig_tmr_disparo 00B8           ??_Config_Timer0 0011  
         ??_Config_Timer1 0011           ??_Config_Timer3 0011     __size_ofi2_Set_Timer3 000A  
         Init1_RS232@mode 0023               _porc_etanol 00B2              ___aldiv@sign 001A  
            i2_Set_Timer3 0E0A             ??_ConfigureHW 002B  
